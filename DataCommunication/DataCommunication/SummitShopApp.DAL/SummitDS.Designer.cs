//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace SummitShopApp.DAL {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SummitDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SummitDS : global::System.Data.DataSet {
        
        private AccidentReportDataTable tableAccidentReport;
        
        private VehicleInfoDataTable tableVehicleInfo;
        
        private InsuranceInformationDataTable tableInsuranceInformation;
        
        private MessageDataTable tableMessage;
        
        private UserDataTable tableUser;
        
        private User_PreferredShopDataTable tableUser_PreferredShop;
        
        private ZipCodeDataTable tableZipCode;
        
        private UnreadUsersFromRepairProspectDataTable tableUnreadUsersFromRepairProspect;
        
        private DeletedUsersFromRepairProspectDataTable tableDeletedUsersFromRepairProspect;
        
        private MarketingUsersDataTable tableMarketingUsers;
        
        private SP_Search_InProcessUsersDataTable tableSP_Search_InProcessUsers;
        
        private SP_Search_EmailTextMarketingCentersDataTable tableSP_Search_EmailTextMarketingCenters;
        
        private BodyShop_PrivateLabelDataTable tableBodyShop_PrivateLabel;
        
        private CampaignDataTable tableCampaign;
        
        private CommunicationHistoryDataTable tableCommunicationHistory;
        
        private GetShopIdsByZipCodeDataTable tableGetShopIdsByZipCode;
        
        private LoginDataTable tableLogin;
        
        private VehicleMediaLinkDataTable tableVehicleMediaLink;
        
        private UserVehicleStatusDataTable tableUserVehicleStatus;
        
        private View_MyCustomerDataTable tableView_MyCustomer;
        
        private ScheduledUsersDataTable tableScheduledUsers;
        
        private ReocurringCampaignUsersDataTable tableReocurringCampaignUsers;
        
        private FrequencyDataTable tableFrequency;
        
        private AIManageRecurringActivityDataTable tableAIManageRecurringActivity;
        
        private BodyShopDataTable tableBodyShop;
        
        private VehicleStatusDataTable tableVehicleStatus;
        
        private AutoImporterShopsDataTable tableAutoImporterShops;
        
        private User_Audit_TrailDataTable tableUser_Audit_Trail;
        
        private ConnectAPIDataTable tableConnectAPI;
        
        private global::System.Data.DataRelation relationFK_AccidentReport_User;
        
        private global::System.Data.DataRelation relationFK_VehicleInfo_VehicleInfo;
        
        private global::System.Data.DataRelation relationFK_InsuranceInformation_User;
        
        private global::System.Data.DataRelation relationFK_AccidentReport_Message;
        
        private global::System.Data.DataRelation relationFK_UserPreferedShop_User;
        
        private global::System.Data.DataRelation relationFK_MarketingUsers_MarketingUsers;
        
        private global::System.Data.DataRelation relationFK_MarketingUsers_VehicleInfo;
        
        private global::System.Data.DataRelation relationFK_CommunicationHistory_User;
        
        private global::System.Data.DataRelation relationFK_Login_id;
        
        private global::System.Data.DataRelation relationFK_VehicleMediaLink_VehicleInfo;
        
        private global::System.Data.DataRelation relationFK_UserVechicleStatus_User;
        
        private global::System.Data.DataRelation relationFK_UserVechicleStatus_VehicleInfo;
        
        private global::System.Data.DataRelation relationFK_ReocurringCampaignUsers_User;
        
        private global::System.Data.DataRelation relationFK_ReocurringCampaignUsers_Frequency;
        
        private global::System.Data.DataRelation relationFK_UserPreferedShop_Shop;
        
        private global::System.Data.DataRelation relationFK_MarketingUsers_BodyShop;
        
        private global::System.Data.DataRelation relationFK_CommunicationHistory_BodyShop;
        
        private global::System.Data.DataRelation relationFK_Login_ShopID;
        
        private global::System.Data.DataRelation relationFK_ScheduledUsers_BodyShop;
        
        private global::System.Data.DataRelation relationFK_ReocurringCampaignUsers_BodyShop;
        
        private global::System.Data.DataRelation relationFK_VehicleStatus_BodyShop;
        
        private global::System.Data.DataRelation relationFK_User_Audit_Trail_User;
        
        private global::System.Data.DataRelation relationFK_User_Audit_Trail_VehicleInfo;
        
        private global::System.Data.DataRelation relationFK_BodyShop_ConnectApi;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SummitDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SummitDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["AccidentReport"] != null)) {
                    base.Tables.Add(new AccidentReportDataTable(ds.Tables["AccidentReport"]));
                }
                if ((ds.Tables["VehicleInfo"] != null)) {
                    base.Tables.Add(new VehicleInfoDataTable(ds.Tables["VehicleInfo"]));
                }
                if ((ds.Tables["InsuranceInformation"] != null)) {
                    base.Tables.Add(new InsuranceInformationDataTable(ds.Tables["InsuranceInformation"]));
                }
                if ((ds.Tables["Message"] != null)) {
                    base.Tables.Add(new MessageDataTable(ds.Tables["Message"]));
                }
                if ((ds.Tables["User"] != null)) {
                    base.Tables.Add(new UserDataTable(ds.Tables["User"]));
                }
                if ((ds.Tables["User_PreferredShop"] != null)) {
                    base.Tables.Add(new User_PreferredShopDataTable(ds.Tables["User_PreferredShop"]));
                }
                if ((ds.Tables["ZipCode"] != null)) {
                    base.Tables.Add(new ZipCodeDataTable(ds.Tables["ZipCode"]));
                }
                if ((ds.Tables["UnreadUsersFromRepairProspect"] != null)) {
                    base.Tables.Add(new UnreadUsersFromRepairProspectDataTable(ds.Tables["UnreadUsersFromRepairProspect"]));
                }
                if ((ds.Tables["DeletedUsersFromRepairProspect"] != null)) {
                    base.Tables.Add(new DeletedUsersFromRepairProspectDataTable(ds.Tables["DeletedUsersFromRepairProspect"]));
                }
                if ((ds.Tables["MarketingUsers"] != null)) {
                    base.Tables.Add(new MarketingUsersDataTable(ds.Tables["MarketingUsers"]));
                }
                if ((ds.Tables["SP_Search_InProcessUsers"] != null)) {
                    base.Tables.Add(new SP_Search_InProcessUsersDataTable(ds.Tables["SP_Search_InProcessUsers"]));
                }
                if ((ds.Tables["SP_Search_EmailTextMarketingCenters"] != null)) {
                    base.Tables.Add(new SP_Search_EmailTextMarketingCentersDataTable(ds.Tables["SP_Search_EmailTextMarketingCenters"]));
                }
                if ((ds.Tables["BodyShop_PrivateLabel"] != null)) {
                    base.Tables.Add(new BodyShop_PrivateLabelDataTable(ds.Tables["BodyShop_PrivateLabel"]));
                }
                if ((ds.Tables["Campaign"] != null)) {
                    base.Tables.Add(new CampaignDataTable(ds.Tables["Campaign"]));
                }
                if ((ds.Tables["CommunicationHistory"] != null)) {
                    base.Tables.Add(new CommunicationHistoryDataTable(ds.Tables["CommunicationHistory"]));
                }
                if ((ds.Tables["GetShopIdsByZipCode"] != null)) {
                    base.Tables.Add(new GetShopIdsByZipCodeDataTable(ds.Tables["GetShopIdsByZipCode"]));
                }
                if ((ds.Tables["Login"] != null)) {
                    base.Tables.Add(new LoginDataTable(ds.Tables["Login"]));
                }
                if ((ds.Tables["VehicleMediaLink"] != null)) {
                    base.Tables.Add(new VehicleMediaLinkDataTable(ds.Tables["VehicleMediaLink"]));
                }
                if ((ds.Tables["UserVehicleStatus"] != null)) {
                    base.Tables.Add(new UserVehicleStatusDataTable(ds.Tables["UserVehicleStatus"]));
                }
                if ((ds.Tables["View_MyCustomer"] != null)) {
                    base.Tables.Add(new View_MyCustomerDataTable(ds.Tables["View_MyCustomer"]));
                }
                if ((ds.Tables["ScheduledUsers"] != null)) {
                    base.Tables.Add(new ScheduledUsersDataTable(ds.Tables["ScheduledUsers"]));
                }
                if ((ds.Tables["ReocurringCampaignUsers"] != null)) {
                    base.Tables.Add(new ReocurringCampaignUsersDataTable(ds.Tables["ReocurringCampaignUsers"]));
                }
                if ((ds.Tables["Frequency"] != null)) {
                    base.Tables.Add(new FrequencyDataTable(ds.Tables["Frequency"]));
                }
                if ((ds.Tables["AIManageRecurringActivity"] != null)) {
                    base.Tables.Add(new AIManageRecurringActivityDataTable(ds.Tables["AIManageRecurringActivity"]));
                }
                if ((ds.Tables["BodyShop"] != null)) {
                    base.Tables.Add(new BodyShopDataTable(ds.Tables["BodyShop"]));
                }
                if ((ds.Tables["VehicleStatus"] != null)) {
                    base.Tables.Add(new VehicleStatusDataTable(ds.Tables["VehicleStatus"]));
                }
                if ((ds.Tables["AutoImporterShops"] != null)) {
                    base.Tables.Add(new AutoImporterShopsDataTable(ds.Tables["AutoImporterShops"]));
                }
                if ((ds.Tables["User_Audit_Trail"] != null)) {
                    base.Tables.Add(new User_Audit_TrailDataTable(ds.Tables["User_Audit_Trail"]));
                }
                if ((ds.Tables["ConnectAPI"] != null)) {
                    base.Tables.Add(new ConnectAPIDataTable(ds.Tables["ConnectAPI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AccidentReportDataTable AccidentReport {
            get {
                return this.tableAccidentReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VehicleInfoDataTable VehicleInfo {
            get {
                return this.tableVehicleInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InsuranceInformationDataTable InsuranceInformation {
            get {
                return this.tableInsuranceInformation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MessageDataTable Message {
            get {
                return this.tableMessage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UserDataTable User {
            get {
                return this.tableUser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public User_PreferredShopDataTable User_PreferredShop {
            get {
                return this.tableUser_PreferredShop;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ZipCodeDataTable ZipCode {
            get {
                return this.tableZipCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UnreadUsersFromRepairProspectDataTable UnreadUsersFromRepairProspect {
            get {
                return this.tableUnreadUsersFromRepairProspect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DeletedUsersFromRepairProspectDataTable DeletedUsersFromRepairProspect {
            get {
                return this.tableDeletedUsersFromRepairProspect;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MarketingUsersDataTable MarketingUsers {
            get {
                return this.tableMarketingUsers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_Search_InProcessUsersDataTable SP_Search_InProcessUsers {
            get {
                return this.tableSP_Search_InProcessUsers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SP_Search_EmailTextMarketingCentersDataTable SP_Search_EmailTextMarketingCenters {
            get {
                return this.tableSP_Search_EmailTextMarketingCenters;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BodyShop_PrivateLabelDataTable BodyShop_PrivateLabel {
            get {
                return this.tableBodyShop_PrivateLabel;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CampaignDataTable Campaign {
            get {
                return this.tableCampaign;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CommunicationHistoryDataTable CommunicationHistory {
            get {
                return this.tableCommunicationHistory;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetShopIdsByZipCodeDataTable GetShopIdsByZipCode {
            get {
                return this.tableGetShopIdsByZipCode;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LoginDataTable Login {
            get {
                return this.tableLogin;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VehicleMediaLinkDataTable VehicleMediaLink {
            get {
                return this.tableVehicleMediaLink;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UserVehicleStatusDataTable UserVehicleStatus {
            get {
                return this.tableUserVehicleStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_MyCustomerDataTable View_MyCustomer {
            get {
                return this.tableView_MyCustomer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ScheduledUsersDataTable ScheduledUsers {
            get {
                return this.tableScheduledUsers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReocurringCampaignUsersDataTable ReocurringCampaignUsers {
            get {
                return this.tableReocurringCampaignUsers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FrequencyDataTable Frequency {
            get {
                return this.tableFrequency;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AIManageRecurringActivityDataTable AIManageRecurringActivity {
            get {
                return this.tableAIManageRecurringActivity;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BodyShopDataTable BodyShop {
            get {
                return this.tableBodyShop;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VehicleStatusDataTable VehicleStatus {
            get {
                return this.tableVehicleStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AutoImporterShopsDataTable AutoImporterShops {
            get {
                return this.tableAutoImporterShops;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public User_Audit_TrailDataTable User_Audit_Trail {
            get {
                return this.tableUser_Audit_Trail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ConnectAPIDataTable ConnectAPI {
            get {
                return this.tableConnectAPI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SummitDS cln = ((SummitDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["AccidentReport"] != null)) {
                    base.Tables.Add(new AccidentReportDataTable(ds.Tables["AccidentReport"]));
                }
                if ((ds.Tables["VehicleInfo"] != null)) {
                    base.Tables.Add(new VehicleInfoDataTable(ds.Tables["VehicleInfo"]));
                }
                if ((ds.Tables["InsuranceInformation"] != null)) {
                    base.Tables.Add(new InsuranceInformationDataTable(ds.Tables["InsuranceInformation"]));
                }
                if ((ds.Tables["Message"] != null)) {
                    base.Tables.Add(new MessageDataTable(ds.Tables["Message"]));
                }
                if ((ds.Tables["User"] != null)) {
                    base.Tables.Add(new UserDataTable(ds.Tables["User"]));
                }
                if ((ds.Tables["User_PreferredShop"] != null)) {
                    base.Tables.Add(new User_PreferredShopDataTable(ds.Tables["User_PreferredShop"]));
                }
                if ((ds.Tables["ZipCode"] != null)) {
                    base.Tables.Add(new ZipCodeDataTable(ds.Tables["ZipCode"]));
                }
                if ((ds.Tables["UnreadUsersFromRepairProspect"] != null)) {
                    base.Tables.Add(new UnreadUsersFromRepairProspectDataTable(ds.Tables["UnreadUsersFromRepairProspect"]));
                }
                if ((ds.Tables["DeletedUsersFromRepairProspect"] != null)) {
                    base.Tables.Add(new DeletedUsersFromRepairProspectDataTable(ds.Tables["DeletedUsersFromRepairProspect"]));
                }
                if ((ds.Tables["MarketingUsers"] != null)) {
                    base.Tables.Add(new MarketingUsersDataTable(ds.Tables["MarketingUsers"]));
                }
                if ((ds.Tables["SP_Search_InProcessUsers"] != null)) {
                    base.Tables.Add(new SP_Search_InProcessUsersDataTable(ds.Tables["SP_Search_InProcessUsers"]));
                }
                if ((ds.Tables["SP_Search_EmailTextMarketingCenters"] != null)) {
                    base.Tables.Add(new SP_Search_EmailTextMarketingCentersDataTable(ds.Tables["SP_Search_EmailTextMarketingCenters"]));
                }
                if ((ds.Tables["BodyShop_PrivateLabel"] != null)) {
                    base.Tables.Add(new BodyShop_PrivateLabelDataTable(ds.Tables["BodyShop_PrivateLabel"]));
                }
                if ((ds.Tables["Campaign"] != null)) {
                    base.Tables.Add(new CampaignDataTable(ds.Tables["Campaign"]));
                }
                if ((ds.Tables["CommunicationHistory"] != null)) {
                    base.Tables.Add(new CommunicationHistoryDataTable(ds.Tables["CommunicationHistory"]));
                }
                if ((ds.Tables["GetShopIdsByZipCode"] != null)) {
                    base.Tables.Add(new GetShopIdsByZipCodeDataTable(ds.Tables["GetShopIdsByZipCode"]));
                }
                if ((ds.Tables["Login"] != null)) {
                    base.Tables.Add(new LoginDataTable(ds.Tables["Login"]));
                }
                if ((ds.Tables["VehicleMediaLink"] != null)) {
                    base.Tables.Add(new VehicleMediaLinkDataTable(ds.Tables["VehicleMediaLink"]));
                }
                if ((ds.Tables["UserVehicleStatus"] != null)) {
                    base.Tables.Add(new UserVehicleStatusDataTable(ds.Tables["UserVehicleStatus"]));
                }
                if ((ds.Tables["View_MyCustomer"] != null)) {
                    base.Tables.Add(new View_MyCustomerDataTable(ds.Tables["View_MyCustomer"]));
                }
                if ((ds.Tables["ScheduledUsers"] != null)) {
                    base.Tables.Add(new ScheduledUsersDataTable(ds.Tables["ScheduledUsers"]));
                }
                if ((ds.Tables["ReocurringCampaignUsers"] != null)) {
                    base.Tables.Add(new ReocurringCampaignUsersDataTable(ds.Tables["ReocurringCampaignUsers"]));
                }
                if ((ds.Tables["Frequency"] != null)) {
                    base.Tables.Add(new FrequencyDataTable(ds.Tables["Frequency"]));
                }
                if ((ds.Tables["AIManageRecurringActivity"] != null)) {
                    base.Tables.Add(new AIManageRecurringActivityDataTable(ds.Tables["AIManageRecurringActivity"]));
                }
                if ((ds.Tables["BodyShop"] != null)) {
                    base.Tables.Add(new BodyShopDataTable(ds.Tables["BodyShop"]));
                }
                if ((ds.Tables["VehicleStatus"] != null)) {
                    base.Tables.Add(new VehicleStatusDataTable(ds.Tables["VehicleStatus"]));
                }
                if ((ds.Tables["AutoImporterShops"] != null)) {
                    base.Tables.Add(new AutoImporterShopsDataTable(ds.Tables["AutoImporterShops"]));
                }
                if ((ds.Tables["User_Audit_Trail"] != null)) {
                    base.Tables.Add(new User_Audit_TrailDataTable(ds.Tables["User_Audit_Trail"]));
                }
                if ((ds.Tables["ConnectAPI"] != null)) {
                    base.Tables.Add(new ConnectAPIDataTable(ds.Tables["ConnectAPI"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableAccidentReport = ((AccidentReportDataTable)(base.Tables["AccidentReport"]));
            if ((initTable == true)) {
                if ((this.tableAccidentReport != null)) {
                    this.tableAccidentReport.InitVars();
                }
            }
            this.tableVehicleInfo = ((VehicleInfoDataTable)(base.Tables["VehicleInfo"]));
            if ((initTable == true)) {
                if ((this.tableVehicleInfo != null)) {
                    this.tableVehicleInfo.InitVars();
                }
            }
            this.tableInsuranceInformation = ((InsuranceInformationDataTable)(base.Tables["InsuranceInformation"]));
            if ((initTable == true)) {
                if ((this.tableInsuranceInformation != null)) {
                    this.tableInsuranceInformation.InitVars();
                }
            }
            this.tableMessage = ((MessageDataTable)(base.Tables["Message"]));
            if ((initTable == true)) {
                if ((this.tableMessage != null)) {
                    this.tableMessage.InitVars();
                }
            }
            this.tableUser = ((UserDataTable)(base.Tables["User"]));
            if ((initTable == true)) {
                if ((this.tableUser != null)) {
                    this.tableUser.InitVars();
                }
            }
            this.tableUser_PreferredShop = ((User_PreferredShopDataTable)(base.Tables["User_PreferredShop"]));
            if ((initTable == true)) {
                if ((this.tableUser_PreferredShop != null)) {
                    this.tableUser_PreferredShop.InitVars();
                }
            }
            this.tableZipCode = ((ZipCodeDataTable)(base.Tables["ZipCode"]));
            if ((initTable == true)) {
                if ((this.tableZipCode != null)) {
                    this.tableZipCode.InitVars();
                }
            }
            this.tableUnreadUsersFromRepairProspect = ((UnreadUsersFromRepairProspectDataTable)(base.Tables["UnreadUsersFromRepairProspect"]));
            if ((initTable == true)) {
                if ((this.tableUnreadUsersFromRepairProspect != null)) {
                    this.tableUnreadUsersFromRepairProspect.InitVars();
                }
            }
            this.tableDeletedUsersFromRepairProspect = ((DeletedUsersFromRepairProspectDataTable)(base.Tables["DeletedUsersFromRepairProspect"]));
            if ((initTable == true)) {
                if ((this.tableDeletedUsersFromRepairProspect != null)) {
                    this.tableDeletedUsersFromRepairProspect.InitVars();
                }
            }
            this.tableMarketingUsers = ((MarketingUsersDataTable)(base.Tables["MarketingUsers"]));
            if ((initTable == true)) {
                if ((this.tableMarketingUsers != null)) {
                    this.tableMarketingUsers.InitVars();
                }
            }
            this.tableSP_Search_InProcessUsers = ((SP_Search_InProcessUsersDataTable)(base.Tables["SP_Search_InProcessUsers"]));
            if ((initTable == true)) {
                if ((this.tableSP_Search_InProcessUsers != null)) {
                    this.tableSP_Search_InProcessUsers.InitVars();
                }
            }
            this.tableSP_Search_EmailTextMarketingCenters = ((SP_Search_EmailTextMarketingCentersDataTable)(base.Tables["SP_Search_EmailTextMarketingCenters"]));
            if ((initTable == true)) {
                if ((this.tableSP_Search_EmailTextMarketingCenters != null)) {
                    this.tableSP_Search_EmailTextMarketingCenters.InitVars();
                }
            }
            this.tableBodyShop_PrivateLabel = ((BodyShop_PrivateLabelDataTable)(base.Tables["BodyShop_PrivateLabel"]));
            if ((initTable == true)) {
                if ((this.tableBodyShop_PrivateLabel != null)) {
                    this.tableBodyShop_PrivateLabel.InitVars();
                }
            }
            this.tableCampaign = ((CampaignDataTable)(base.Tables["Campaign"]));
            if ((initTable == true)) {
                if ((this.tableCampaign != null)) {
                    this.tableCampaign.InitVars();
                }
            }
            this.tableCommunicationHistory = ((CommunicationHistoryDataTable)(base.Tables["CommunicationHistory"]));
            if ((initTable == true)) {
                if ((this.tableCommunicationHistory != null)) {
                    this.tableCommunicationHistory.InitVars();
                }
            }
            this.tableGetShopIdsByZipCode = ((GetShopIdsByZipCodeDataTable)(base.Tables["GetShopIdsByZipCode"]));
            if ((initTable == true)) {
                if ((this.tableGetShopIdsByZipCode != null)) {
                    this.tableGetShopIdsByZipCode.InitVars();
                }
            }
            this.tableLogin = ((LoginDataTable)(base.Tables["Login"]));
            if ((initTable == true)) {
                if ((this.tableLogin != null)) {
                    this.tableLogin.InitVars();
                }
            }
            this.tableVehicleMediaLink = ((VehicleMediaLinkDataTable)(base.Tables["VehicleMediaLink"]));
            if ((initTable == true)) {
                if ((this.tableVehicleMediaLink != null)) {
                    this.tableVehicleMediaLink.InitVars();
                }
            }
            this.tableUserVehicleStatus = ((UserVehicleStatusDataTable)(base.Tables["UserVehicleStatus"]));
            if ((initTable == true)) {
                if ((this.tableUserVehicleStatus != null)) {
                    this.tableUserVehicleStatus.InitVars();
                }
            }
            this.tableView_MyCustomer = ((View_MyCustomerDataTable)(base.Tables["View_MyCustomer"]));
            if ((initTable == true)) {
                if ((this.tableView_MyCustomer != null)) {
                    this.tableView_MyCustomer.InitVars();
                }
            }
            this.tableScheduledUsers = ((ScheduledUsersDataTable)(base.Tables["ScheduledUsers"]));
            if ((initTable == true)) {
                if ((this.tableScheduledUsers != null)) {
                    this.tableScheduledUsers.InitVars();
                }
            }
            this.tableReocurringCampaignUsers = ((ReocurringCampaignUsersDataTable)(base.Tables["ReocurringCampaignUsers"]));
            if ((initTable == true)) {
                if ((this.tableReocurringCampaignUsers != null)) {
                    this.tableReocurringCampaignUsers.InitVars();
                }
            }
            this.tableFrequency = ((FrequencyDataTable)(base.Tables["Frequency"]));
            if ((initTable == true)) {
                if ((this.tableFrequency != null)) {
                    this.tableFrequency.InitVars();
                }
            }
            this.tableAIManageRecurringActivity = ((AIManageRecurringActivityDataTable)(base.Tables["AIManageRecurringActivity"]));
            if ((initTable == true)) {
                if ((this.tableAIManageRecurringActivity != null)) {
                    this.tableAIManageRecurringActivity.InitVars();
                }
            }
            this.tableBodyShop = ((BodyShopDataTable)(base.Tables["BodyShop"]));
            if ((initTable == true)) {
                if ((this.tableBodyShop != null)) {
                    this.tableBodyShop.InitVars();
                }
            }
            this.tableVehicleStatus = ((VehicleStatusDataTable)(base.Tables["VehicleStatus"]));
            if ((initTable == true)) {
                if ((this.tableVehicleStatus != null)) {
                    this.tableVehicleStatus.InitVars();
                }
            }
            this.tableAutoImporterShops = ((AutoImporterShopsDataTable)(base.Tables["AutoImporterShops"]));
            if ((initTable == true)) {
                if ((this.tableAutoImporterShops != null)) {
                    this.tableAutoImporterShops.InitVars();
                }
            }
            this.tableUser_Audit_Trail = ((User_Audit_TrailDataTable)(base.Tables["User_Audit_Trail"]));
            if ((initTable == true)) {
                if ((this.tableUser_Audit_Trail != null)) {
                    this.tableUser_Audit_Trail.InitVars();
                }
            }
            this.tableConnectAPI = ((ConnectAPIDataTable)(base.Tables["ConnectAPI"]));
            if ((initTable == true)) {
                if ((this.tableConnectAPI != null)) {
                    this.tableConnectAPI.InitVars();
                }
            }
            this.relationFK_AccidentReport_User = this.Relations["FK_AccidentReport_User"];
            this.relationFK_VehicleInfo_VehicleInfo = this.Relations["FK_VehicleInfo_VehicleInfo"];
            this.relationFK_InsuranceInformation_User = this.Relations["FK_InsuranceInformation_User"];
            this.relationFK_AccidentReport_Message = this.Relations["FK_AccidentReport_Message"];
            this.relationFK_UserPreferedShop_User = this.Relations["FK_UserPreferedShop_User"];
            this.relationFK_MarketingUsers_MarketingUsers = this.Relations["FK_MarketingUsers_MarketingUsers"];
            this.relationFK_MarketingUsers_VehicleInfo = this.Relations["FK_MarketingUsers_VehicleInfo"];
            this.relationFK_CommunicationHistory_User = this.Relations["FK_CommunicationHistory_User"];
            this.relationFK_Login_id = this.Relations["FK_Login_id"];
            this.relationFK_VehicleMediaLink_VehicleInfo = this.Relations["FK_VehicleMediaLink_VehicleInfo"];
            this.relationFK_UserVechicleStatus_User = this.Relations["FK_UserVechicleStatus_User"];
            this.relationFK_UserVechicleStatus_VehicleInfo = this.Relations["FK_UserVechicleStatus_VehicleInfo"];
            this.relationFK_ReocurringCampaignUsers_User = this.Relations["FK_ReocurringCampaignUsers_User"];
            this.relationFK_ReocurringCampaignUsers_Frequency = this.Relations["FK_ReocurringCampaignUsers_Frequency"];
            this.relationFK_UserPreferedShop_Shop = this.Relations["FK_UserPreferedShop_Shop"];
            this.relationFK_MarketingUsers_BodyShop = this.Relations["FK_MarketingUsers_BodyShop"];
            this.relationFK_CommunicationHistory_BodyShop = this.Relations["FK_CommunicationHistory_BodyShop"];
            this.relationFK_Login_ShopID = this.Relations["FK_Login_ShopID"];
            this.relationFK_ScheduledUsers_BodyShop = this.Relations["FK_ScheduledUsers_BodyShop"];
            this.relationFK_ReocurringCampaignUsers_BodyShop = this.Relations["FK_ReocurringCampaignUsers_BodyShop"];
            this.relationFK_VehicleStatus_BodyShop = this.Relations["FK_VehicleStatus_BodyShop"];
            this.relationFK_User_Audit_Trail_User = this.Relations["FK_User_Audit_Trail_User"];
            this.relationFK_User_Audit_Trail_VehicleInfo = this.Relations["FK_User_Audit_Trail_VehicleInfo"];
            this.relationFK_BodyShop_ConnectApi = this.Relations["FK_BodyShop_ConnectApi"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SummitDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SummitDS.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableAccidentReport = new AccidentReportDataTable();
            base.Tables.Add(this.tableAccidentReport);
            this.tableVehicleInfo = new VehicleInfoDataTable();
            base.Tables.Add(this.tableVehicleInfo);
            this.tableInsuranceInformation = new InsuranceInformationDataTable();
            base.Tables.Add(this.tableInsuranceInformation);
            this.tableMessage = new MessageDataTable();
            base.Tables.Add(this.tableMessage);
            this.tableUser = new UserDataTable();
            base.Tables.Add(this.tableUser);
            this.tableUser_PreferredShop = new User_PreferredShopDataTable();
            base.Tables.Add(this.tableUser_PreferredShop);
            this.tableZipCode = new ZipCodeDataTable();
            base.Tables.Add(this.tableZipCode);
            this.tableUnreadUsersFromRepairProspect = new UnreadUsersFromRepairProspectDataTable();
            base.Tables.Add(this.tableUnreadUsersFromRepairProspect);
            this.tableDeletedUsersFromRepairProspect = new DeletedUsersFromRepairProspectDataTable();
            base.Tables.Add(this.tableDeletedUsersFromRepairProspect);
            this.tableMarketingUsers = new MarketingUsersDataTable();
            base.Tables.Add(this.tableMarketingUsers);
            this.tableSP_Search_InProcessUsers = new SP_Search_InProcessUsersDataTable();
            base.Tables.Add(this.tableSP_Search_InProcessUsers);
            this.tableSP_Search_EmailTextMarketingCenters = new SP_Search_EmailTextMarketingCentersDataTable();
            base.Tables.Add(this.tableSP_Search_EmailTextMarketingCenters);
            this.tableBodyShop_PrivateLabel = new BodyShop_PrivateLabelDataTable();
            base.Tables.Add(this.tableBodyShop_PrivateLabel);
            this.tableCampaign = new CampaignDataTable();
            base.Tables.Add(this.tableCampaign);
            this.tableCommunicationHistory = new CommunicationHistoryDataTable();
            base.Tables.Add(this.tableCommunicationHistory);
            this.tableGetShopIdsByZipCode = new GetShopIdsByZipCodeDataTable();
            base.Tables.Add(this.tableGetShopIdsByZipCode);
            this.tableLogin = new LoginDataTable();
            base.Tables.Add(this.tableLogin);
            this.tableVehicleMediaLink = new VehicleMediaLinkDataTable();
            base.Tables.Add(this.tableVehicleMediaLink);
            this.tableUserVehicleStatus = new UserVehicleStatusDataTable();
            base.Tables.Add(this.tableUserVehicleStatus);
            this.tableView_MyCustomer = new View_MyCustomerDataTable();
            base.Tables.Add(this.tableView_MyCustomer);
            this.tableScheduledUsers = new ScheduledUsersDataTable();
            base.Tables.Add(this.tableScheduledUsers);
            this.tableReocurringCampaignUsers = new ReocurringCampaignUsersDataTable();
            base.Tables.Add(this.tableReocurringCampaignUsers);
            this.tableFrequency = new FrequencyDataTable();
            base.Tables.Add(this.tableFrequency);
            this.tableAIManageRecurringActivity = new AIManageRecurringActivityDataTable();
            base.Tables.Add(this.tableAIManageRecurringActivity);
            this.tableBodyShop = new BodyShopDataTable();
            base.Tables.Add(this.tableBodyShop);
            this.tableVehicleStatus = new VehicleStatusDataTable();
            base.Tables.Add(this.tableVehicleStatus);
            this.tableAutoImporterShops = new AutoImporterShopsDataTable();
            base.Tables.Add(this.tableAutoImporterShops);
            this.tableUser_Audit_Trail = new User_Audit_TrailDataTable();
            base.Tables.Add(this.tableUser_Audit_Trail);
            this.tableConnectAPI = new ConnectAPIDataTable();
            base.Tables.Add(this.tableConnectAPI);
            this.relationFK_AccidentReport_User = new global::System.Data.DataRelation("FK_AccidentReport_User", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableAccidentReport.user_idColumn}, false);
            this.Relations.Add(this.relationFK_AccidentReport_User);
            this.relationFK_VehicleInfo_VehicleInfo = new global::System.Data.DataRelation("FK_VehicleInfo_VehicleInfo", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableVehicleInfo.user_idColumn}, false);
            this.Relations.Add(this.relationFK_VehicleInfo_VehicleInfo);
            this.relationFK_InsuranceInformation_User = new global::System.Data.DataRelation("FK_InsuranceInformation_User", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableInsuranceInformation.user_idColumn}, false);
            this.Relations.Add(this.relationFK_InsuranceInformation_User);
            this.relationFK_AccidentReport_Message = new global::System.Data.DataRelation("FK_AccidentReport_Message", new global::System.Data.DataColumn[] {
                        this.tableMessage.IDColumn}, new global::System.Data.DataColumn[] {
                        this.tableAccidentReport.message_idColumn}, false);
            this.Relations.Add(this.relationFK_AccidentReport_Message);
            this.relationFK_UserPreferedShop_User = new global::System.Data.DataRelation("FK_UserPreferedShop_User", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableUser_PreferredShop.user_idColumn}, false);
            this.Relations.Add(this.relationFK_UserPreferedShop_User);
            this.relationFK_MarketingUsers_MarketingUsers = new global::System.Data.DataRelation("FK_MarketingUsers_MarketingUsers", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableMarketingUsers.user_idColumn}, false);
            this.Relations.Add(this.relationFK_MarketingUsers_MarketingUsers);
            this.relationFK_MarketingUsers_VehicleInfo = new global::System.Data.DataRelation("FK_MarketingUsers_VehicleInfo", new global::System.Data.DataColumn[] {
                        this.tableVehicleInfo.vehicle_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableMarketingUsers.vehicle_idColumn}, false);
            this.Relations.Add(this.relationFK_MarketingUsers_VehicleInfo);
            this.relationFK_CommunicationHistory_User = new global::System.Data.DataRelation("FK_CommunicationHistory_User", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableCommunicationHistory.User_IdColumn}, false);
            this.Relations.Add(this.relationFK_CommunicationHistory_User);
            this.relationFK_Login_id = new global::System.Data.DataRelation("FK_Login_id", new global::System.Data.DataColumn[] {
                        this.tableLogin.UserIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableZipCode.Login_idColumn}, false);
            this.Relations.Add(this.relationFK_Login_id);
            this.relationFK_VehicleMediaLink_VehicleInfo = new global::System.Data.DataRelation("FK_VehicleMediaLink_VehicleInfo", new global::System.Data.DataColumn[] {
                        this.tableVehicleInfo.vehicle_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableVehicleMediaLink.vehicle_idColumn}, false);
            this.Relations.Add(this.relationFK_VehicleMediaLink_VehicleInfo);
            this.relationFK_UserVechicleStatus_User = new global::System.Data.DataRelation("FK_UserVechicleStatus_User", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableUserVehicleStatus.User_idColumn}, false);
            this.Relations.Add(this.relationFK_UserVechicleStatus_User);
            this.relationFK_UserVechicleStatus_VehicleInfo = new global::System.Data.DataRelation("FK_UserVechicleStatus_VehicleInfo", new global::System.Data.DataColumn[] {
                        this.tableVehicleInfo.vehicle_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableUserVehicleStatus.Vehicle_idColumn}, false);
            this.Relations.Add(this.relationFK_UserVechicleStatus_VehicleInfo);
            this.relationFK_ReocurringCampaignUsers_User = new global::System.Data.DataRelation("FK_ReocurringCampaignUsers_User", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableReocurringCampaignUsers.user_idColumn}, false);
            this.Relations.Add(this.relationFK_ReocurringCampaignUsers_User);
            this.relationFK_ReocurringCampaignUsers_Frequency = new global::System.Data.DataRelation("FK_ReocurringCampaignUsers_Frequency", new global::System.Data.DataColumn[] {
                        this.tableFrequency.frequency_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableReocurringCampaignUsers.frequency_idColumn}, false);
            this.Relations.Add(this.relationFK_ReocurringCampaignUsers_Frequency);
            this.relationFK_UserPreferedShop_Shop = new global::System.Data.DataRelation("FK_UserPreferedShop_Shop", new global::System.Data.DataColumn[] {
                        this.tableBodyShop.shop_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableUser_PreferredShop.shop_idColumn}, false);
            this.Relations.Add(this.relationFK_UserPreferedShop_Shop);
            this.relationFK_MarketingUsers_BodyShop = new global::System.Data.DataRelation("FK_MarketingUsers_BodyShop", new global::System.Data.DataColumn[] {
                        this.tableBodyShop.shop_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableMarketingUsers.shop_idColumn}, false);
            this.Relations.Add(this.relationFK_MarketingUsers_BodyShop);
            this.relationFK_CommunicationHistory_BodyShop = new global::System.Data.DataRelation("FK_CommunicationHistory_BodyShop", new global::System.Data.DataColumn[] {
                        this.tableBodyShop.shop_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableCommunicationHistory.Shop_IdColumn}, false);
            this.Relations.Add(this.relationFK_CommunicationHistory_BodyShop);
            this.relationFK_Login_ShopID = new global::System.Data.DataRelation("FK_Login_ShopID", new global::System.Data.DataColumn[] {
                        this.tableBodyShop.shop_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableLogin.ShopIDColumn}, false);
            this.Relations.Add(this.relationFK_Login_ShopID);
            this.relationFK_ScheduledUsers_BodyShop = new global::System.Data.DataRelation("FK_ScheduledUsers_BodyShop", new global::System.Data.DataColumn[] {
                        this.tableBodyShop.shop_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableScheduledUsers.shop_idColumn}, false);
            this.Relations.Add(this.relationFK_ScheduledUsers_BodyShop);
            this.relationFK_ReocurringCampaignUsers_BodyShop = new global::System.Data.DataRelation("FK_ReocurringCampaignUsers_BodyShop", new global::System.Data.DataColumn[] {
                        this.tableBodyShop.shop_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableReocurringCampaignUsers.shop_idColumn}, false);
            this.Relations.Add(this.relationFK_ReocurringCampaignUsers_BodyShop);
            this.relationFK_VehicleStatus_BodyShop = new global::System.Data.DataRelation("FK_VehicleStatus_BodyShop", new global::System.Data.DataColumn[] {
                        this.tableBodyShop.shop_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableVehicleStatus.shop_idColumn}, false);
            this.Relations.Add(this.relationFK_VehicleStatus_BodyShop);
            this.relationFK_User_Audit_Trail_User = new global::System.Data.DataRelation("FK_User_Audit_Trail_User", new global::System.Data.DataColumn[] {
                        this.tableUser.user_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableUser_Audit_Trail.user_idColumn}, false);
            this.Relations.Add(this.relationFK_User_Audit_Trail_User);
            this.relationFK_User_Audit_Trail_VehicleInfo = new global::System.Data.DataRelation("FK_User_Audit_Trail_VehicleInfo", new global::System.Data.DataColumn[] {
                        this.tableVehicleInfo.vehicle_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableUser_Audit_Trail.vehicle_idColumn}, false);
            this.Relations.Add(this.relationFK_User_Audit_Trail_VehicleInfo);
            this.relationFK_BodyShop_ConnectApi = new global::System.Data.DataRelation("FK_BodyShop_ConnectApi", new global::System.Data.DataColumn[] {
                        this.tableBodyShop.shop_idColumn}, new global::System.Data.DataColumn[] {
                        this.tableConnectAPI.ShopIdColumn}, false);
            this.Relations.Add(this.relationFK_BodyShop_ConnectApi);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAccidentReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVehicleInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeInsuranceInformation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMessage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUser() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUser_PreferredShop() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeZipCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUnreadUsersFromRepairProspect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDeletedUsersFromRepairProspect() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeMarketingUsers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSP_Search_InProcessUsers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSP_Search_EmailTextMarketingCenters() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBodyShop_PrivateLabel() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCampaign() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCommunicationHistory() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeGetShopIdsByZipCode() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLogin() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVehicleMediaLink() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUserVehicleStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_MyCustomer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeScheduledUsers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeReocurringCampaignUsers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFrequency() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAIManageRecurringActivity() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeBodyShop() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeVehicleStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeAutoImporterShops() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUser_Audit_Trail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeConnectAPI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SummitDS ds = new SummitDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void AccidentReportRowChangeEventHandler(object sender, AccidentReportRowChangeEvent e);
        
        public delegate void VehicleInfoRowChangeEventHandler(object sender, VehicleInfoRowChangeEvent e);
        
        public delegate void InsuranceInformationRowChangeEventHandler(object sender, InsuranceInformationRowChangeEvent e);
        
        public delegate void MessageRowChangeEventHandler(object sender, MessageRowChangeEvent e);
        
        public delegate void UserRowChangeEventHandler(object sender, UserRowChangeEvent e);
        
        public delegate void User_PreferredShopRowChangeEventHandler(object sender, User_PreferredShopRowChangeEvent e);
        
        public delegate void ZipCodeRowChangeEventHandler(object sender, ZipCodeRowChangeEvent e);
        
        public delegate void UnreadUsersFromRepairProspectRowChangeEventHandler(object sender, UnreadUsersFromRepairProspectRowChangeEvent e);
        
        public delegate void DeletedUsersFromRepairProspectRowChangeEventHandler(object sender, DeletedUsersFromRepairProspectRowChangeEvent e);
        
        public delegate void MarketingUsersRowChangeEventHandler(object sender, MarketingUsersRowChangeEvent e);
        
        public delegate void SP_Search_InProcessUsersRowChangeEventHandler(object sender, SP_Search_InProcessUsersRowChangeEvent e);
        
        public delegate void SP_Search_EmailTextMarketingCentersRowChangeEventHandler(object sender, SP_Search_EmailTextMarketingCentersRowChangeEvent e);
        
        public delegate void BodyShop_PrivateLabelRowChangeEventHandler(object sender, BodyShop_PrivateLabelRowChangeEvent e);
        
        public delegate void CampaignRowChangeEventHandler(object sender, CampaignRowChangeEvent e);
        
        public delegate void CommunicationHistoryRowChangeEventHandler(object sender, CommunicationHistoryRowChangeEvent e);
        
        public delegate void GetShopIdsByZipCodeRowChangeEventHandler(object sender, GetShopIdsByZipCodeRowChangeEvent e);
        
        public delegate void LoginRowChangeEventHandler(object sender, LoginRowChangeEvent e);
        
        public delegate void VehicleMediaLinkRowChangeEventHandler(object sender, VehicleMediaLinkRowChangeEvent e);
        
        public delegate void UserVehicleStatusRowChangeEventHandler(object sender, UserVehicleStatusRowChangeEvent e);
        
        public delegate void View_MyCustomerRowChangeEventHandler(object sender, View_MyCustomerRowChangeEvent e);
        
        public delegate void ScheduledUsersRowChangeEventHandler(object sender, ScheduledUsersRowChangeEvent e);
        
        public delegate void ReocurringCampaignUsersRowChangeEventHandler(object sender, ReocurringCampaignUsersRowChangeEvent e);
        
        public delegate void FrequencyRowChangeEventHandler(object sender, FrequencyRowChangeEvent e);
        
        public delegate void AIManageRecurringActivityRowChangeEventHandler(object sender, AIManageRecurringActivityRowChangeEvent e);
        
        public delegate void BodyShopRowChangeEventHandler(object sender, BodyShopRowChangeEvent e);
        
        public delegate void VehicleStatusRowChangeEventHandler(object sender, VehicleStatusRowChangeEvent e);
        
        public delegate void AutoImporterShopsRowChangeEventHandler(object sender, AutoImporterShopsRowChangeEvent e);
        
        public delegate void User_Audit_TrailRowChangeEventHandler(object sender, User_Audit_TrailRowChangeEvent e);
        
        public delegate void ConnectAPIRowChangeEventHandler(object sender, ConnectAPIRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AccidentReportDataTable : global::System.Data.TypedTableBase<AccidentReportRow> {
            
            private global::System.Data.DataColumn columnaccident_id;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnstreet;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columndescription;
            
            private global::System.Data.DataColumn columndriver_phone;
            
            private global::System.Data.DataColumn columndriver_license_state_plate;
            
            private global::System.Data.DataColumn columndriver_license_no;
            
            private global::System.Data.DataColumn columndriver_vehicle_type;
            
            private global::System.Data.DataColumn columninsurance_company_name;
            
            private global::System.Data.DataColumn columninsurance_policy_no;
            
            private global::System.Data.DataColumn columnpolice_office;
            
            private global::System.Data.DataColumn columnpolice_report_no;
            
            private global::System.Data.DataColumn columnwitnesses;
            
            private global::System.Data.DataColumn columnwitness_comments;
            
            private global::System.Data.DataColumn columnmisc_notes;
            
            private global::System.Data.DataColumn columnimage_attached;
            
            private global::System.Data.DataColumn columnmessage_id;
            
            private global::System.Data.DataColumn columnimage_name;
            
            private global::System.Data.DataColumn columndriver_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportDataTable() {
                this.TableName = "AccidentReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AccidentReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AccidentReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn accident_idColumn {
                get {
                    return this.columnaccident_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn streetColumn {
                get {
                    return this.columnstreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn descriptionColumn {
                get {
                    return this.columndescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driver_phoneColumn {
                get {
                    return this.columndriver_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driver_license_state_plateColumn {
                get {
                    return this.columndriver_license_state_plate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driver_license_noColumn {
                get {
                    return this.columndriver_license_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driver_vehicle_typeColumn {
                get {
                    return this.columndriver_vehicle_type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn insurance_company_nameColumn {
                get {
                    return this.columninsurance_company_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn insurance_policy_noColumn {
                get {
                    return this.columninsurance_policy_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn police_officeColumn {
                get {
                    return this.columnpolice_office;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn police_report_noColumn {
                get {
                    return this.columnpolice_report_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn witnessesColumn {
                get {
                    return this.columnwitnesses;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn witness_commentsColumn {
                get {
                    return this.columnwitness_comments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn misc_notesColumn {
                get {
                    return this.columnmisc_notes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn image_attachedColumn {
                get {
                    return this.columnimage_attached;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn message_idColumn {
                get {
                    return this.columnmessage_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn image_nameColumn {
                get {
                    return this.columnimage_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn driver_nameColumn {
                get {
                    return this.columndriver_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportRow this[int index] {
                get {
                    return ((AccidentReportRow)(this.Rows[index]));
                }
            }
            
            public event AccidentReportRowChangeEventHandler AccidentReportRowChanging;
            
            public event AccidentReportRowChangeEventHandler AccidentReportRowChanged;
            
            public event AccidentReportRowChangeEventHandler AccidentReportRowDeleting;
            
            public event AccidentReportRowChangeEventHandler AccidentReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAccidentReportRow(AccidentReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportRow AddAccidentReportRow(
                        UserRow parentUserRowByFK_AccidentReport_User, 
                        string street, 
                        string city, 
                        string state, 
                        string description, 
                        string driver_phone, 
                        string driver_license_state_plate, 
                        string driver_license_no, 
                        string driver_vehicle_type, 
                        string insurance_company_name, 
                        string insurance_policy_no, 
                        string police_office, 
                        string police_report_no, 
                        string witnesses, 
                        string witness_comments, 
                        string misc_notes, 
                        byte[] image_attached, 
                        MessageRow parentMessageRowByFK_AccidentReport_Message, 
                        string image_name, 
                        string driver_name) {
                AccidentReportRow rowAccidentReportRow = ((AccidentReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        street,
                        city,
                        state,
                        description,
                        driver_phone,
                        driver_license_state_plate,
                        driver_license_no,
                        driver_vehicle_type,
                        insurance_company_name,
                        insurance_policy_no,
                        police_office,
                        police_report_no,
                        witnesses,
                        witness_comments,
                        misc_notes,
                        image_attached,
                        null,
                        image_name,
                        driver_name};
                if ((parentUserRowByFK_AccidentReport_User != null)) {
                    columnValuesArray[1] = parentUserRowByFK_AccidentReport_User[0];
                }
                if ((parentMessageRowByFK_AccidentReport_Message != null)) {
                    columnValuesArray[18] = parentMessageRowByFK_AccidentReport_Message[0];
                }
                rowAccidentReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAccidentReportRow);
                return rowAccidentReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportRow FindByaccident_id(int accident_id) {
                return ((AccidentReportRow)(this.Rows.Find(new object[] {
                            accident_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AccidentReportDataTable cln = ((AccidentReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AccidentReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnaccident_id = base.Columns["accident_id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnstreet = base.Columns["street"];
                this.columncity = base.Columns["city"];
                this.columnstate = base.Columns["state"];
                this.columndescription = base.Columns["description"];
                this.columndriver_phone = base.Columns["driver_phone"];
                this.columndriver_license_state_plate = base.Columns["driver_license_state_plate"];
                this.columndriver_license_no = base.Columns["driver_license_no"];
                this.columndriver_vehicle_type = base.Columns["driver_vehicle_type"];
                this.columninsurance_company_name = base.Columns["insurance_company_name"];
                this.columninsurance_policy_no = base.Columns["insurance_policy_no"];
                this.columnpolice_office = base.Columns["police_office"];
                this.columnpolice_report_no = base.Columns["police_report_no"];
                this.columnwitnesses = base.Columns["witnesses"];
                this.columnwitness_comments = base.Columns["witness_comments"];
                this.columnmisc_notes = base.Columns["misc_notes"];
                this.columnimage_attached = base.Columns["image_attached"];
                this.columnmessage_id = base.Columns["message_id"];
                this.columnimage_name = base.Columns["image_name"];
                this.columndriver_name = base.Columns["driver_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnaccident_id = new global::System.Data.DataColumn("accident_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaccident_id);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnstreet = new global::System.Data.DataColumn("street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstreet);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columndescription = new global::System.Data.DataColumn("description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndescription);
                this.columndriver_phone = new global::System.Data.DataColumn("driver_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_phone);
                this.columndriver_license_state_plate = new global::System.Data.DataColumn("driver_license_state_plate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_license_state_plate);
                this.columndriver_license_no = new global::System.Data.DataColumn("driver_license_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_license_no);
                this.columndriver_vehicle_type = new global::System.Data.DataColumn("driver_vehicle_type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_vehicle_type);
                this.columninsurance_company_name = new global::System.Data.DataColumn("insurance_company_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninsurance_company_name);
                this.columninsurance_policy_no = new global::System.Data.DataColumn("insurance_policy_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninsurance_policy_no);
                this.columnpolice_office = new global::System.Data.DataColumn("police_office", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpolice_office);
                this.columnpolice_report_no = new global::System.Data.DataColumn("police_report_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpolice_report_no);
                this.columnwitnesses = new global::System.Data.DataColumn("witnesses", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwitnesses);
                this.columnwitness_comments = new global::System.Data.DataColumn("witness_comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwitness_comments);
                this.columnmisc_notes = new global::System.Data.DataColumn("misc_notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmisc_notes);
                this.columnimage_attached = new global::System.Data.DataColumn("image_attached", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage_attached);
                this.columnmessage_id = new global::System.Data.DataColumn("message_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage_id);
                this.columnimage_name = new global::System.Data.DataColumn("image_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage_name);
                this.columndriver_name = new global::System.Data.DataColumn("driver_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndriver_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnaccident_id}, true));
                this.columnaccident_id.AutoIncrement = true;
                this.columnaccident_id.AutoIncrementSeed = -1;
                this.columnaccident_id.AutoIncrementStep = -1;
                this.columnaccident_id.AllowDBNull = false;
                this.columnaccident_id.ReadOnly = true;
                this.columnaccident_id.Unique = true;
                this.columnstreet.MaxLength = 50;
                this.columncity.MaxLength = 30;
                this.columnstate.MaxLength = 100;
                this.columndescription.MaxLength = 250;
                this.columndriver_phone.MaxLength = 20;
                this.columndriver_license_state_plate.MaxLength = 50;
                this.columndriver_license_no.MaxLength = 20;
                this.columndriver_vehicle_type.MaxLength = 100;
                this.columninsurance_company_name.MaxLength = 100;
                this.columninsurance_policy_no.MaxLength = 20;
                this.columnpolice_office.MaxLength = 50;
                this.columnpolice_report_no.MaxLength = 20;
                this.columnwitnesses.MaxLength = 100;
                this.columnwitness_comments.MaxLength = 200;
                this.columnmisc_notes.MaxLength = 200;
                this.columnimage_name.MaxLength = 500;
                this.columndriver_name.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportRow NewAccidentReportRow() {
                return ((AccidentReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AccidentReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AccidentReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AccidentReportRowChanged != null)) {
                    this.AccidentReportRowChanged(this, new AccidentReportRowChangeEvent(((AccidentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AccidentReportRowChanging != null)) {
                    this.AccidentReportRowChanging(this, new AccidentReportRowChangeEvent(((AccidentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AccidentReportRowDeleted != null)) {
                    this.AccidentReportRowDeleted(this, new AccidentReportRowChangeEvent(((AccidentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AccidentReportRowDeleting != null)) {
                    this.AccidentReportRowDeleting(this, new AccidentReportRowChangeEvent(((AccidentReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAccidentReportRow(AccidentReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AccidentReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VehicleInfoDataTable : global::System.Data.TypedTableBase<VehicleInfoRow> {
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columnmake;
            
            private global::System.Data.DataColumn columnyear;
            
            private global::System.Data.DataColumn columnother_info;
            
            private global::System.Data.DataColumn columnis_using;
            
            private global::System.Data.DataColumn columnstyle;
            
            private global::System.Data.DataColumn columncolor;
            
            private global::System.Data.DataColumn columnpaint_code;
            
            private global::System.Data.DataColumn columnvin;
            
            private global::System.Data.DataColumn columnlicense;
            
            private global::System.Data.DataColumn columnproduction_date;
            
            private global::System.Data.DataColumn columnestimate_file_identifier;
            
            private global::System.Data.DataColumn columnestimator_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoDataTable() {
                this.TableName = "VehicleInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VehicleInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VehicleInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn makeColumn {
                get {
                    return this.columnmake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearColumn {
                get {
                    return this.columnyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn other_infoColumn {
                get {
                    return this.columnother_info;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_usingColumn {
                get {
                    return this.columnis_using;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn styleColumn {
                get {
                    return this.columnstyle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn colorColumn {
                get {
                    return this.columncolor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn paint_codeColumn {
                get {
                    return this.columnpaint_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vinColumn {
                get {
                    return this.columnvin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn licenseColumn {
                get {
                    return this.columnlicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn production_dateColumn {
                get {
                    return this.columnproduction_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estimate_file_identifierColumn {
                get {
                    return this.columnestimate_file_identifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estimator_nameColumn {
                get {
                    return this.columnestimator_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow this[int index] {
                get {
                    return ((VehicleInfoRow)(this.Rows[index]));
                }
            }
            
            public event VehicleInfoRowChangeEventHandler VehicleInfoRowChanging;
            
            public event VehicleInfoRowChangeEventHandler VehicleInfoRowChanged;
            
            public event VehicleInfoRowChangeEventHandler VehicleInfoRowDeleting;
            
            public event VehicleInfoRowChangeEventHandler VehicleInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVehicleInfoRow(VehicleInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow AddVehicleInfoRow(UserRow parentUserRowByFK_VehicleInfo_VehicleInfo, string model, string make, string year, string other_info, bool is_using, string style, string color, string paint_code, string vin, string license, System.DateTime production_date, string estimate_file_identifier, string estimator_name) {
                VehicleInfoRow rowVehicleInfoRow = ((VehicleInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        model,
                        make,
                        year,
                        other_info,
                        is_using,
                        style,
                        color,
                        paint_code,
                        vin,
                        license,
                        production_date,
                        estimate_file_identifier,
                        estimator_name};
                if ((parentUserRowByFK_VehicleInfo_VehicleInfo != null)) {
                    columnValuesArray[1] = parentUserRowByFK_VehicleInfo_VehicleInfo[0];
                }
                rowVehicleInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVehicleInfoRow);
                return rowVehicleInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow FindByvehicle_id(int vehicle_id) {
                return ((VehicleInfoRow)(this.Rows.Find(new object[] {
                            vehicle_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VehicleInfoDataTable cln = ((VehicleInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VehicleInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnmodel = base.Columns["model"];
                this.columnmake = base.Columns["make"];
                this.columnyear = base.Columns["year"];
                this.columnother_info = base.Columns["other_info"];
                this.columnis_using = base.Columns["is_using"];
                this.columnstyle = base.Columns["style"];
                this.columncolor = base.Columns["color"];
                this.columnpaint_code = base.Columns["paint_code"];
                this.columnvin = base.Columns["vin"];
                this.columnlicense = base.Columns["license"];
                this.columnproduction_date = base.Columns["production_date"];
                this.columnestimate_file_identifier = base.Columns["estimate_file_identifier"];
                this.columnestimator_name = base.Columns["estimator_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columnmake = new global::System.Data.DataColumn("make", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmake);
                this.columnyear = new global::System.Data.DataColumn("year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear);
                this.columnother_info = new global::System.Data.DataColumn("other_info", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnother_info);
                this.columnis_using = new global::System.Data.DataColumn("is_using", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_using);
                this.columnstyle = new global::System.Data.DataColumn("style", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstyle);
                this.columncolor = new global::System.Data.DataColumn("color", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncolor);
                this.columnpaint_code = new global::System.Data.DataColumn("paint_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaint_code);
                this.columnvin = new global::System.Data.DataColumn("vin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvin);
                this.columnlicense = new global::System.Data.DataColumn("license", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlicense);
                this.columnproduction_date = new global::System.Data.DataColumn("production_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnproduction_date);
                this.columnestimate_file_identifier = new global::System.Data.DataColumn("estimate_file_identifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestimate_file_identifier);
                this.columnestimator_name = new global::System.Data.DataColumn("estimator_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestimator_name);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnvehicle_id}, true));
                this.columnvehicle_id.AutoIncrement = true;
                this.columnvehicle_id.AutoIncrementSeed = -1;
                this.columnvehicle_id.AutoIncrementStep = -1;
                this.columnvehicle_id.AllowDBNull = false;
                this.columnvehicle_id.ReadOnly = true;
                this.columnvehicle_id.Unique = true;
                this.columnmodel.MaxLength = 50;
                this.columnmake.MaxLength = 50;
                this.columnyear.MaxLength = 50;
                this.columnother_info.MaxLength = 200;
                this.columnstyle.MaxLength = 50;
                this.columncolor.MaxLength = 50;
                this.columnpaint_code.MaxLength = 50;
                this.columnvin.MaxLength = 50;
                this.columnlicense.MaxLength = 50;
                this.columnestimate_file_identifier.MaxLength = 50;
                this.columnestimator_name.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow NewVehicleInfoRow() {
                return ((VehicleInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VehicleInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VehicleInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VehicleInfoRowChanged != null)) {
                    this.VehicleInfoRowChanged(this, new VehicleInfoRowChangeEvent(((VehicleInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VehicleInfoRowChanging != null)) {
                    this.VehicleInfoRowChanging(this, new VehicleInfoRowChangeEvent(((VehicleInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VehicleInfoRowDeleted != null)) {
                    this.VehicleInfoRowDeleted(this, new VehicleInfoRowChangeEvent(((VehicleInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VehicleInfoRowDeleting != null)) {
                    this.VehicleInfoRowDeleting(this, new VehicleInfoRowChangeEvent(((VehicleInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVehicleInfoRow(VehicleInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VehicleInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InsuranceInformationDataTable : global::System.Data.TypedTableBase<InsuranceInformationRow> {
            
            private global::System.Data.DataColumn columninsurance_id;
            
            private global::System.Data.DataColumn columnagent_name;
            
            private global::System.Data.DataColumn columnagent_phone;
            
            private global::System.Data.DataColumn columnagent_cell_phone;
            
            private global::System.Data.DataColumn columnagent_website;
            
            private global::System.Data.DataColumn columncompany_name;
            
            private global::System.Data.DataColumn columncompany_cell_phone;
            
            private global::System.Data.DataColumn columncompany_website;
            
            private global::System.Data.DataColumn columnpolicy_no;
            
            private global::System.Data.DataColumn columnexpiration_date;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columncompany_fax;
            
            private global::System.Data.DataColumn columncompany_address;
            
            private global::System.Data.DataColumn columncompany_city;
            
            private global::System.Data.DataColumn columncompany_state;
            
            private global::System.Data.DataColumn columncompany_zip;
            
            private global::System.Data.DataColumn columndate_of_loss;
            
            private global::System.Data.DataColumn columndeductible;
            
            private global::System.Data.DataColumn columnclaim_number;
            
            private global::System.Data.DataColumn columnnet_total_amount;
            
            private global::System.Data.DataColumn columnrepair_order_identifier;
            
            private global::System.Data.DataColumn columntotal_ro_amount;
            
            private global::System.Data.DataColumn columncompany_email;
            
            private global::System.Data.DataColumn columnagent_email;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsuranceInformationDataTable() {
                this.TableName = "InsuranceInformation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InsuranceInformationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected InsuranceInformationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn insurance_idColumn {
                get {
                    return this.columninsurance_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agent_nameColumn {
                get {
                    return this.columnagent_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agent_phoneColumn {
                get {
                    return this.columnagent_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agent_cell_phoneColumn {
                get {
                    return this.columnagent_cell_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agent_websiteColumn {
                get {
                    return this.columnagent_website;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_nameColumn {
                get {
                    return this.columncompany_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_cell_phoneColumn {
                get {
                    return this.columncompany_cell_phone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_websiteColumn {
                get {
                    return this.columncompany_website;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn policy_noColumn {
                get {
                    return this.columnpolicy_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expiration_dateColumn {
                get {
                    return this.columnexpiration_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_faxColumn {
                get {
                    return this.columncompany_fax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_addressColumn {
                get {
                    return this.columncompany_address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_cityColumn {
                get {
                    return this.columncompany_city;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_stateColumn {
                get {
                    return this.columncompany_state;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_zipColumn {
                get {
                    return this.columncompany_zip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date_of_lossColumn {
                get {
                    return this.columndate_of_loss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deductibleColumn {
                get {
                    return this.columndeductible;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn claim_numberColumn {
                get {
                    return this.columnclaim_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn net_total_amountColumn {
                get {
                    return this.columnnet_total_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn repair_order_identifierColumn {
                get {
                    return this.columnrepair_order_identifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn total_ro_amountColumn {
                get {
                    return this.columntotal_ro_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_emailColumn {
                get {
                    return this.columncompany_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agent_emailColumn {
                get {
                    return this.columnagent_email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsuranceInformationRow this[int index] {
                get {
                    return ((InsuranceInformationRow)(this.Rows[index]));
                }
            }
            
            public event InsuranceInformationRowChangeEventHandler InsuranceInformationRowChanging;
            
            public event InsuranceInformationRowChangeEventHandler InsuranceInformationRowChanged;
            
            public event InsuranceInformationRowChangeEventHandler InsuranceInformationRowDeleting;
            
            public event InsuranceInformationRowChangeEventHandler InsuranceInformationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddInsuranceInformationRow(InsuranceInformationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsuranceInformationRow AddInsuranceInformationRow(
                        string agent_name, 
                        string agent_phone, 
                        string agent_cell_phone, 
                        string agent_website, 
                        string company_name, 
                        string company_cell_phone, 
                        string company_website, 
                        string policy_no, 
                        System.DateTime expiration_date, 
                        UserRow parentUserRowByFK_InsuranceInformation_User, 
                        string company_fax, 
                        string company_address, 
                        string company_city, 
                        string company_state, 
                        string company_zip, 
                        System.DateTime date_of_loss, 
                        decimal deductible, 
                        string claim_number, 
                        string net_total_amount, 
                        string repair_order_identifier, 
                        string total_ro_amount, 
                        string company_email, 
                        string agent_email) {
                InsuranceInformationRow rowInsuranceInformationRow = ((InsuranceInformationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        agent_name,
                        agent_phone,
                        agent_cell_phone,
                        agent_website,
                        company_name,
                        company_cell_phone,
                        company_website,
                        policy_no,
                        expiration_date,
                        null,
                        company_fax,
                        company_address,
                        company_city,
                        company_state,
                        company_zip,
                        date_of_loss,
                        deductible,
                        claim_number,
                        net_total_amount,
                        repair_order_identifier,
                        total_ro_amount,
                        company_email,
                        agent_email};
                if ((parentUserRowByFK_InsuranceInformation_User != null)) {
                    columnValuesArray[10] = parentUserRowByFK_InsuranceInformation_User[0];
                }
                rowInsuranceInformationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInsuranceInformationRow);
                return rowInsuranceInformationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsuranceInformationRow FindByinsurance_id(int insurance_id) {
                return ((InsuranceInformationRow)(this.Rows.Find(new object[] {
                            insurance_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                InsuranceInformationDataTable cln = ((InsuranceInformationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InsuranceInformationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columninsurance_id = base.Columns["insurance_id"];
                this.columnagent_name = base.Columns["agent_name"];
                this.columnagent_phone = base.Columns["agent_phone"];
                this.columnagent_cell_phone = base.Columns["agent_cell_phone"];
                this.columnagent_website = base.Columns["agent_website"];
                this.columncompany_name = base.Columns["company_name"];
                this.columncompany_cell_phone = base.Columns["company_cell_phone"];
                this.columncompany_website = base.Columns["company_website"];
                this.columnpolicy_no = base.Columns["policy_no"];
                this.columnexpiration_date = base.Columns["expiration_date"];
                this.columnuser_id = base.Columns["user_id"];
                this.columncompany_fax = base.Columns["company_fax"];
                this.columncompany_address = base.Columns["company_address"];
                this.columncompany_city = base.Columns["company_city"];
                this.columncompany_state = base.Columns["company_state"];
                this.columncompany_zip = base.Columns["company_zip"];
                this.columndate_of_loss = base.Columns["date_of_loss"];
                this.columndeductible = base.Columns["deductible"];
                this.columnclaim_number = base.Columns["claim_number"];
                this.columnnet_total_amount = base.Columns["net_total_amount"];
                this.columnrepair_order_identifier = base.Columns["repair_order_identifier"];
                this.columntotal_ro_amount = base.Columns["total_ro_amount"];
                this.columncompany_email = base.Columns["company_email"];
                this.columnagent_email = base.Columns["agent_email"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columninsurance_id = new global::System.Data.DataColumn("insurance_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninsurance_id);
                this.columnagent_name = new global::System.Data.DataColumn("agent_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_name);
                this.columnagent_phone = new global::System.Data.DataColumn("agent_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_phone);
                this.columnagent_cell_phone = new global::System.Data.DataColumn("agent_cell_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_cell_phone);
                this.columnagent_website = new global::System.Data.DataColumn("agent_website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_website);
                this.columncompany_name = new global::System.Data.DataColumn("company_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_name);
                this.columncompany_cell_phone = new global::System.Data.DataColumn("company_cell_phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_cell_phone);
                this.columncompany_website = new global::System.Data.DataColumn("company_website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_website);
                this.columnpolicy_no = new global::System.Data.DataColumn("policy_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpolicy_no);
                this.columnexpiration_date = new global::System.Data.DataColumn("expiration_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpiration_date);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columncompany_fax = new global::System.Data.DataColumn("company_fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_fax);
                this.columncompany_address = new global::System.Data.DataColumn("company_address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_address);
                this.columncompany_city = new global::System.Data.DataColumn("company_city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_city);
                this.columncompany_state = new global::System.Data.DataColumn("company_state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_state);
                this.columncompany_zip = new global::System.Data.DataColumn("company_zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_zip);
                this.columndate_of_loss = new global::System.Data.DataColumn("date_of_loss", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_of_loss);
                this.columndeductible = new global::System.Data.DataColumn("deductible", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeductible);
                this.columnclaim_number = new global::System.Data.DataColumn("claim_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclaim_number);
                this.columnnet_total_amount = new global::System.Data.DataColumn("net_total_amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnet_total_amount);
                this.columnrepair_order_identifier = new global::System.Data.DataColumn("repair_order_identifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepair_order_identifier);
                this.columntotal_ro_amount = new global::System.Data.DataColumn("total_ro_amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotal_ro_amount);
                this.columncompany_email = new global::System.Data.DataColumn("company_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_email);
                this.columnagent_email = new global::System.Data.DataColumn("agent_email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_email);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columninsurance_id}, true));
                this.columninsurance_id.AutoIncrement = true;
                this.columninsurance_id.AutoIncrementSeed = -1;
                this.columninsurance_id.AutoIncrementStep = -1;
                this.columninsurance_id.AllowDBNull = false;
                this.columninsurance_id.ReadOnly = true;
                this.columninsurance_id.Unique = true;
                this.columnagent_name.MaxLength = 50;
                this.columnagent_phone.MaxLength = 50;
                this.columnagent_cell_phone.MaxLength = 20;
                this.columnagent_website.MaxLength = 30;
                this.columncompany_name.MaxLength = 50;
                this.columncompany_cell_phone.MaxLength = 20;
                this.columncompany_website.MaxLength = 30;
                this.columnpolicy_no.MaxLength = 40;
                this.columncompany_fax.MaxLength = 20;
                this.columncompany_address.MaxLength = 200;
                this.columncompany_city.MaxLength = 50;
                this.columncompany_state.MaxLength = 50;
                this.columncompany_zip.MaxLength = 30;
                this.columnclaim_number.MaxLength = 50;
                this.columnnet_total_amount.MaxLength = 50;
                this.columnrepair_order_identifier.MaxLength = 50;
                this.columntotal_ro_amount.MaxLength = 50;
                this.columncompany_email.MaxLength = 100;
                this.columnagent_email.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsuranceInformationRow NewInsuranceInformationRow() {
                return ((InsuranceInformationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InsuranceInformationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(InsuranceInformationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InsuranceInformationRowChanged != null)) {
                    this.InsuranceInformationRowChanged(this, new InsuranceInformationRowChangeEvent(((InsuranceInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InsuranceInformationRowChanging != null)) {
                    this.InsuranceInformationRowChanging(this, new InsuranceInformationRowChangeEvent(((InsuranceInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InsuranceInformationRowDeleted != null)) {
                    this.InsuranceInformationRowDeleted(this, new InsuranceInformationRowChangeEvent(((InsuranceInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InsuranceInformationRowDeleting != null)) {
                    this.InsuranceInformationRowDeleting(this, new InsuranceInformationRowChangeEvent(((InsuranceInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveInsuranceInformationRow(InsuranceInformationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InsuranceInformationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MessageDataTable : global::System.Data.TypedTableBase<MessageRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnmessageTime;
            
            private global::System.Data.DataColumn columnmessage;
            
            private global::System.Data.DataColumn columnattachemet;
            
            private global::System.Data.DataColumn columntype;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnphoneUser_id;
            
            private global::System.Data.DataColumn columnlocationLink;
            
            private global::System.Data.DataColumn columnis_read;
            
            private global::System.Data.DataColumn columnlatitude;
            
            private global::System.Data.DataColumn columnlongitude;
            
            private global::System.Data.DataColumn columnprivate_label_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MessageDataTable() {
                this.TableName = "Message";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MessageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MessageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn messageTimeColumn {
                get {
                    return this.columnmessageTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn messageColumn {
                get {
                    return this.columnmessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn attachemetColumn {
                get {
                    return this.columnattachemet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneUser_idColumn {
                get {
                    return this.columnphoneUser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn locationLinkColumn {
                get {
                    return this.columnlocationLink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_readColumn {
                get {
                    return this.columnis_read;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn latitudeColumn {
                get {
                    return this.columnlatitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn longitudeColumn {
                get {
                    return this.columnlongitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn private_label_idColumn {
                get {
                    return this.columnprivate_label_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MessageRow this[int index] {
                get {
                    return ((MessageRow)(this.Rows[index]));
                }
            }
            
            public event MessageRowChangeEventHandler MessageRowChanging;
            
            public event MessageRowChangeEventHandler MessageRowChanged;
            
            public event MessageRowChangeEventHandler MessageRowDeleting;
            
            public event MessageRowChangeEventHandler MessageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMessageRow(MessageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MessageRow AddMessageRow(System.DateTime messageTime, string message, string attachemet, int type, int shop_id, int phoneUser_id, string locationLink, bool is_read, double latitude, double longitude, int private_label_id) {
                MessageRow rowMessageRow = ((MessageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        messageTime,
                        message,
                        attachemet,
                        type,
                        shop_id,
                        phoneUser_id,
                        locationLink,
                        is_read,
                        latitude,
                        longitude,
                        private_label_id};
                rowMessageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMessageRow);
                return rowMessageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MessageRow FindByID(int ID) {
                return ((MessageRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MessageDataTable cln = ((MessageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MessageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnmessageTime = base.Columns["messageTime"];
                this.columnmessage = base.Columns["message"];
                this.columnattachemet = base.Columns["attachemet"];
                this.columntype = base.Columns["type"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnphoneUser_id = base.Columns["phoneUser_id"];
                this.columnlocationLink = base.Columns["locationLink"];
                this.columnis_read = base.Columns["is_read"];
                this.columnlatitude = base.Columns["latitude"];
                this.columnlongitude = base.Columns["longitude"];
                this.columnprivate_label_id = base.Columns["private_label_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnmessageTime = new global::System.Data.DataColumn("messageTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessageTime);
                this.columnmessage = new global::System.Data.DataColumn("message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage);
                this.columnattachemet = new global::System.Data.DataColumn("attachemet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnattachemet);
                this.columntype = new global::System.Data.DataColumn("type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnphoneUser_id = new global::System.Data.DataColumn("phoneUser_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoneUser_id);
                this.columnlocationLink = new global::System.Data.DataColumn("locationLink", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocationLink);
                this.columnis_read = new global::System.Data.DataColumn("is_read", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_read);
                this.columnlatitude = new global::System.Data.DataColumn("latitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlatitude);
                this.columnlongitude = new global::System.Data.DataColumn("longitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlongitude);
                this.columnprivate_label_id = new global::System.Data.DataColumn("private_label_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprivate_label_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnmessage.MaxLength = 250;
                this.columnattachemet.MaxLength = 250;
                this.columnlocationLink.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MessageRow NewMessageRow() {
                return ((MessageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MessageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MessageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MessageRowChanged != null)) {
                    this.MessageRowChanged(this, new MessageRowChangeEvent(((MessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MessageRowChanging != null)) {
                    this.MessageRowChanging(this, new MessageRowChangeEvent(((MessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MessageRowDeleted != null)) {
                    this.MessageRowDeleted(this, new MessageRowChangeEvent(((MessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MessageRowDeleting != null)) {
                    this.MessageRowDeleting(this, new MessageRowChangeEvent(((MessageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMessageRow(MessageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MessageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UserDataTable : global::System.Data.TypedTableBase<UserRow> {
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnfirst_name;
            
            private global::System.Data.DataColumn columnlast_name;
            
            private global::System.Data.DataColumn columndate_of_birth;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnusername;
            
            private global::System.Data.DataColumn columnpassword;
            
            private global::System.Data.DataColumn columnphone_id;
            
            private global::System.Data.DataColumn columnzip;
            
            private global::System.Data.DataColumn columnappDownLoadDate;
            
            private global::System.Data.DataColumn columnisRegistred;
            
            private global::System.Data.DataColumn columnisNew;
            
            private global::System.Data.DataColumn columnisRegistred_Shop;
            
            private global::System.Data.DataColumn columnisShow;
            
            private global::System.Data.DataColumn columnisShowEmailMarketing;
            
            private global::System.Data.DataColumn columnisShowTextMarketing;
            
            private global::System.Data.DataColumn columnupdatedEntryTime;
            
            private global::System.Data.DataColumn columnusername_id;
            
            private global::System.Data.DataColumn columnphone2;
            
            private global::System.Data.DataColumn columnisOptOutNotificationSent;
            
            private global::System.Data.DataColumn columnisOptedOutForMobileMessage;
            
            private global::System.Data.DataColumn columnDevice_Type;
            
            private global::System.Data.DataColumn columnpush_notification_device_id;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnaddress1;
            
            private global::System.Data.DataColumn columnaddress2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserDataTable() {
                this.TableName = "User";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UserDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UserDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn first_nameColumn {
                get {
                    return this.columnfirst_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_nameColumn {
                get {
                    return this.columnlast_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn date_of_birthColumn {
                get {
                    return this.columndate_of_birth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn passwordColumn {
                get {
                    return this.columnpassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phone_idColumn {
                get {
                    return this.columnphone_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zipColumn {
                get {
                    return this.columnzip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appDownLoadDateColumn {
                get {
                    return this.columnappDownLoadDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isRegistredColumn {
                get {
                    return this.columnisRegistred;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isNewColumn {
                get {
                    return this.columnisNew;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isRegistred_ShopColumn {
                get {
                    return this.columnisRegistred_Shop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isShowColumn {
                get {
                    return this.columnisShow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isShowEmailMarketingColumn {
                get {
                    return this.columnisShowEmailMarketing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isShowTextMarketingColumn {
                get {
                    return this.columnisShowTextMarketing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updatedEntryTimeColumn {
                get {
                    return this.columnupdatedEntryTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn username_idColumn {
                get {
                    return this.columnusername_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phone2Column {
                get {
                    return this.columnphone2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isOptOutNotificationSentColumn {
                get {
                    return this.columnisOptOutNotificationSent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isOptedOutForMobileMessageColumn {
                get {
                    return this.columnisOptedOutForMobileMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Device_TypeColumn {
                get {
                    return this.columnDevice_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn push_notification_device_idColumn {
                get {
                    return this.columnpush_notification_device_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow this[int index] {
                get {
                    return ((UserRow)(this.Rows[index]));
                }
            }
            
            public event UserRowChangeEventHandler UserRowChanging;
            
            public event UserRowChangeEventHandler UserRowChanged;
            
            public event UserRowChangeEventHandler UserRowDeleting;
            
            public event UserRowChangeEventHandler UserRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUserRow(UserRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow AddUserRow(
                        string first_name, 
                        string last_name, 
                        System.DateTime date_of_birth, 
                        string city, 
                        string state, 
                        bool gender, 
                        string phone, 
                        string username, 
                        string password, 
                        string phone_id, 
                        string zip, 
                        System.DateTime appDownLoadDate, 
                        bool isRegistred, 
                        bool isNew, 
                        bool isRegistred_Shop, 
                        bool isShow, 
                        bool isShowEmailMarketing, 
                        bool isShowTextMarketing, 
                        System.DateTime updatedEntryTime, 
                        string username_id, 
                        string phone2, 
                        bool isOptOutNotificationSent, 
                        bool isOptedOutForMobileMessage, 
                        int Device_Type, 
                        string push_notification_device_id, 
                        string email, 
                        string address1, 
                        string address2) {
                UserRow rowUserRow = ((UserRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        first_name,
                        last_name,
                        date_of_birth,
                        city,
                        state,
                        gender,
                        phone,
                        username,
                        password,
                        phone_id,
                        zip,
                        appDownLoadDate,
                        isRegistred,
                        isNew,
                        isRegistred_Shop,
                        isShow,
                        isShowEmailMarketing,
                        isShowTextMarketing,
                        updatedEntryTime,
                        username_id,
                        phone2,
                        isOptOutNotificationSent,
                        isOptedOutForMobileMessage,
                        Device_Type,
                        push_notification_device_id,
                        email,
                        address1,
                        address2};
                rowUserRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUserRow);
                return rowUserRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow FindByuser_id(int user_id) {
                return ((UserRow)(this.Rows.Find(new object[] {
                            user_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UserDataTable cln = ((UserDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UserDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuser_id = base.Columns["user_id"];
                this.columnfirst_name = base.Columns["first_name"];
                this.columnlast_name = base.Columns["last_name"];
                this.columndate_of_birth = base.Columns["date_of_birth"];
                this.columncity = base.Columns["city"];
                this.columnstate = base.Columns["state"];
                this.columngender = base.Columns["gender"];
                this.columnphone = base.Columns["phone"];
                this.columnusername = base.Columns["username"];
                this.columnpassword = base.Columns["password"];
                this.columnphone_id = base.Columns["phone_id"];
                this.columnzip = base.Columns["zip"];
                this.columnappDownLoadDate = base.Columns["appDownLoadDate"];
                this.columnisRegistred = base.Columns["isRegistred"];
                this.columnisNew = base.Columns["isNew"];
                this.columnisRegistred_Shop = base.Columns["isRegistred_Shop"];
                this.columnisShow = base.Columns["isShow"];
                this.columnisShowEmailMarketing = base.Columns["isShowEmailMarketing"];
                this.columnisShowTextMarketing = base.Columns["isShowTextMarketing"];
                this.columnupdatedEntryTime = base.Columns["updatedEntryTime"];
                this.columnusername_id = base.Columns["username_id"];
                this.columnphone2 = base.Columns["phone2"];
                this.columnisOptOutNotificationSent = base.Columns["isOptOutNotificationSent"];
                this.columnisOptedOutForMobileMessage = base.Columns["isOptedOutForMobileMessage"];
                this.columnDevice_Type = base.Columns["Device_Type"];
                this.columnpush_notification_device_id = base.Columns["push_notification_device_id"];
                this.columnemail = base.Columns["email"];
                this.columnaddress1 = base.Columns["address1"];
                this.columnaddress2 = base.Columns["address2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnfirst_name = new global::System.Data.DataColumn("first_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name);
                this.columnlast_name = new global::System.Data.DataColumn("last_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name);
                this.columndate_of_birth = new global::System.Data.DataColumn("date_of_birth", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndate_of_birth);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnusername = new global::System.Data.DataColumn("username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnpassword = new global::System.Data.DataColumn("password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassword);
                this.columnphone_id = new global::System.Data.DataColumn("phone_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone_id);
                this.columnzip = new global::System.Data.DataColumn("zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzip);
                this.columnappDownLoadDate = new global::System.Data.DataColumn("appDownLoadDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappDownLoadDate);
                this.columnisRegistred = new global::System.Data.DataColumn("isRegistred", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisRegistred);
                this.columnisNew = new global::System.Data.DataColumn("isNew", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisNew);
                this.columnisRegistred_Shop = new global::System.Data.DataColumn("isRegistred_Shop", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisRegistred_Shop);
                this.columnisShow = new global::System.Data.DataColumn("isShow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisShow);
                this.columnisShowEmailMarketing = new global::System.Data.DataColumn("isShowEmailMarketing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisShowEmailMarketing);
                this.columnisShowTextMarketing = new global::System.Data.DataColumn("isShowTextMarketing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisShowTextMarketing);
                this.columnupdatedEntryTime = new global::System.Data.DataColumn("updatedEntryTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdatedEntryTime);
                this.columnusername_id = new global::System.Data.DataColumn("username_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername_id);
                this.columnphone2 = new global::System.Data.DataColumn("phone2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone2);
                this.columnisOptOutNotificationSent = new global::System.Data.DataColumn("isOptOutNotificationSent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisOptOutNotificationSent);
                this.columnisOptedOutForMobileMessage = new global::System.Data.DataColumn("isOptedOutForMobileMessage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisOptedOutForMobileMessage);
                this.columnDevice_Type = new global::System.Data.DataColumn("Device_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDevice_Type);
                this.columnpush_notification_device_id = new global::System.Data.DataColumn("push_notification_device_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpush_notification_device_id);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnaddress1 = new global::System.Data.DataColumn("address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new global::System.Data.DataColumn("address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnuser_id}, true));
                this.columnuser_id.AutoIncrement = true;
                this.columnuser_id.AutoIncrementSeed = -1;
                this.columnuser_id.AutoIncrementStep = -1;
                this.columnuser_id.AllowDBNull = false;
                this.columnuser_id.ReadOnly = true;
                this.columnuser_id.Unique = true;
                this.columnfirst_name.MaxLength = 50;
                this.columnlast_name.MaxLength = 50;
                this.columncity.MaxLength = 50;
                this.columnstate.MaxLength = 100;
                this.columnphone.MaxLength = 50;
                this.columnusername.MaxLength = 50;
                this.columnpassword.MaxLength = 100;
                this.columnphone_id.MaxLength = 100;
                this.columnzip.MaxLength = 30;
                this.columnusername_id.MaxLength = 50;
                this.columnphone2.MaxLength = 50;
                this.columnpush_notification_device_id.MaxLength = 200;
                this.columnemail.MaxLength = 100;
                this.columnaddress1.MaxLength = 2147483647;
                this.columnaddress2.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow NewUserRow() {
                return ((UserRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UserRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UserRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UserRowChanged != null)) {
                    this.UserRowChanged(this, new UserRowChangeEvent(((UserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UserRowChanging != null)) {
                    this.UserRowChanging(this, new UserRowChangeEvent(((UserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UserRowDeleted != null)) {
                    this.UserRowDeleted(this, new UserRowChangeEvent(((UserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UserRowDeleting != null)) {
                    this.UserRowDeleting(this, new UserRowChangeEvent(((UserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUserRow(UserRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UserDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class User_PreferredShopDataTable : global::System.Data.TypedTableBase<User_PreferredShopRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnshop_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopDataTable() {
                this.TableName = "User_PreferredShop";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal User_PreferredShopDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected User_PreferredShopDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopRow this[int index] {
                get {
                    return ((User_PreferredShopRow)(this.Rows[index]));
                }
            }
            
            public event User_PreferredShopRowChangeEventHandler User_PreferredShopRowChanging;
            
            public event User_PreferredShopRowChangeEventHandler User_PreferredShopRowChanged;
            
            public event User_PreferredShopRowChangeEventHandler User_PreferredShopRowDeleting;
            
            public event User_PreferredShopRowChangeEventHandler User_PreferredShopRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUser_PreferredShopRow(User_PreferredShopRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopRow AddUser_PreferredShopRow(UserRow parentUserRowByFK_UserPreferedShop_User, BodyShopRow parentBodyShopRowByFK_UserPreferedShop_Shop) {
                User_PreferredShopRow rowUser_PreferredShopRow = ((User_PreferredShopRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null};
                if ((parentUserRowByFK_UserPreferedShop_User != null)) {
                    columnValuesArray[1] = parentUserRowByFK_UserPreferedShop_User[0];
                }
                if ((parentBodyShopRowByFK_UserPreferedShop_Shop != null)) {
                    columnValuesArray[2] = parentBodyShopRowByFK_UserPreferedShop_Shop[0];
                }
                rowUser_PreferredShopRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUser_PreferredShopRow);
                return rowUser_PreferredShopRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopRow FindByID(int ID) {
                return ((User_PreferredShopRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                User_PreferredShopDataTable cln = ((User_PreferredShopDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new User_PreferredShopDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnshop_id = base.Columns["shop_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopRow NewUser_PreferredShopRow() {
                return ((User_PreferredShopRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new User_PreferredShopRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(User_PreferredShopRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.User_PreferredShopRowChanged != null)) {
                    this.User_PreferredShopRowChanged(this, new User_PreferredShopRowChangeEvent(((User_PreferredShopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.User_PreferredShopRowChanging != null)) {
                    this.User_PreferredShopRowChanging(this, new User_PreferredShopRowChangeEvent(((User_PreferredShopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.User_PreferredShopRowDeleted != null)) {
                    this.User_PreferredShopRowDeleted(this, new User_PreferredShopRowChangeEvent(((User_PreferredShopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.User_PreferredShopRowDeleting != null)) {
                    this.User_PreferredShopRowDeleting(this, new User_PreferredShopRowChangeEvent(((User_PreferredShopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUser_PreferredShopRow(User_PreferredShopRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "User_PreferredShopDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ZipCodeDataTable : global::System.Data.TypedTableBase<ZipCodeRow> {
            
            private global::System.Data.DataColumn columnCode_id;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnLogin_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZipCodeDataTable() {
                this.TableName = "ZipCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ZipCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ZipCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Code_idColumn {
                get {
                    return this.columnCode_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Login_idColumn {
                get {
                    return this.columnLogin_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZipCodeRow this[int index] {
                get {
                    return ((ZipCodeRow)(this.Rows[index]));
                }
            }
            
            public event ZipCodeRowChangeEventHandler ZipCodeRowChanging;
            
            public event ZipCodeRowChangeEventHandler ZipCodeRowChanged;
            
            public event ZipCodeRowChangeEventHandler ZipCodeRowDeleting;
            
            public event ZipCodeRowChangeEventHandler ZipCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddZipCodeRow(ZipCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZipCodeRow AddZipCodeRow(string Zip, LoginRow parentLoginRowByFK_Login_id) {
                ZipCodeRow rowZipCodeRow = ((ZipCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Zip,
                        null};
                if ((parentLoginRowByFK_Login_id != null)) {
                    columnValuesArray[2] = parentLoginRowByFK_Login_id[0];
                }
                rowZipCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowZipCodeRow);
                return rowZipCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZipCodeRow FindByCode_id(int Code_id) {
                return ((ZipCodeRow)(this.Rows.Find(new object[] {
                            Code_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ZipCodeDataTable cln = ((ZipCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ZipCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCode_id = base.Columns["Code_id"];
                this.columnZip = base.Columns["Zip"];
                this.columnLogin_id = base.Columns["Login_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCode_id = new global::System.Data.DataColumn("Code_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode_id);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnLogin_id = new global::System.Data.DataColumn("Login_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogin_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCode_id}, true));
                this.columnCode_id.AutoIncrement = true;
                this.columnCode_id.AutoIncrementSeed = -1;
                this.columnCode_id.AutoIncrementStep = -1;
                this.columnCode_id.AllowDBNull = false;
                this.columnCode_id.ReadOnly = true;
                this.columnCode_id.Unique = true;
                this.columnZip.AllowDBNull = false;
                this.columnZip.MaxLength = 50;
                this.columnLogin_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZipCodeRow NewZipCodeRow() {
                return ((ZipCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ZipCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ZipCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ZipCodeRowChanged != null)) {
                    this.ZipCodeRowChanged(this, new ZipCodeRowChangeEvent(((ZipCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ZipCodeRowChanging != null)) {
                    this.ZipCodeRowChanging(this, new ZipCodeRowChangeEvent(((ZipCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ZipCodeRowDeleted != null)) {
                    this.ZipCodeRowDeleted(this, new ZipCodeRowChangeEvent(((ZipCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ZipCodeRowDeleting != null)) {
                    this.ZipCodeRowDeleting(this, new ZipCodeRowChangeEvent(((ZipCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveZipCodeRow(ZipCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ZipCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UnreadUsersFromRepairProspectDataTable : global::System.Data.TypedTableBase<UnreadUsersFromRepairProspectRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnshop_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UnreadUsersFromRepairProspectDataTable() {
                this.TableName = "UnreadUsersFromRepairProspect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UnreadUsersFromRepairProspectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UnreadUsersFromRepairProspectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UnreadUsersFromRepairProspectRow this[int index] {
                get {
                    return ((UnreadUsersFromRepairProspectRow)(this.Rows[index]));
                }
            }
            
            public event UnreadUsersFromRepairProspectRowChangeEventHandler UnreadUsersFromRepairProspectRowChanging;
            
            public event UnreadUsersFromRepairProspectRowChangeEventHandler UnreadUsersFromRepairProspectRowChanged;
            
            public event UnreadUsersFromRepairProspectRowChangeEventHandler UnreadUsersFromRepairProspectRowDeleting;
            
            public event UnreadUsersFromRepairProspectRowChangeEventHandler UnreadUsersFromRepairProspectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUnreadUsersFromRepairProspectRow(UnreadUsersFromRepairProspectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UnreadUsersFromRepairProspectRow AddUnreadUsersFromRepairProspectRow(int user_id, int shop_id) {
                UnreadUsersFromRepairProspectRow rowUnreadUsersFromRepairProspectRow = ((UnreadUsersFromRepairProspectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        user_id,
                        shop_id};
                rowUnreadUsersFromRepairProspectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUnreadUsersFromRepairProspectRow);
                return rowUnreadUsersFromRepairProspectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UnreadUsersFromRepairProspectRow FindByid(int id) {
                return ((UnreadUsersFromRepairProspectRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UnreadUsersFromRepairProspectDataTable cln = ((UnreadUsersFromRepairProspectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UnreadUsersFromRepairProspectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnshop_id = base.Columns["shop_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UnreadUsersFromRepairProspectRow NewUnreadUsersFromRepairProspectRow() {
                return ((UnreadUsersFromRepairProspectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UnreadUsersFromRepairProspectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UnreadUsersFromRepairProspectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UnreadUsersFromRepairProspectRowChanged != null)) {
                    this.UnreadUsersFromRepairProspectRowChanged(this, new UnreadUsersFromRepairProspectRowChangeEvent(((UnreadUsersFromRepairProspectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UnreadUsersFromRepairProspectRowChanging != null)) {
                    this.UnreadUsersFromRepairProspectRowChanging(this, new UnreadUsersFromRepairProspectRowChangeEvent(((UnreadUsersFromRepairProspectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UnreadUsersFromRepairProspectRowDeleted != null)) {
                    this.UnreadUsersFromRepairProspectRowDeleted(this, new UnreadUsersFromRepairProspectRowChangeEvent(((UnreadUsersFromRepairProspectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UnreadUsersFromRepairProspectRowDeleting != null)) {
                    this.UnreadUsersFromRepairProspectRowDeleting(this, new UnreadUsersFromRepairProspectRowChangeEvent(((UnreadUsersFromRepairProspectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUnreadUsersFromRepairProspectRow(UnreadUsersFromRepairProspectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UnreadUsersFromRepairProspectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DeletedUsersFromRepairProspectDataTable : global::System.Data.TypedTableBase<DeletedUsersFromRepairProspectRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnshop_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeletedUsersFromRepairProspectDataTable() {
                this.TableName = "DeletedUsersFromRepairProspect";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeletedUsersFromRepairProspectDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DeletedUsersFromRepairProspectDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeletedUsersFromRepairProspectRow this[int index] {
                get {
                    return ((DeletedUsersFromRepairProspectRow)(this.Rows[index]));
                }
            }
            
            public event DeletedUsersFromRepairProspectRowChangeEventHandler DeletedUsersFromRepairProspectRowChanging;
            
            public event DeletedUsersFromRepairProspectRowChangeEventHandler DeletedUsersFromRepairProspectRowChanged;
            
            public event DeletedUsersFromRepairProspectRowChangeEventHandler DeletedUsersFromRepairProspectRowDeleting;
            
            public event DeletedUsersFromRepairProspectRowChangeEventHandler DeletedUsersFromRepairProspectRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDeletedUsersFromRepairProspectRow(DeletedUsersFromRepairProspectRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeletedUsersFromRepairProspectRow AddDeletedUsersFromRepairProspectRow(int user_id, int shop_id) {
                DeletedUsersFromRepairProspectRow rowDeletedUsersFromRepairProspectRow = ((DeletedUsersFromRepairProspectRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        user_id,
                        shop_id};
                rowDeletedUsersFromRepairProspectRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDeletedUsersFromRepairProspectRow);
                return rowDeletedUsersFromRepairProspectRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeletedUsersFromRepairProspectRow FindByID(int ID) {
                return ((DeletedUsersFromRepairProspectRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DeletedUsersFromRepairProspectDataTable cln = ((DeletedUsersFromRepairProspectDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DeletedUsersFromRepairProspectDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnshop_id = base.Columns["shop_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeletedUsersFromRepairProspectRow NewDeletedUsersFromRepairProspectRow() {
                return ((DeletedUsersFromRepairProspectRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DeletedUsersFromRepairProspectRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DeletedUsersFromRepairProspectRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DeletedUsersFromRepairProspectRowChanged != null)) {
                    this.DeletedUsersFromRepairProspectRowChanged(this, new DeletedUsersFromRepairProspectRowChangeEvent(((DeletedUsersFromRepairProspectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DeletedUsersFromRepairProspectRowChanging != null)) {
                    this.DeletedUsersFromRepairProspectRowChanging(this, new DeletedUsersFromRepairProspectRowChangeEvent(((DeletedUsersFromRepairProspectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DeletedUsersFromRepairProspectRowDeleted != null)) {
                    this.DeletedUsersFromRepairProspectRowDeleted(this, new DeletedUsersFromRepairProspectRowChangeEvent(((DeletedUsersFromRepairProspectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DeletedUsersFromRepairProspectRowDeleting != null)) {
                    this.DeletedUsersFromRepairProspectRowDeleting(this, new DeletedUsersFromRepairProspectRowChangeEvent(((DeletedUsersFromRepairProspectRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDeletedUsersFromRepairProspectRow(DeletedUsersFromRepairProspectRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DeletedUsersFromRepairProspectDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MarketingUsersDataTable : global::System.Data.TypedTableBase<MarketingUsersRow> {
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnisShowInProcess;
            
            private global::System.Data.DataColumn columncontactMethod;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersDataTable() {
                this.TableName = "MarketingUsers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MarketingUsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected MarketingUsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isShowInProcessColumn {
                get {
                    return this.columnisShowInProcess;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactMethodColumn {
                get {
                    return this.columncontactMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRow this[int index] {
                get {
                    return ((MarketingUsersRow)(this.Rows[index]));
                }
            }
            
            public event MarketingUsersRowChangeEventHandler MarketingUsersRowChanging;
            
            public event MarketingUsersRowChangeEventHandler MarketingUsersRowChanged;
            
            public event MarketingUsersRowChangeEventHandler MarketingUsersRowDeleting;
            
            public event MarketingUsersRowChangeEventHandler MarketingUsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddMarketingUsersRow(MarketingUsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRow AddMarketingUsersRow(BodyShopRow parentBodyShopRowByFK_MarketingUsers_BodyShop, UserRow parentUserRowByFK_MarketingUsers_MarketingUsers, bool isShowInProcess, int contactMethod, VehicleInfoRow parentVehicleInfoRowByFK_MarketingUsers_VehicleInfo) {
                MarketingUsersRow rowMarketingUsersRow = ((MarketingUsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        isShowInProcess,
                        contactMethod,
                        null};
                if ((parentBodyShopRowByFK_MarketingUsers_BodyShop != null)) {
                    columnValuesArray[0] = parentBodyShopRowByFK_MarketingUsers_BodyShop[0];
                }
                if ((parentUserRowByFK_MarketingUsers_MarketingUsers != null)) {
                    columnValuesArray[1] = parentUserRowByFK_MarketingUsers_MarketingUsers[0];
                }
                if ((parentVehicleInfoRowByFK_MarketingUsers_VehicleInfo != null)) {
                    columnValuesArray[4] = parentVehicleInfoRowByFK_MarketingUsers_VehicleInfo[0];
                }
                rowMarketingUsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMarketingUsersRow);
                return rowMarketingUsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRow FindByshop_iduser_idvehicle_id(int shop_id, int user_id, int vehicle_id) {
                return ((MarketingUsersRow)(this.Rows.Find(new object[] {
                            shop_id,
                            user_id,
                            vehicle_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                MarketingUsersDataTable cln = ((MarketingUsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MarketingUsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnshop_id = base.Columns["shop_id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnisShowInProcess = base.Columns["isShowInProcess"];
                this.columncontactMethod = base.Columns["contactMethod"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnisShowInProcess = new global::System.Data.DataColumn("isShowInProcess", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisShowInProcess);
                this.columncontactMethod = new global::System.Data.DataColumn("contactMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactMethod);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnshop_id,
                                this.columnuser_id,
                                this.columnvehicle_id}, true));
                this.columnshop_id.AllowDBNull = false;
                this.columnuser_id.AllowDBNull = false;
                this.columnvehicle_id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRow NewMarketingUsersRow() {
                return ((MarketingUsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MarketingUsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(MarketingUsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MarketingUsersRowChanged != null)) {
                    this.MarketingUsersRowChanged(this, new MarketingUsersRowChangeEvent(((MarketingUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MarketingUsersRowChanging != null)) {
                    this.MarketingUsersRowChanging(this, new MarketingUsersRowChangeEvent(((MarketingUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MarketingUsersRowDeleted != null)) {
                    this.MarketingUsersRowDeleted(this, new MarketingUsersRowChangeEvent(((MarketingUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MarketingUsersRowDeleting != null)) {
                    this.MarketingUsersRowDeleting(this, new MarketingUsersRowChangeEvent(((MarketingUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveMarketingUsersRow(MarketingUsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MarketingUsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_Search_InProcessUsersDataTable : global::System.Data.TypedTableBase<SP_Search_InProcessUsersRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnshop_name;
            
            private global::System.Data.DataColumn columnuserVehicleStatusId;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columnusername;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columndateIn;
            
            private global::System.Data.DataColumn columndateOut;
            
            private global::System.Data.DataColumn columnyear;
            
            private global::System.Data.DataColumn columnmake;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columnvehicleStatus;
            
            private global::System.Data.DataColumn columncontactMethod;
            
            private global::System.Data.DataColumn columnclaim_number;
            
            private global::System.Data.DataColumn columnro_Identifier;
            
            private global::System.Data.DataColumn columnagent_name;
            
            private global::System.Data.DataColumn columncompany_name;
            
            private global::System.Data.DataColumn columnnet__Total_Amount;
            
            private global::System.Data.DataColumn columnUpdatedDate;
            
            private global::System.Data.DataColumn columnupdatedDate;
            
            private global::System.Data.DataColumn columnestimate_file_identifier;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_InProcessUsersDataTable() {
                this.TableName = "SP_Search_InProcessUsers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SP_Search_InProcessUsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SP_Search_InProcessUsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_nameColumn {
                get {
                    return this.columnshop_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userVehicleStatusIdColumn {
                get {
                    return this.columnuserVehicleStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateInColumn {
                get {
                    return this.columndateIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dateOutColumn {
                get {
                    return this.columndateOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearColumn {
                get {
                    return this.columnyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn makeColumn {
                get {
                    return this.columnmake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicleStatusColumn {
                get {
                    return this.columnvehicleStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactMethodColumn {
                get {
                    return this.columncontactMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn claim_numberColumn {
                get {
                    return this.columnclaim_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ro_IdentifierColumn {
                get {
                    return this.columnro_Identifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agent_nameColumn {
                get {
                    return this.columnagent_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_nameColumn {
                get {
                    return this.columncompany_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn net__Total_AmountColumn {
                get {
                    return this.columnnet__Total_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedDateColumn {
                get {
                    return this.columnUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updatedDateColumn {
                get {
                    return this.columnupdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estimate_file_identifierColumn {
                get {
                    return this.columnestimate_file_identifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_InProcessUsersRow this[int index] {
                get {
                    return ((SP_Search_InProcessUsersRow)(this.Rows[index]));
                }
            }
            
            public event SP_Search_InProcessUsersRowChangeEventHandler SP_Search_InProcessUsersRowChanging;
            
            public event SP_Search_InProcessUsersRowChangeEventHandler SP_Search_InProcessUsersRowChanged;
            
            public event SP_Search_InProcessUsersRowChangeEventHandler SP_Search_InProcessUsersRowDeleting;
            
            public event SP_Search_InProcessUsersRowChangeEventHandler SP_Search_InProcessUsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSP_Search_InProcessUsersRow(SP_Search_InProcessUsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_InProcessUsersRow AddSP_Search_InProcessUsersRow(
                        int user_id, 
                        int shop_id, 
                        string shop_name, 
                        int userVehicleStatusId, 
                        int vehicle_id, 
                        string username, 
                        string email, 
                        string phone, 
                        System.DateTime dateIn, 
                        System.DateTime dateOut, 
                        string year, 
                        string make, 
                        string model, 
                        int vehicleStatus, 
                        int contactMethod, 
                        string claim_number, 
                        string ro_Identifier, 
                        string agent_name, 
                        string company_name, 
                        string net__Total_Amount, 
                        System.DateTime UpdatedDate, 
                        System.DateTime updatedDate1, 
                        string estimate_file_identifier) {
                SP_Search_InProcessUsersRow rowSP_Search_InProcessUsersRow = ((SP_Search_InProcessUsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        user_id,
                        shop_id,
                        shop_name,
                        userVehicleStatusId,
                        vehicle_id,
                        username,
                        email,
                        phone,
                        dateIn,
                        dateOut,
                        year,
                        make,
                        model,
                        vehicleStatus,
                        contactMethod,
                        claim_number,
                        ro_Identifier,
                        agent_name,
                        company_name,
                        net__Total_Amount,
                        UpdatedDate,
                        updatedDate1,
                        estimate_file_identifier};
                rowSP_Search_InProcessUsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_Search_InProcessUsersRow);
                return rowSP_Search_InProcessUsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SP_Search_InProcessUsersDataTable cln = ((SP_Search_InProcessUsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_Search_InProcessUsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnshop_name = base.Columns["shop_name"];
                this.columnuserVehicleStatusId = base.Columns["userVehicleStatusId"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columnusername = base.Columns["username"];
                this.columnemail = base.Columns["email"];
                this.columnphone = base.Columns["phone"];
                this.columndateIn = base.Columns["dateIn"];
                this.columndateOut = base.Columns["dateOut"];
                this.columnyear = base.Columns["year"];
                this.columnmake = base.Columns["make"];
                this.columnmodel = base.Columns["model"];
                this.columnvehicleStatus = base.Columns["vehicleStatus"];
                this.columncontactMethod = base.Columns["contactMethod"];
                this.columnclaim_number = base.Columns["claim_number"];
                this.columnro_Identifier = base.Columns["ro_Identifier"];
                this.columnagent_name = base.Columns["agent_name"];
                this.columncompany_name = base.Columns["company_name"];
                this.columnnet__Total_Amount = base.Columns["net_ Total_Amount"];
                this.columnUpdatedDate = base.Columns["UpdatedDate"];
                this.columnupdatedDate = base.Columns["updatedDate"];
                this.columnestimate_file_identifier = base.Columns["estimate_file_identifier"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnshop_name = new global::System.Data.DataColumn("shop_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_name);
                this.columnuserVehicleStatusId = new global::System.Data.DataColumn("userVehicleStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserVehicleStatusId);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columnusername = new global::System.Data.DataColumn("username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columndateIn = new global::System.Data.DataColumn("dateIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateIn);
                this.columndateOut = new global::System.Data.DataColumn("dateOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateOut);
                this.columnyear = new global::System.Data.DataColumn("year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear);
                this.columnmake = new global::System.Data.DataColumn("make", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmake);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columnvehicleStatus = new global::System.Data.DataColumn("vehicleStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicleStatus);
                this.columncontactMethod = new global::System.Data.DataColumn("contactMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactMethod);
                this.columnclaim_number = new global::System.Data.DataColumn("claim_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclaim_number);
                this.columnro_Identifier = new global::System.Data.DataColumn("ro_Identifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnro_Identifier);
                this.columnagent_name = new global::System.Data.DataColumn("agent_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_name);
                this.columncompany_name = new global::System.Data.DataColumn("company_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_name);
                this.columnnet__Total_Amount = new global::System.Data.DataColumn("net_ Total_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnet__Total_Amount);
                this.columnUpdatedDate = new global::System.Data.DataColumn("UpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedDate);
                this.columnupdatedDate = new global::System.Data.DataColumn("updatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdatedDate);
                this.columnestimate_file_identifier = new global::System.Data.DataColumn("estimate_file_identifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestimate_file_identifier);
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnshop_name.MaxLength = 50;
                this.columnusername.MaxLength = 50;
                this.columnemail.MaxLength = 50;
                this.columnphone.MaxLength = 50;
                this.columnyear.MaxLength = 50;
                this.columnmake.MaxLength = 50;
                this.columnmodel.MaxLength = 50;
                this.columnclaim_number.MaxLength = 50;
                this.columnro_Identifier.MaxLength = 50;
                this.columnagent_name.MaxLength = 50;
                this.columncompany_name.MaxLength = 50;
                this.columnnet__Total_Amount.MaxLength = 50;
                this.columnestimate_file_identifier.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_InProcessUsersRow NewSP_Search_InProcessUsersRow() {
                return ((SP_Search_InProcessUsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_Search_InProcessUsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SP_Search_InProcessUsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_Search_InProcessUsersRowChanged != null)) {
                    this.SP_Search_InProcessUsersRowChanged(this, new SP_Search_InProcessUsersRowChangeEvent(((SP_Search_InProcessUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_Search_InProcessUsersRowChanging != null)) {
                    this.SP_Search_InProcessUsersRowChanging(this, new SP_Search_InProcessUsersRowChangeEvent(((SP_Search_InProcessUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_Search_InProcessUsersRowDeleted != null)) {
                    this.SP_Search_InProcessUsersRowDeleted(this, new SP_Search_InProcessUsersRowChangeEvent(((SP_Search_InProcessUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_Search_InProcessUsersRowDeleting != null)) {
                    this.SP_Search_InProcessUsersRowDeleting(this, new SP_Search_InProcessUsersRowChangeEvent(((SP_Search_InProcessUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSP_Search_InProcessUsersRow(SP_Search_InProcessUsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_Search_InProcessUsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SP_Search_EmailTextMarketingCentersDataTable : global::System.Data.TypedTableBase<SP_Search_EmailTextMarketingCentersRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnuserName;
            
            private global::System.Data.DataColumn columnzip;
            
            private global::System.Data.DataColumn columnappDownLoadDate;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columnmake;
            
            private global::System.Data.DataColumn columnyear;
            
            private global::System.Data.DataColumn columnupdatedEntryTime;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columnclaim_number;
            
            private global::System.Data.DataColumn columnro_Identifier;
            
            private global::System.Data.DataColumn columnagent_name;
            
            private global::System.Data.DataColumn columncompany_name;
            
            private global::System.Data.DataColumn columnnet__Total_Amount;
            
            private global::System.Data.DataColumn columndeliverydate;
            
            private global::System.Data.DataColumn columnisShowEmailMarketing;
            
            private global::System.Data.DataColumn columnisShowTextMarketing;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_EmailTextMarketingCentersDataTable() {
                this.TableName = "SP_Search_EmailTextMarketingCenters";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SP_Search_EmailTextMarketingCentersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SP_Search_EmailTextMarketingCentersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn userNameColumn {
                get {
                    return this.columnuserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zipColumn {
                get {
                    return this.columnzip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn appDownLoadDateColumn {
                get {
                    return this.columnappDownLoadDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn makeColumn {
                get {
                    return this.columnmake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearColumn {
                get {
                    return this.columnyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updatedEntryTimeColumn {
                get {
                    return this.columnupdatedEntryTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn claim_numberColumn {
                get {
                    return this.columnclaim_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ro_IdentifierColumn {
                get {
                    return this.columnro_Identifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agent_nameColumn {
                get {
                    return this.columnagent_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_nameColumn {
                get {
                    return this.columncompany_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn net__Total_AmountColumn {
                get {
                    return this.columnnet__Total_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn deliverydateColumn {
                get {
                    return this.columndeliverydate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isShowEmailMarketingColumn {
                get {
                    return this.columnisShowEmailMarketing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isShowTextMarketingColumn {
                get {
                    return this.columnisShowTextMarketing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_EmailTextMarketingCentersRow this[int index] {
                get {
                    return ((SP_Search_EmailTextMarketingCentersRow)(this.Rows[index]));
                }
            }
            
            public event SP_Search_EmailTextMarketingCentersRowChangeEventHandler SP_Search_EmailTextMarketingCentersRowChanging;
            
            public event SP_Search_EmailTextMarketingCentersRowChangeEventHandler SP_Search_EmailTextMarketingCentersRowChanged;
            
            public event SP_Search_EmailTextMarketingCentersRowChangeEventHandler SP_Search_EmailTextMarketingCentersRowDeleting;
            
            public event SP_Search_EmailTextMarketingCentersRowChangeEventHandler SP_Search_EmailTextMarketingCentersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSP_Search_EmailTextMarketingCentersRow(SP_Search_EmailTextMarketingCentersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_EmailTextMarketingCentersRow AddSP_Search_EmailTextMarketingCentersRow(
                        int user_id, 
                        int shop_id, 
                        string email, 
                        string phone, 
                        string userName, 
                        string zip, 
                        System.DateTime appDownLoadDate, 
                        string model, 
                        string make, 
                        string year, 
                        System.DateTime updatedEntryTime, 
                        int vehicle_id, 
                        string claim_number, 
                        string ro_Identifier, 
                        string agent_name, 
                        string company_name, 
                        string net__Total_Amount, 
                        System.DateTime deliverydate, 
                        bool isShowEmailMarketing, 
                        bool isShowTextMarketing) {
                SP_Search_EmailTextMarketingCentersRow rowSP_Search_EmailTextMarketingCentersRow = ((SP_Search_EmailTextMarketingCentersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        user_id,
                        shop_id,
                        email,
                        phone,
                        userName,
                        zip,
                        appDownLoadDate,
                        model,
                        make,
                        year,
                        updatedEntryTime,
                        vehicle_id,
                        claim_number,
                        ro_Identifier,
                        agent_name,
                        company_name,
                        net__Total_Amount,
                        deliverydate,
                        isShowEmailMarketing,
                        isShowTextMarketing};
                rowSP_Search_EmailTextMarketingCentersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSP_Search_EmailTextMarketingCentersRow);
                return rowSP_Search_EmailTextMarketingCentersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SP_Search_EmailTextMarketingCentersDataTable cln = ((SP_Search_EmailTextMarketingCentersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SP_Search_EmailTextMarketingCentersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnemail = base.Columns["email"];
                this.columnphone = base.Columns["phone"];
                this.columnuserName = base.Columns["userName"];
                this.columnzip = base.Columns["zip"];
                this.columnappDownLoadDate = base.Columns["appDownLoadDate"];
                this.columnmodel = base.Columns["model"];
                this.columnmake = base.Columns["make"];
                this.columnyear = base.Columns["year"];
                this.columnupdatedEntryTime = base.Columns["updatedEntryTime"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columnclaim_number = base.Columns["claim_number"];
                this.columnro_Identifier = base.Columns["ro_Identifier"];
                this.columnagent_name = base.Columns["agent_name"];
                this.columncompany_name = base.Columns["company_name"];
                this.columnnet__Total_Amount = base.Columns["net_ Total_Amount"];
                this.columndeliverydate = base.Columns["deliverydate"];
                this.columnisShowEmailMarketing = base.Columns["isShowEmailMarketing"];
                this.columnisShowTextMarketing = base.Columns["isShowTextMarketing"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnuserName = new global::System.Data.DataColumn("userName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuserName);
                this.columnzip = new global::System.Data.DataColumn("zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzip);
                this.columnappDownLoadDate = new global::System.Data.DataColumn("appDownLoadDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappDownLoadDate);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columnmake = new global::System.Data.DataColumn("make", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmake);
                this.columnyear = new global::System.Data.DataColumn("year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear);
                this.columnupdatedEntryTime = new global::System.Data.DataColumn("updatedEntryTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdatedEntryTime);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columnclaim_number = new global::System.Data.DataColumn("claim_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclaim_number);
                this.columnro_Identifier = new global::System.Data.DataColumn("ro_Identifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnro_Identifier);
                this.columnagent_name = new global::System.Data.DataColumn("agent_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_name);
                this.columncompany_name = new global::System.Data.DataColumn("company_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_name);
                this.columnnet__Total_Amount = new global::System.Data.DataColumn("net_ Total_Amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnet__Total_Amount);
                this.columndeliverydate = new global::System.Data.DataColumn("deliverydate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeliverydate);
                this.columnisShowEmailMarketing = new global::System.Data.DataColumn("isShowEmailMarketing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisShowEmailMarketing);
                this.columnisShowTextMarketing = new global::System.Data.DataColumn("isShowTextMarketing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisShowTextMarketing);
                this.columnid.AutoIncrement = true;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnuser_id.AllowDBNull = false;
                this.columnemail.MaxLength = 50;
                this.columnphone.MaxLength = 50;
                this.columnuserName.MaxLength = 50;
                this.columnzip.MaxLength = 50;
                this.columnmodel.MaxLength = 50;
                this.columnmake.MaxLength = 50;
                this.columnyear.MaxLength = 50;
                this.columnclaim_number.MaxLength = 50;
                this.columnro_Identifier.MaxLength = 50;
                this.columnagent_name.MaxLength = 50;
                this.columncompany_name.MaxLength = 50;
                this.columnnet__Total_Amount.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_EmailTextMarketingCentersRow NewSP_Search_EmailTextMarketingCentersRow() {
                return ((SP_Search_EmailTextMarketingCentersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SP_Search_EmailTextMarketingCentersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SP_Search_EmailTextMarketingCentersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SP_Search_EmailTextMarketingCentersRowChanged != null)) {
                    this.SP_Search_EmailTextMarketingCentersRowChanged(this, new SP_Search_EmailTextMarketingCentersRowChangeEvent(((SP_Search_EmailTextMarketingCentersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SP_Search_EmailTextMarketingCentersRowChanging != null)) {
                    this.SP_Search_EmailTextMarketingCentersRowChanging(this, new SP_Search_EmailTextMarketingCentersRowChangeEvent(((SP_Search_EmailTextMarketingCentersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SP_Search_EmailTextMarketingCentersRowDeleted != null)) {
                    this.SP_Search_EmailTextMarketingCentersRowDeleted(this, new SP_Search_EmailTextMarketingCentersRowChangeEvent(((SP_Search_EmailTextMarketingCentersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SP_Search_EmailTextMarketingCentersRowDeleting != null)) {
                    this.SP_Search_EmailTextMarketingCentersRowDeleting(this, new SP_Search_EmailTextMarketingCentersRowChangeEvent(((SP_Search_EmailTextMarketingCentersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSP_Search_EmailTextMarketingCentersRow(SP_Search_EmailTextMarketingCentersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SP_Search_EmailTextMarketingCentersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BodyShop_PrivateLabelDataTable : global::System.Data.TypedTableBase<BodyShop_PrivateLabelRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnprivate_label_id;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnpage_logo_path;
            
            private global::System.Data.DataColumn columnbtn_logo_path;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShop_PrivateLabelDataTable() {
                this.TableName = "BodyShop_PrivateLabel";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BodyShop_PrivateLabelDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BodyShop_PrivateLabelDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn private_label_idColumn {
                get {
                    return this.columnprivate_label_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn page_logo_pathColumn {
                get {
                    return this.columnpage_logo_path;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn btn_logo_pathColumn {
                get {
                    return this.columnbtn_logo_path;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShop_PrivateLabelRow this[int index] {
                get {
                    return ((BodyShop_PrivateLabelRow)(this.Rows[index]));
                }
            }
            
            public event BodyShop_PrivateLabelRowChangeEventHandler BodyShop_PrivateLabelRowChanging;
            
            public event BodyShop_PrivateLabelRowChangeEventHandler BodyShop_PrivateLabelRowChanged;
            
            public event BodyShop_PrivateLabelRowChangeEventHandler BodyShop_PrivateLabelRowDeleting;
            
            public event BodyShop_PrivateLabelRowChangeEventHandler BodyShop_PrivateLabelRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBodyShop_PrivateLabelRow(BodyShop_PrivateLabelRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShop_PrivateLabelRow AddBodyShop_PrivateLabelRow(int private_label_id, int shop_id, string page_logo_path, string btn_logo_path) {
                BodyShop_PrivateLabelRow rowBodyShop_PrivateLabelRow = ((BodyShop_PrivateLabelRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        private_label_id,
                        shop_id,
                        page_logo_path,
                        btn_logo_path};
                rowBodyShop_PrivateLabelRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBodyShop_PrivateLabelRow);
                return rowBodyShop_PrivateLabelRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShop_PrivateLabelRow FindByid(int id) {
                return ((BodyShop_PrivateLabelRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BodyShop_PrivateLabelDataTable cln = ((BodyShop_PrivateLabelDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BodyShop_PrivateLabelDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnprivate_label_id = base.Columns["private_label_id"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnpage_logo_path = base.Columns["page_logo_path"];
                this.columnbtn_logo_path = base.Columns["btn_logo_path"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnprivate_label_id = new global::System.Data.DataColumn("private_label_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprivate_label_id);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnpage_logo_path = new global::System.Data.DataColumn("page_logo_path", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpage_logo_path);
                this.columnbtn_logo_path = new global::System.Data.DataColumn("btn_logo_path", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbtn_logo_path);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnpage_logo_path.MaxLength = 500;
                this.columnbtn_logo_path.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShop_PrivateLabelRow NewBodyShop_PrivateLabelRow() {
                return ((BodyShop_PrivateLabelRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BodyShop_PrivateLabelRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BodyShop_PrivateLabelRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BodyShop_PrivateLabelRowChanged != null)) {
                    this.BodyShop_PrivateLabelRowChanged(this, new BodyShop_PrivateLabelRowChangeEvent(((BodyShop_PrivateLabelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BodyShop_PrivateLabelRowChanging != null)) {
                    this.BodyShop_PrivateLabelRowChanging(this, new BodyShop_PrivateLabelRowChangeEvent(((BodyShop_PrivateLabelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BodyShop_PrivateLabelRowDeleted != null)) {
                    this.BodyShop_PrivateLabelRowDeleted(this, new BodyShop_PrivateLabelRowChangeEvent(((BodyShop_PrivateLabelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BodyShop_PrivateLabelRowDeleting != null)) {
                    this.BodyShop_PrivateLabelRowDeleting(this, new BodyShop_PrivateLabelRowChangeEvent(((BodyShop_PrivateLabelRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBodyShop_PrivateLabelRow(BodyShop_PrivateLabelRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BodyShop_PrivateLabelDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CampaignDataTable : global::System.Data.TypedTableBase<CampaignRow> {
            
            private global::System.Data.DataColumn columncampaign_id;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnmessage;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnisEmail;
            
            private global::System.Data.DataColumn columncreateddate;
            
            private global::System.Data.DataColumn columnis_zip_code_matches_message;
            
            private global::System.Data.DataColumn columnis_preferred_shop_message;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CampaignDataTable() {
                this.TableName = "Campaign";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CampaignDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CampaignDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn campaign_idColumn {
                get {
                    return this.columncampaign_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn messageColumn {
                get {
                    return this.columnmessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isEmailColumn {
                get {
                    return this.columnisEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createddateColumn {
                get {
                    return this.columncreateddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_zip_code_matches_messageColumn {
                get {
                    return this.columnis_zip_code_matches_message;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn is_preferred_shop_messageColumn {
                get {
                    return this.columnis_preferred_shop_message;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CampaignRow this[int index] {
                get {
                    return ((CampaignRow)(this.Rows[index]));
                }
            }
            
            public event CampaignRowChangeEventHandler CampaignRowChanging;
            
            public event CampaignRowChangeEventHandler CampaignRowChanged;
            
            public event CampaignRowChangeEventHandler CampaignRowDeleting;
            
            public event CampaignRowChangeEventHandler CampaignRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCampaignRow(CampaignRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CampaignRow AddCampaignRow(string name, string message, int shop_id, bool isEmail, System.DateTime createddate, bool is_zip_code_matches_message, bool is_preferred_shop_message) {
                CampaignRow rowCampaignRow = ((CampaignRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        name,
                        message,
                        shop_id,
                        isEmail,
                        createddate,
                        is_zip_code_matches_message,
                        is_preferred_shop_message};
                rowCampaignRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCampaignRow);
                return rowCampaignRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CampaignRow FindBycampaign_id(int campaign_id) {
                return ((CampaignRow)(this.Rows.Find(new object[] {
                            campaign_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CampaignDataTable cln = ((CampaignDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CampaignDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columncampaign_id = base.Columns["campaign_id"];
                this.columnname = base.Columns["name"];
                this.columnmessage = base.Columns["message"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnisEmail = base.Columns["isEmail"];
                this.columncreateddate = base.Columns["createddate"];
                this.columnis_zip_code_matches_message = base.Columns["is_zip_code_matches_message"];
                this.columnis_preferred_shop_message = base.Columns["is_preferred_shop_message"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columncampaign_id = new global::System.Data.DataColumn("campaign_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncampaign_id);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnmessage = new global::System.Data.DataColumn("message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessage);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnisEmail = new global::System.Data.DataColumn("isEmail", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisEmail);
                this.columncreateddate = new global::System.Data.DataColumn("createddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreateddate);
                this.columnis_zip_code_matches_message = new global::System.Data.DataColumn("is_zip_code_matches_message", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_zip_code_matches_message);
                this.columnis_preferred_shop_message = new global::System.Data.DataColumn("is_preferred_shop_message", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnis_preferred_shop_message);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columncampaign_id}, true));
                this.columncampaign_id.AutoIncrement = true;
                this.columncampaign_id.AutoIncrementSeed = -1;
                this.columncampaign_id.AutoIncrementStep = -1;
                this.columncampaign_id.AllowDBNull = false;
                this.columncampaign_id.ReadOnly = true;
                this.columncampaign_id.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 50;
                this.columnmessage.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CampaignRow NewCampaignRow() {
                return ((CampaignRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CampaignRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CampaignRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CampaignRowChanged != null)) {
                    this.CampaignRowChanged(this, new CampaignRowChangeEvent(((CampaignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CampaignRowChanging != null)) {
                    this.CampaignRowChanging(this, new CampaignRowChangeEvent(((CampaignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CampaignRowDeleted != null)) {
                    this.CampaignRowDeleted(this, new CampaignRowChangeEvent(((CampaignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CampaignRowDeleting != null)) {
                    this.CampaignRowDeleting(this, new CampaignRowChangeEvent(((CampaignRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCampaignRow(CampaignRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CampaignDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CommunicationHistoryDataTable : global::System.Data.TypedTableBase<CommunicationHistoryRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnShop_Id;
            
            private global::System.Data.DataColumn columnUser_Id;
            
            private global::System.Data.DataColumn columnCommunicationType;
            
            private global::System.Data.DataColumn columnMessageText;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnFromAppSection;
            
            private global::System.Data.DataColumn columnMessageId;
            
            private global::System.Data.DataColumn columnDeliveryStatus;
            
            private global::System.Data.DataColumn columnDeliveryDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryDataTable() {
                this.TableName = "CommunicationHistory";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CommunicationHistoryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CommunicationHistoryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Shop_IdColumn {
                get {
                    return this.columnShop_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_IdColumn {
                get {
                    return this.columnUser_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommunicationTypeColumn {
                get {
                    return this.columnCommunicationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageTextColumn {
                get {
                    return this.columnMessageText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromAppSectionColumn {
                get {
                    return this.columnFromAppSection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageIdColumn {
                get {
                    return this.columnMessageId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryStatusColumn {
                get {
                    return this.columnDeliveryStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryRow this[int index] {
                get {
                    return ((CommunicationHistoryRow)(this.Rows[index]));
                }
            }
            
            public event CommunicationHistoryRowChangeEventHandler CommunicationHistoryRowChanging;
            
            public event CommunicationHistoryRowChangeEventHandler CommunicationHistoryRowChanged;
            
            public event CommunicationHistoryRowChangeEventHandler CommunicationHistoryRowDeleting;
            
            public event CommunicationHistoryRowChangeEventHandler CommunicationHistoryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCommunicationHistoryRow(CommunicationHistoryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryRow AddCommunicationHistoryRow(BodyShopRow parentBodyShopRowByFK_CommunicationHistory_BodyShop, UserRow parentUserRowByFK_CommunicationHistory_User, int CommunicationType, string MessageText, System.DateTime CreatedDate, string Phone, string Email, int FromAppSection, string MessageId, string DeliveryStatus, System.DateTime DeliveryDate) {
                CommunicationHistoryRow rowCommunicationHistoryRow = ((CommunicationHistoryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        CommunicationType,
                        MessageText,
                        CreatedDate,
                        Phone,
                        Email,
                        FromAppSection,
                        MessageId,
                        DeliveryStatus,
                        DeliveryDate};
                if ((parentBodyShopRowByFK_CommunicationHistory_BodyShop != null)) {
                    columnValuesArray[1] = parentBodyShopRowByFK_CommunicationHistory_BodyShop[0];
                }
                if ((parentUserRowByFK_CommunicationHistory_User != null)) {
                    columnValuesArray[2] = parentUserRowByFK_CommunicationHistory_User[0];
                }
                rowCommunicationHistoryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCommunicationHistoryRow);
                return rowCommunicationHistoryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryRow FindByID(int ID) {
                return ((CommunicationHistoryRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CommunicationHistoryDataTable cln = ((CommunicationHistoryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CommunicationHistoryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnShop_Id = base.Columns["Shop_Id"];
                this.columnUser_Id = base.Columns["User_Id"];
                this.columnCommunicationType = base.Columns["CommunicationType"];
                this.columnMessageText = base.Columns["MessageText"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnPhone = base.Columns["Phone"];
                this.columnEmail = base.Columns["Email"];
                this.columnFromAppSection = base.Columns["FromAppSection"];
                this.columnMessageId = base.Columns["MessageId"];
                this.columnDeliveryStatus = base.Columns["DeliveryStatus"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnShop_Id = new global::System.Data.DataColumn("Shop_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShop_Id);
                this.columnUser_Id = new global::System.Data.DataColumn("User_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_Id);
                this.columnCommunicationType = new global::System.Data.DataColumn("CommunicationType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommunicationType);
                this.columnMessageText = new global::System.Data.DataColumn("MessageText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageText);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnFromAppSection = new global::System.Data.DataColumn("FromAppSection", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromAppSection);
                this.columnMessageId = new global::System.Data.DataColumn("MessageId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageId);
                this.columnDeliveryStatus = new global::System.Data.DataColumn("DeliveryStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryStatus);
                this.columnDeliveryDate = new global::System.Data.DataColumn("DeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnMessageText.MaxLength = 2147483647;
                this.columnPhone.MaxLength = 50;
                this.columnEmail.MaxLength = 50;
                this.columnMessageId.MaxLength = 500;
                this.columnDeliveryStatus.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryRow NewCommunicationHistoryRow() {
                return ((CommunicationHistoryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CommunicationHistoryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CommunicationHistoryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CommunicationHistoryRowChanged != null)) {
                    this.CommunicationHistoryRowChanged(this, new CommunicationHistoryRowChangeEvent(((CommunicationHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CommunicationHistoryRowChanging != null)) {
                    this.CommunicationHistoryRowChanging(this, new CommunicationHistoryRowChangeEvent(((CommunicationHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CommunicationHistoryRowDeleted != null)) {
                    this.CommunicationHistoryRowDeleted(this, new CommunicationHistoryRowChangeEvent(((CommunicationHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CommunicationHistoryRowDeleting != null)) {
                    this.CommunicationHistoryRowDeleting(this, new CommunicationHistoryRowChangeEvent(((CommunicationHistoryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCommunicationHistoryRow(CommunicationHistoryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CommunicationHistoryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetShopIdsByZipCodeDataTable : global::System.Data.TypedTableBase<GetShopIdsByZipCodeRow> {
            
            private global::System.Data.DataColumn columnShopID;
            
            private global::System.Data.DataColumn columnZip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetShopIdsByZipCodeDataTable() {
                this.TableName = "GetShopIdsByZipCode";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetShopIdsByZipCodeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected GetShopIdsByZipCodeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopIDColumn {
                get {
                    return this.columnShopID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetShopIdsByZipCodeRow this[int index] {
                get {
                    return ((GetShopIdsByZipCodeRow)(this.Rows[index]));
                }
            }
            
            public event GetShopIdsByZipCodeRowChangeEventHandler GetShopIdsByZipCodeRowChanging;
            
            public event GetShopIdsByZipCodeRowChangeEventHandler GetShopIdsByZipCodeRowChanged;
            
            public event GetShopIdsByZipCodeRowChangeEventHandler GetShopIdsByZipCodeRowDeleting;
            
            public event GetShopIdsByZipCodeRowChangeEventHandler GetShopIdsByZipCodeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddGetShopIdsByZipCodeRow(GetShopIdsByZipCodeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetShopIdsByZipCodeRow AddGetShopIdsByZipCodeRow(int ShopID, string Zip) {
                GetShopIdsByZipCodeRow rowGetShopIdsByZipCodeRow = ((GetShopIdsByZipCodeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShopID,
                        Zip};
                rowGetShopIdsByZipCodeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetShopIdsByZipCodeRow);
                return rowGetShopIdsByZipCodeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                GetShopIdsByZipCodeDataTable cln = ((GetShopIdsByZipCodeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetShopIdsByZipCodeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnShopID = base.Columns["ShopID"];
                this.columnZip = base.Columns["Zip"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnShopID = new global::System.Data.DataColumn("ShopID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopID);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnZip.AllowDBNull = false;
                this.columnZip.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetShopIdsByZipCodeRow NewGetShopIdsByZipCodeRow() {
                return ((GetShopIdsByZipCodeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetShopIdsByZipCodeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(GetShopIdsByZipCodeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetShopIdsByZipCodeRowChanged != null)) {
                    this.GetShopIdsByZipCodeRowChanged(this, new GetShopIdsByZipCodeRowChangeEvent(((GetShopIdsByZipCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetShopIdsByZipCodeRowChanging != null)) {
                    this.GetShopIdsByZipCodeRowChanging(this, new GetShopIdsByZipCodeRowChangeEvent(((GetShopIdsByZipCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetShopIdsByZipCodeRowDeleted != null)) {
                    this.GetShopIdsByZipCodeRowDeleted(this, new GetShopIdsByZipCodeRowChangeEvent(((GetShopIdsByZipCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetShopIdsByZipCodeRowDeleting != null)) {
                    this.GetShopIdsByZipCodeRowDeleting(this, new GetShopIdsByZipCodeRowChangeEvent(((GetShopIdsByZipCodeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveGetShopIdsByZipCodeRow(GetShopIdsByZipCodeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetShopIdsByZipCodeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LoginDataTable : global::System.Data.TypedTableBase<LoginRow> {
            
            private global::System.Data.DataColumn columnUserID;
            
            private global::System.Data.DataColumn columnUserName;
            
            private global::System.Data.DataColumn columnPassword;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnCompanySize;
            
            private global::System.Data.DataColumn columnCountryEntityID;
            
            private global::System.Data.DataColumn columnShopID;
            
            private global::System.Data.DataColumn columnRoleId;
            
            private global::System.Data.DataColumn columnUseProvidedSMTPServer;
            
            private global::System.Data.DataColumn columnSMTPServerName;
            
            private global::System.Data.DataColumn columnSMTPServerUserName;
            
            private global::System.Data.DataColumn columnSMTPServerPassword;
            
            private global::System.Data.DataColumn columnSMTPServerPort;
            
            private global::System.Data.DataColumn columnEnableSSL;
            
            private global::System.Data.DataColumn columnSMTPServerEmail;
            
            private global::System.Data.DataColumn columnAvailableSMS;
            
            private global::System.Data.DataColumn columnSentSMS;
            
            private global::System.Data.DataColumn columnSMSActivationDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginDataTable() {
                this.TableName = "Login";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LoginDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LoginDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIDColumn {
                get {
                    return this.columnUserID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserNameColumn {
                get {
                    return this.columnUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanySizeColumn {
                get {
                    return this.columnCompanySize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryEntityIDColumn {
                get {
                    return this.columnCountryEntityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopIDColumn {
                get {
                    return this.columnShopID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RoleIdColumn {
                get {
                    return this.columnRoleId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UseProvidedSMTPServerColumn {
                get {
                    return this.columnUseProvidedSMTPServer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMTPServerNameColumn {
                get {
                    return this.columnSMTPServerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMTPServerUserNameColumn {
                get {
                    return this.columnSMTPServerUserName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMTPServerPasswordColumn {
                get {
                    return this.columnSMTPServerPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMTPServerPortColumn {
                get {
                    return this.columnSMTPServerPort;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EnableSSLColumn {
                get {
                    return this.columnEnableSSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMTPServerEmailColumn {
                get {
                    return this.columnSMTPServerEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AvailableSMSColumn {
                get {
                    return this.columnAvailableSMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SentSMSColumn {
                get {
                    return this.columnSentSMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMSActivationDateColumn {
                get {
                    return this.columnSMSActivationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginRow this[int index] {
                get {
                    return ((LoginRow)(this.Rows[index]));
                }
            }
            
            public event LoginRowChangeEventHandler LoginRowChanging;
            
            public event LoginRowChangeEventHandler LoginRowChanged;
            
            public event LoginRowChangeEventHandler LoginRowDeleting;
            
            public event LoginRowChangeEventHandler LoginRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLoginRow(LoginRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginRow AddLoginRow(
                        string UserName, 
                        string Password, 
                        string FirstName, 
                        string LastName, 
                        string Email, 
                        string Phone, 
                        string Company, 
                        int CompanySize, 
                        int CountryEntityID, 
                        BodyShopRow parentBodyShopRowByFK_Login_ShopID, 
                        int RoleId, 
                        bool UseProvidedSMTPServer, 
                        string SMTPServerName, 
                        string SMTPServerUserName, 
                        string SMTPServerPassword, 
                        int SMTPServerPort, 
                        bool EnableSSL, 
                        string SMTPServerEmail, 
                        int AvailableSMS, 
                        int SentSMS, 
                        System.DateTime SMSActivationDate) {
                LoginRow rowLoginRow = ((LoginRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        UserName,
                        Password,
                        FirstName,
                        LastName,
                        Email,
                        Phone,
                        Company,
                        CompanySize,
                        CountryEntityID,
                        null,
                        RoleId,
                        UseProvidedSMTPServer,
                        SMTPServerName,
                        SMTPServerUserName,
                        SMTPServerPassword,
                        SMTPServerPort,
                        EnableSSL,
                        SMTPServerEmail,
                        AvailableSMS,
                        SentSMS,
                        SMSActivationDate};
                if ((parentBodyShopRowByFK_Login_ShopID != null)) {
                    columnValuesArray[10] = parentBodyShopRowByFK_Login_ShopID[0];
                }
                rowLoginRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLoginRow);
                return rowLoginRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginRow FindByUserID(int UserID) {
                return ((LoginRow)(this.Rows.Find(new object[] {
                            UserID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LoginDataTable cln = ((LoginDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LoginDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUserID = base.Columns["UserID"];
                this.columnUserName = base.Columns["UserName"];
                this.columnPassword = base.Columns["Password"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnEmail = base.Columns["Email"];
                this.columnPhone = base.Columns["Phone"];
                this.columnCompany = base.Columns["Company"];
                this.columnCompanySize = base.Columns["CompanySize"];
                this.columnCountryEntityID = base.Columns["CountryEntityID"];
                this.columnShopID = base.Columns["ShopID"];
                this.columnRoleId = base.Columns["RoleId"];
                this.columnUseProvidedSMTPServer = base.Columns["UseProvidedSMTPServer"];
                this.columnSMTPServerName = base.Columns["SMTPServerName"];
                this.columnSMTPServerUserName = base.Columns["SMTPServerUserName"];
                this.columnSMTPServerPassword = base.Columns["SMTPServerPassword"];
                this.columnSMTPServerPort = base.Columns["SMTPServerPort"];
                this.columnEnableSSL = base.Columns["EnableSSL"];
                this.columnSMTPServerEmail = base.Columns["SMTPServerEmail"];
                this.columnAvailableSMS = base.Columns["AvailableSMS"];
                this.columnSentSMS = base.Columns["SentSMS"];
                this.columnSMSActivationDate = base.Columns["SMSActivationDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUserID = new global::System.Data.DataColumn("UserID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserID);
                this.columnUserName = new global::System.Data.DataColumn("UserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserName);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnCompanySize = new global::System.Data.DataColumn("CompanySize", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanySize);
                this.columnCountryEntityID = new global::System.Data.DataColumn("CountryEntityID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryEntityID);
                this.columnShopID = new global::System.Data.DataColumn("ShopID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopID);
                this.columnRoleId = new global::System.Data.DataColumn("RoleId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoleId);
                this.columnUseProvidedSMTPServer = new global::System.Data.DataColumn("UseProvidedSMTPServer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseProvidedSMTPServer);
                this.columnSMTPServerName = new global::System.Data.DataColumn("SMTPServerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPServerName);
                this.columnSMTPServerUserName = new global::System.Data.DataColumn("SMTPServerUserName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPServerUserName);
                this.columnSMTPServerPassword = new global::System.Data.DataColumn("SMTPServerPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPServerPassword);
                this.columnSMTPServerPort = new global::System.Data.DataColumn("SMTPServerPort", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPServerPort);
                this.columnEnableSSL = new global::System.Data.DataColumn("EnableSSL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnableSSL);
                this.columnSMTPServerEmail = new global::System.Data.DataColumn("SMTPServerEmail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTPServerEmail);
                this.columnAvailableSMS = new global::System.Data.DataColumn("AvailableSMS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAvailableSMS);
                this.columnSentSMS = new global::System.Data.DataColumn("SentSMS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSentSMS);
                this.columnSMSActivationDate = new global::System.Data.DataColumn("SMSActivationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMSActivationDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUserID}, true));
                this.columnUserID.AutoIncrement = true;
                this.columnUserID.AutoIncrementSeed = -1;
                this.columnUserID.AutoIncrementStep = -1;
                this.columnUserID.AllowDBNull = false;
                this.columnUserID.ReadOnly = true;
                this.columnUserID.Unique = true;
                this.columnUserName.MaxLength = 50;
                this.columnPassword.MaxLength = 50;
                this.columnFirstName.MaxLength = 50;
                this.columnLastName.MaxLength = 50;
                this.columnEmail.MaxLength = 50;
                this.columnPhone.MaxLength = 50;
                this.columnCompany.MaxLength = 50;
                this.columnSMTPServerName.MaxLength = 50;
                this.columnSMTPServerUserName.MaxLength = 50;
                this.columnSMTPServerPassword.MaxLength = 50;
                this.columnEnableSSL.AllowDBNull = false;
                this.columnSMTPServerEmail.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginRow NewLoginRow() {
                return ((LoginRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LoginRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LoginRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LoginRowChanged != null)) {
                    this.LoginRowChanged(this, new LoginRowChangeEvent(((LoginRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LoginRowChanging != null)) {
                    this.LoginRowChanging(this, new LoginRowChangeEvent(((LoginRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LoginRowDeleted != null)) {
                    this.LoginRowDeleted(this, new LoginRowChangeEvent(((LoginRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LoginRowDeleting != null)) {
                    this.LoginRowDeleting(this, new LoginRowChangeEvent(((LoginRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLoginRow(LoginRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LoginDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VehicleMediaLinkDataTable : global::System.Data.TypedTableBase<VehicleMediaLinkRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columnmedia_link;
            
            private global::System.Data.DataColumn columncreated_datetime;
            
            private global::System.Data.DataColumn columnVehicleMediaLinkNoteID;
            
            private global::System.Data.DataColumn columnmedia_link_Thumnail;
            
            private global::System.Data.DataColumn columnIsNewLink;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleMediaLinkDataTable() {
                this.TableName = "VehicleMediaLink";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VehicleMediaLinkDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VehicleMediaLinkDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn media_linkColumn {
                get {
                    return this.columnmedia_link;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn created_datetimeColumn {
                get {
                    return this.columncreated_datetime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleMediaLinkNoteIDColumn {
                get {
                    return this.columnVehicleMediaLinkNoteID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn media_link_ThumnailColumn {
                get {
                    return this.columnmedia_link_Thumnail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsNewLinkColumn {
                get {
                    return this.columnIsNewLink;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleMediaLinkRow this[int index] {
                get {
                    return ((VehicleMediaLinkRow)(this.Rows[index]));
                }
            }
            
            public event VehicleMediaLinkRowChangeEventHandler VehicleMediaLinkRowChanging;
            
            public event VehicleMediaLinkRowChangeEventHandler VehicleMediaLinkRowChanged;
            
            public event VehicleMediaLinkRowChangeEventHandler VehicleMediaLinkRowDeleting;
            
            public event VehicleMediaLinkRowChangeEventHandler VehicleMediaLinkRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVehicleMediaLinkRow(VehicleMediaLinkRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleMediaLinkRow AddVehicleMediaLinkRow(VehicleInfoRow parentVehicleInfoRowByFK_VehicleMediaLink_VehicleInfo, string media_link, System.DateTime created_datetime, int VehicleMediaLinkNoteID, string media_link_Thumnail, bool IsNewLink) {
                VehicleMediaLinkRow rowVehicleMediaLinkRow = ((VehicleMediaLinkRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        media_link,
                        created_datetime,
                        VehicleMediaLinkNoteID,
                        media_link_Thumnail,
                        IsNewLink};
                if ((parentVehicleInfoRowByFK_VehicleMediaLink_VehicleInfo != null)) {
                    columnValuesArray[1] = parentVehicleInfoRowByFK_VehicleMediaLink_VehicleInfo[0];
                }
                rowVehicleMediaLinkRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVehicleMediaLinkRow);
                return rowVehicleMediaLinkRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleMediaLinkRow FindByid(int id) {
                return ((VehicleMediaLinkRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VehicleMediaLinkDataTable cln = ((VehicleMediaLinkDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VehicleMediaLinkDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columnmedia_link = base.Columns["media_link"];
                this.columncreated_datetime = base.Columns["created_datetime"];
                this.columnVehicleMediaLinkNoteID = base.Columns["VehicleMediaLinkNoteID"];
                this.columnmedia_link_Thumnail = base.Columns["media_link_Thumnail"];
                this.columnIsNewLink = base.Columns["IsNewLink"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columnmedia_link = new global::System.Data.DataColumn("media_link", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmedia_link);
                this.columncreated_datetime = new global::System.Data.DataColumn("created_datetime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreated_datetime);
                this.columnVehicleMediaLinkNoteID = new global::System.Data.DataColumn("VehicleMediaLinkNoteID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleMediaLinkNoteID);
                this.columnmedia_link_Thumnail = new global::System.Data.DataColumn("media_link_Thumnail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmedia_link_Thumnail);
                this.columnIsNewLink = new global::System.Data.DataColumn("IsNewLink", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNewLink);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnvehicle_id.AllowDBNull = false;
                this.columnmedia_link.AllowDBNull = false;
                this.columnmedia_link.MaxLength = 1000;
                this.columnmedia_link_Thumnail.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleMediaLinkRow NewVehicleMediaLinkRow() {
                return ((VehicleMediaLinkRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VehicleMediaLinkRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VehicleMediaLinkRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VehicleMediaLinkRowChanged != null)) {
                    this.VehicleMediaLinkRowChanged(this, new VehicleMediaLinkRowChangeEvent(((VehicleMediaLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VehicleMediaLinkRowChanging != null)) {
                    this.VehicleMediaLinkRowChanging(this, new VehicleMediaLinkRowChangeEvent(((VehicleMediaLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VehicleMediaLinkRowDeleted != null)) {
                    this.VehicleMediaLinkRowDeleted(this, new VehicleMediaLinkRowChangeEvent(((VehicleMediaLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VehicleMediaLinkRowDeleting != null)) {
                    this.VehicleMediaLinkRowDeleting(this, new VehicleMediaLinkRowChangeEvent(((VehicleMediaLinkRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVehicleMediaLinkRow(VehicleMediaLinkRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VehicleMediaLinkDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UserVehicleStatusDataTable : global::System.Data.TypedTableBase<UserVehicleStatusRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnVehicle_id;
            
            private global::System.Data.DataColumn columnDateIn;
            
            private global::System.Data.DataColumn columnDateOut;
            
            private global::System.Data.DataColumn columnUser_id;
            
            private global::System.Data.DataColumn columnVehicleStatus;
            
            private global::System.Data.DataColumn columnLast_status_updated_date;
            
            private global::System.Data.DataColumn columnDeliveryDate;
            
            private global::System.Data.DataColumn columnRepair_Start_Date;
            
            private global::System.Data.DataColumn columnActual_Delivery_Date;
            
            private global::System.Data.DataColumn columnETA_Hours;
            
            private global::System.Data.DataColumn columnRO_Hours;
            
            private global::System.Data.DataColumn columnFile_Import_Date;
            
            private global::System.Data.DataColumn columnFile_Status;
            
            private global::System.Data.DataColumn columnFile_Import_Time;
            
            private global::System.Data.DataColumn columnIsRead;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusDataTable() {
                this.TableName = "UserVehicleStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UserVehicleStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected UserVehicleStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Vehicle_idColumn {
                get {
                    return this.columnVehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateInColumn {
                get {
                    return this.columnDateIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOutColumn {
                get {
                    return this.columnDateOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_idColumn {
                get {
                    return this.columnUser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleStatusColumn {
                get {
                    return this.columnVehicleStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Last_status_updated_dateColumn {
                get {
                    return this.columnLast_status_updated_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Repair_Start_DateColumn {
                get {
                    return this.columnRepair_Start_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Actual_Delivery_DateColumn {
                get {
                    return this.columnActual_Delivery_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ETA_HoursColumn {
                get {
                    return this.columnETA_Hours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RO_HoursColumn {
                get {
                    return this.columnRO_Hours;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn File_Import_DateColumn {
                get {
                    return this.columnFile_Import_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn File_StatusColumn {
                get {
                    return this.columnFile_Status;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn File_Import_TimeColumn {
                get {
                    return this.columnFile_Import_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsReadColumn {
                get {
                    return this.columnIsRead;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusRow this[int index] {
                get {
                    return ((UserVehicleStatusRow)(this.Rows[index]));
                }
            }
            
            public event UserVehicleStatusRowChangeEventHandler UserVehicleStatusRowChanging;
            
            public event UserVehicleStatusRowChangeEventHandler UserVehicleStatusRowChanged;
            
            public event UserVehicleStatusRowChangeEventHandler UserVehicleStatusRowDeleting;
            
            public event UserVehicleStatusRowChangeEventHandler UserVehicleStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUserVehicleStatusRow(UserVehicleStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusRow AddUserVehicleStatusRow(VehicleInfoRow parentVehicleInfoRowByFK_UserVechicleStatus_VehicleInfo, System.DateTime DateIn, System.DateTime DateOut, UserRow parentUserRowByFK_UserVechicleStatus_User, int VehicleStatus, System.DateTime Last_status_updated_date, System.DateTime DeliveryDate, System.DateTime Repair_Start_Date, System.DateTime Actual_Delivery_Date, int ETA_Hours, int RO_Hours, System.DateTime File_Import_Date, string File_Status, System.DateTime File_Import_Time, int IsRead) {
                UserVehicleStatusRow rowUserVehicleStatusRow = ((UserVehicleStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        DateIn,
                        DateOut,
                        null,
                        VehicleStatus,
                        Last_status_updated_date,
                        DeliveryDate,
                        Repair_Start_Date,
                        Actual_Delivery_Date,
                        ETA_Hours,
                        RO_Hours,
                        File_Import_Date,
                        File_Status,
                        File_Import_Time,
                        IsRead};
                if ((parentVehicleInfoRowByFK_UserVechicleStatus_VehicleInfo != null)) {
                    columnValuesArray[1] = parentVehicleInfoRowByFK_UserVechicleStatus_VehicleInfo[0];
                }
                if ((parentUserRowByFK_UserVechicleStatus_User != null)) {
                    columnValuesArray[4] = parentUserRowByFK_UserVechicleStatus_User[0];
                }
                rowUserVehicleStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUserVehicleStatusRow);
                return rowUserVehicleStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusRow FindByID(int ID) {
                return ((UserVehicleStatusRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UserVehicleStatusDataTable cln = ((UserVehicleStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UserVehicleStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnVehicle_id = base.Columns["Vehicle_id"];
                this.columnDateIn = base.Columns["DateIn"];
                this.columnDateOut = base.Columns["DateOut"];
                this.columnUser_id = base.Columns["User_id"];
                this.columnVehicleStatus = base.Columns["VehicleStatus"];
                this.columnLast_status_updated_date = base.Columns["Last_status_updated_date"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
                this.columnRepair_Start_Date = base.Columns["Repair_Start_Date"];
                this.columnActual_Delivery_Date = base.Columns["Actual_Delivery_Date"];
                this.columnETA_Hours = base.Columns["ETA_Hours"];
                this.columnRO_Hours = base.Columns["RO_Hours"];
                this.columnFile_Import_Date = base.Columns["File_Import_Date"];
                this.columnFile_Status = base.Columns["File_Status"];
                this.columnFile_Import_Time = base.Columns["File_Import_Time"];
                this.columnIsRead = base.Columns["IsRead"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnVehicle_id = new global::System.Data.DataColumn("Vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicle_id);
                this.columnDateIn = new global::System.Data.DataColumn("DateIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateIn);
                this.columnDateOut = new global::System.Data.DataColumn("DateOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOut);
                this.columnUser_id = new global::System.Data.DataColumn("User_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_id);
                this.columnVehicleStatus = new global::System.Data.DataColumn("VehicleStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleStatus);
                this.columnLast_status_updated_date = new global::System.Data.DataColumn("Last_status_updated_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLast_status_updated_date);
                this.columnDeliveryDate = new global::System.Data.DataColumn("DeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.columnRepair_Start_Date = new global::System.Data.DataColumn("Repair_Start_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRepair_Start_Date);
                this.columnActual_Delivery_Date = new global::System.Data.DataColumn("Actual_Delivery_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActual_Delivery_Date);
                this.columnETA_Hours = new global::System.Data.DataColumn("ETA_Hours", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETA_Hours);
                this.columnRO_Hours = new global::System.Data.DataColumn("RO_Hours", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRO_Hours);
                this.columnFile_Import_Date = new global::System.Data.DataColumn("File_Import_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFile_Import_Date);
                this.columnFile_Status = new global::System.Data.DataColumn("File_Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFile_Status);
                this.columnFile_Import_Time = new global::System.Data.DataColumn("File_Import_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFile_Import_Time);
                this.columnIsRead = new global::System.Data.DataColumn("IsRead", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRead);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
                this.columnFile_Status.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusRow NewUserVehicleStatusRow() {
                return ((UserVehicleStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UserVehicleStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UserVehicleStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UserVehicleStatusRowChanged != null)) {
                    this.UserVehicleStatusRowChanged(this, new UserVehicleStatusRowChangeEvent(((UserVehicleStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UserVehicleStatusRowChanging != null)) {
                    this.UserVehicleStatusRowChanging(this, new UserVehicleStatusRowChangeEvent(((UserVehicleStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UserVehicleStatusRowDeleted != null)) {
                    this.UserVehicleStatusRowDeleted(this, new UserVehicleStatusRowChangeEvent(((UserVehicleStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UserVehicleStatusRowDeleting != null)) {
                    this.UserVehicleStatusRowDeleting(this, new UserVehicleStatusRowChangeEvent(((UserVehicleStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUserVehicleStatusRow(UserVehicleStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UserVehicleStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_MyCustomerDataTable : global::System.Data.TypedTableBase<View_MyCustomerRow> {
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnshop_name;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnusername;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnDateIn;
            
            private global::System.Data.DataColumn columnDateOut;
            
            private global::System.Data.DataColumn columnmodel;
            
            private global::System.Data.DataColumn columnmake;
            
            private global::System.Data.DataColumn columnyear;
            
            private global::System.Data.DataColumn columncontactMethod;
            
            private global::System.Data.DataColumn columnupdatedEntryTime;
            
            private global::System.Data.DataColumn columnclaim_number;
            
            private global::System.Data.DataColumn columnrepair_order_identifier;
            
            private global::System.Data.DataColumn columnagent_name;
            
            private global::System.Data.DataColumn columncompany_name;
            
            private global::System.Data.DataColumn columnnet_total_amount;
            
            private global::System.Data.DataColumn columnestimate_file_identifier;
            
            private global::System.Data.DataColumn columncreateddate;
            
            private global::System.Data.DataColumn columnpush_notification_device_id;
            
            private global::System.Data.DataColumn columnVehicleStatus;
            
            private global::System.Data.DataColumn columnfirst_name;
            
            private global::System.Data.DataColumn columnlast_name;
            
            private global::System.Data.DataColumn columnzip;
            
            private global::System.Data.DataColumn columnDeliveryDate;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_MyCustomerDataTable() {
                this.TableName = "View_MyCustomer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_MyCustomerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_MyCustomerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_nameColumn {
                get {
                    return this.columnshop_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateInColumn {
                get {
                    return this.columnDateIn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateOutColumn {
                get {
                    return this.columnDateOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn modelColumn {
                get {
                    return this.columnmodel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn makeColumn {
                get {
                    return this.columnmake;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn yearColumn {
                get {
                    return this.columnyear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contactMethodColumn {
                get {
                    return this.columncontactMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn updatedEntryTimeColumn {
                get {
                    return this.columnupdatedEntryTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn claim_numberColumn {
                get {
                    return this.columnclaim_number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn repair_order_identifierColumn {
                get {
                    return this.columnrepair_order_identifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn agent_nameColumn {
                get {
                    return this.columnagent_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_nameColumn {
                get {
                    return this.columncompany_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn net_total_amountColumn {
                get {
                    return this.columnnet_total_amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn estimate_file_identifierColumn {
                get {
                    return this.columnestimate_file_identifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn createddateColumn {
                get {
                    return this.columncreateddate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn push_notification_device_idColumn {
                get {
                    return this.columnpush_notification_device_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleStatusColumn {
                get {
                    return this.columnVehicleStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn first_nameColumn {
                get {
                    return this.columnfirst_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_nameColumn {
                get {
                    return this.columnlast_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zipColumn {
                get {
                    return this.columnzip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_MyCustomerRow this[int index] {
                get {
                    return ((View_MyCustomerRow)(this.Rows[index]));
                }
            }
            
            public event View_MyCustomerRowChangeEventHandler View_MyCustomerRowChanging;
            
            public event View_MyCustomerRowChangeEventHandler View_MyCustomerRowChanged;
            
            public event View_MyCustomerRowChangeEventHandler View_MyCustomerRowDeleting;
            
            public event View_MyCustomerRowChangeEventHandler View_MyCustomerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_MyCustomerRow(View_MyCustomerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_MyCustomerRow AddView_MyCustomerRow(
                        int user_id, 
                        int shop_id, 
                        string shop_name, 
                        string email, 
                        string username, 
                        string phone, 
                        System.DateTime DateIn, 
                        System.DateTime DateOut, 
                        string model, 
                        string make, 
                        string year, 
                        int contactMethod, 
                        System.DateTime updatedEntryTime, 
                        string claim_number, 
                        string repair_order_identifier, 
                        string agent_name, 
                        string company_name, 
                        string net_total_amount, 
                        string estimate_file_identifier, 
                        System.DateTime createddate, 
                        string push_notification_device_id, 
                        int VehicleStatus, 
                        string first_name, 
                        string last_name, 
                        string zip, 
                        System.DateTime DeliveryDate, 
                        int vehicle_id, 
                        string Status) {
                View_MyCustomerRow rowView_MyCustomerRow = ((View_MyCustomerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        user_id,
                        shop_id,
                        shop_name,
                        email,
                        username,
                        phone,
                        DateIn,
                        DateOut,
                        model,
                        make,
                        year,
                        contactMethod,
                        updatedEntryTime,
                        claim_number,
                        repair_order_identifier,
                        agent_name,
                        company_name,
                        net_total_amount,
                        estimate_file_identifier,
                        createddate,
                        push_notification_device_id,
                        VehicleStatus,
                        first_name,
                        last_name,
                        zip,
                        DeliveryDate,
                        vehicle_id,
                        Status};
                rowView_MyCustomerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_MyCustomerRow);
                return rowView_MyCustomerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_MyCustomerDataTable cln = ((View_MyCustomerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_MyCustomerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuser_id = base.Columns["user_id"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnshop_name = base.Columns["shop_name"];
                this.columnemail = base.Columns["email"];
                this.columnusername = base.Columns["username"];
                this.columnphone = base.Columns["phone"];
                this.columnDateIn = base.Columns["DateIn"];
                this.columnDateOut = base.Columns["DateOut"];
                this.columnmodel = base.Columns["model"];
                this.columnmake = base.Columns["make"];
                this.columnyear = base.Columns["year"];
                this.columncontactMethod = base.Columns["contactMethod"];
                this.columnupdatedEntryTime = base.Columns["updatedEntryTime"];
                this.columnclaim_number = base.Columns["claim_number"];
                this.columnrepair_order_identifier = base.Columns["repair_order_identifier"];
                this.columnagent_name = base.Columns["agent_name"];
                this.columncompany_name = base.Columns["company_name"];
                this.columnnet_total_amount = base.Columns["net_total_amount"];
                this.columnestimate_file_identifier = base.Columns["estimate_file_identifier"];
                this.columncreateddate = base.Columns["createddate"];
                this.columnpush_notification_device_id = base.Columns["push_notification_device_id"];
                this.columnVehicleStatus = base.Columns["VehicleStatus"];
                this.columnfirst_name = base.Columns["first_name"];
                this.columnlast_name = base.Columns["last_name"];
                this.columnzip = base.Columns["zip"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnshop_name = new global::System.Data.DataColumn("shop_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_name);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnusername = new global::System.Data.DataColumn("username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnDateIn = new global::System.Data.DataColumn("DateIn", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateIn);
                this.columnDateOut = new global::System.Data.DataColumn("DateOut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateOut);
                this.columnmodel = new global::System.Data.DataColumn("model", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodel);
                this.columnmake = new global::System.Data.DataColumn("make", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmake);
                this.columnyear = new global::System.Data.DataColumn("year", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnyear);
                this.columncontactMethod = new global::System.Data.DataColumn("contactMethod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontactMethod);
                this.columnupdatedEntryTime = new global::System.Data.DataColumn("updatedEntryTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnupdatedEntryTime);
                this.columnclaim_number = new global::System.Data.DataColumn("claim_number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnclaim_number);
                this.columnrepair_order_identifier = new global::System.Data.DataColumn("repair_order_identifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrepair_order_identifier);
                this.columnagent_name = new global::System.Data.DataColumn("agent_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnagent_name);
                this.columncompany_name = new global::System.Data.DataColumn("company_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_name);
                this.columnnet_total_amount = new global::System.Data.DataColumn("net_total_amount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnet_total_amount);
                this.columnestimate_file_identifier = new global::System.Data.DataColumn("estimate_file_identifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnestimate_file_identifier);
                this.columncreateddate = new global::System.Data.DataColumn("createddate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncreateddate);
                this.columnpush_notification_device_id = new global::System.Data.DataColumn("push_notification_device_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpush_notification_device_id);
                this.columnVehicleStatus = new global::System.Data.DataColumn("VehicleStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleStatus);
                this.columnfirst_name = new global::System.Data.DataColumn("first_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name);
                this.columnlast_name = new global::System.Data.DataColumn("last_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_name);
                this.columnzip = new global::System.Data.DataColumn("zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzip);
                this.columnDeliveryDate = new global::System.Data.DataColumn("DeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnshop_id.AllowDBNull = false;
                this.columnshop_name.MaxLength = 50;
                this.columnemail.MaxLength = 50;
                this.columnusername.MaxLength = 50;
                this.columnphone.MaxLength = 50;
                this.columnmodel.MaxLength = 50;
                this.columnmake.MaxLength = 50;
                this.columnyear.MaxLength = 50;
                this.columnclaim_number.MaxLength = 50;
                this.columnrepair_order_identifier.MaxLength = 50;
                this.columnagent_name.MaxLength = 50;
                this.columncompany_name.MaxLength = 50;
                this.columnnet_total_amount.MaxLength = 50;
                this.columnestimate_file_identifier.MaxLength = 20;
                this.columnpush_notification_device_id.MaxLength = 200;
                this.columnfirst_name.MaxLength = 50;
                this.columnlast_name.MaxLength = 50;
                this.columnzip.MaxLength = 50;
                this.columnStatus.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_MyCustomerRow NewView_MyCustomerRow() {
                return ((View_MyCustomerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_MyCustomerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_MyCustomerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_MyCustomerRowChanged != null)) {
                    this.View_MyCustomerRowChanged(this, new View_MyCustomerRowChangeEvent(((View_MyCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_MyCustomerRowChanging != null)) {
                    this.View_MyCustomerRowChanging(this, new View_MyCustomerRowChangeEvent(((View_MyCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_MyCustomerRowDeleted != null)) {
                    this.View_MyCustomerRowDeleted(this, new View_MyCustomerRowChangeEvent(((View_MyCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_MyCustomerRowDeleting != null)) {
                    this.View_MyCustomerRowDeleting(this, new View_MyCustomerRowChangeEvent(((View_MyCustomerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_MyCustomerRow(View_MyCustomerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_MyCustomerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ScheduledUsersDataTable : global::System.Data.TypedTableBase<ScheduledUsersRow> {
            
            private global::System.Data.DataColumn columnscheduled_users_id;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnsend_date;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnfrequency_id;
            
            private global::System.Data.DataColumn columnisMailSent;
            
            private global::System.Data.DataColumn columnisSmsSent;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScheduledUsersDataTable() {
                this.TableName = "ScheduledUsers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ScheduledUsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ScheduledUsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn scheduled_users_idColumn {
                get {
                    return this.columnscheduled_users_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn send_dateColumn {
                get {
                    return this.columnsend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn frequency_idColumn {
                get {
                    return this.columnfrequency_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isMailSentColumn {
                get {
                    return this.columnisMailSent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isSmsSentColumn {
                get {
                    return this.columnisSmsSent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScheduledUsersRow this[int index] {
                get {
                    return ((ScheduledUsersRow)(this.Rows[index]));
                }
            }
            
            public event ScheduledUsersRowChangeEventHandler ScheduledUsersRowChanging;
            
            public event ScheduledUsersRowChangeEventHandler ScheduledUsersRowChanged;
            
            public event ScheduledUsersRowChangeEventHandler ScheduledUsersRowDeleting;
            
            public event ScheduledUsersRowChangeEventHandler ScheduledUsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddScheduledUsersRow(ScheduledUsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScheduledUsersRow AddScheduledUsersRow(int user_id, System.DateTime send_date, BodyShopRow parentBodyShopRowByFK_ScheduledUsers_BodyShop, int frequency_id, bool isMailSent, bool isSmsSent) {
                ScheduledUsersRow rowScheduledUsersRow = ((ScheduledUsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        user_id,
                        send_date,
                        null,
                        frequency_id,
                        isMailSent,
                        isSmsSent};
                if ((parentBodyShopRowByFK_ScheduledUsers_BodyShop != null)) {
                    columnValuesArray[3] = parentBodyShopRowByFK_ScheduledUsers_BodyShop[0];
                }
                rowScheduledUsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowScheduledUsersRow);
                return rowScheduledUsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScheduledUsersRow FindByscheduled_users_id(int scheduled_users_id) {
                return ((ScheduledUsersRow)(this.Rows.Find(new object[] {
                            scheduled_users_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ScheduledUsersDataTable cln = ((ScheduledUsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ScheduledUsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnscheduled_users_id = base.Columns["scheduled_users_id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnsend_date = base.Columns["send_date"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnfrequency_id = base.Columns["frequency_id"];
                this.columnisMailSent = base.Columns["isMailSent"];
                this.columnisSmsSent = base.Columns["isSmsSent"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnscheduled_users_id = new global::System.Data.DataColumn("scheduled_users_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnscheduled_users_id);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnsend_date = new global::System.Data.DataColumn("send_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsend_date);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnfrequency_id = new global::System.Data.DataColumn("frequency_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrequency_id);
                this.columnisMailSent = new global::System.Data.DataColumn("isMailSent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisMailSent);
                this.columnisSmsSent = new global::System.Data.DataColumn("isSmsSent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisSmsSent);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnscheduled_users_id}, true));
                this.columnscheduled_users_id.AutoIncrement = true;
                this.columnscheduled_users_id.AutoIncrementSeed = -1;
                this.columnscheduled_users_id.AutoIncrementStep = -1;
                this.columnscheduled_users_id.AllowDBNull = false;
                this.columnscheduled_users_id.ReadOnly = true;
                this.columnscheduled_users_id.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScheduledUsersRow NewScheduledUsersRow() {
                return ((ScheduledUsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ScheduledUsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ScheduledUsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ScheduledUsersRowChanged != null)) {
                    this.ScheduledUsersRowChanged(this, new ScheduledUsersRowChangeEvent(((ScheduledUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ScheduledUsersRowChanging != null)) {
                    this.ScheduledUsersRowChanging(this, new ScheduledUsersRowChangeEvent(((ScheduledUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ScheduledUsersRowDeleted != null)) {
                    this.ScheduledUsersRowDeleted(this, new ScheduledUsersRowChangeEvent(((ScheduledUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ScheduledUsersRowDeleting != null)) {
                    this.ScheduledUsersRowDeleting(this, new ScheduledUsersRowChangeEvent(((ScheduledUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveScheduledUsersRow(ScheduledUsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ScheduledUsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ReocurringCampaignUsersDataTable : global::System.Data.TypedTableBase<ReocurringCampaignUsersRow> {
            
            private global::System.Data.DataColumn columnreocurring_campaign_user_id;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columndelivered_date;
            
            private global::System.Data.DataColumn columnisMailSent;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnfrequency_id;
            
            private global::System.Data.DataColumn columnfirst_name;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnisSmsSent;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnusername;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columnemail_template_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersDataTable() {
                this.TableName = "ReocurringCampaignUsers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReocurringCampaignUsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ReocurringCampaignUsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn reocurring_campaign_user_idColumn {
                get {
                    return this.columnreocurring_campaign_user_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn delivered_dateColumn {
                get {
                    return this.columndelivered_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isMailSentColumn {
                get {
                    return this.columnisMailSent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn frequency_idColumn {
                get {
                    return this.columnfrequency_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn first_nameColumn {
                get {
                    return this.columnfirst_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isSmsSentColumn {
                get {
                    return this.columnisSmsSent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn usernameColumn {
                get {
                    return this.columnusername;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn email_template_idColumn {
                get {
                    return this.columnemail_template_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRow this[int index] {
                get {
                    return ((ReocurringCampaignUsersRow)(this.Rows[index]));
                }
            }
            
            public event ReocurringCampaignUsersRowChangeEventHandler ReocurringCampaignUsersRowChanging;
            
            public event ReocurringCampaignUsersRowChangeEventHandler ReocurringCampaignUsersRowChanged;
            
            public event ReocurringCampaignUsersRowChangeEventHandler ReocurringCampaignUsersRowDeleting;
            
            public event ReocurringCampaignUsersRowChangeEventHandler ReocurringCampaignUsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddReocurringCampaignUsersRow(ReocurringCampaignUsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRow AddReocurringCampaignUsersRow(UserRow parentUserRowByFK_ReocurringCampaignUsers_User, System.DateTime delivered_date, bool isMailSent, BodyShopRow parentBodyShopRowByFK_ReocurringCampaignUsers_BodyShop, FrequencyRow parentFrequencyRowByFK_ReocurringCampaignUsers_Frequency, string first_name, string email, bool isSmsSent, string phone, string username, int vehicle_id, int email_template_id) {
                ReocurringCampaignUsersRow rowReocurringCampaignUsersRow = ((ReocurringCampaignUsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        delivered_date,
                        isMailSent,
                        null,
                        null,
                        first_name,
                        email,
                        isSmsSent,
                        phone,
                        username,
                        vehicle_id,
                        email_template_id};
                if ((parentUserRowByFK_ReocurringCampaignUsers_User != null)) {
                    columnValuesArray[1] = parentUserRowByFK_ReocurringCampaignUsers_User[0];
                }
                if ((parentBodyShopRowByFK_ReocurringCampaignUsers_BodyShop != null)) {
                    columnValuesArray[4] = parentBodyShopRowByFK_ReocurringCampaignUsers_BodyShop[0];
                }
                if ((parentFrequencyRowByFK_ReocurringCampaignUsers_Frequency != null)) {
                    columnValuesArray[5] = parentFrequencyRowByFK_ReocurringCampaignUsers_Frequency[0];
                }
                rowReocurringCampaignUsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowReocurringCampaignUsersRow);
                return rowReocurringCampaignUsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRow FindByreocurring_campaign_user_id(int reocurring_campaign_user_id) {
                return ((ReocurringCampaignUsersRow)(this.Rows.Find(new object[] {
                            reocurring_campaign_user_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ReocurringCampaignUsersDataTable cln = ((ReocurringCampaignUsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ReocurringCampaignUsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnreocurring_campaign_user_id = base.Columns["reocurring_campaign_user_id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columndelivered_date = base.Columns["delivered_date"];
                this.columnisMailSent = base.Columns["isMailSent"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnfrequency_id = base.Columns["frequency_id"];
                this.columnfirst_name = base.Columns["first_name"];
                this.columnemail = base.Columns["email"];
                this.columnisSmsSent = base.Columns["isSmsSent"];
                this.columnphone = base.Columns["phone"];
                this.columnusername = base.Columns["username"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columnemail_template_id = base.Columns["email_template_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnreocurring_campaign_user_id = new global::System.Data.DataColumn("reocurring_campaign_user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreocurring_campaign_user_id);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columndelivered_date = new global::System.Data.DataColumn("delivered_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndelivered_date);
                this.columnisMailSent = new global::System.Data.DataColumn("isMailSent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisMailSent);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnfrequency_id = new global::System.Data.DataColumn("frequency_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrequency_id);
                this.columnfirst_name = new global::System.Data.DataColumn("first_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfirst_name);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnisSmsSent = new global::System.Data.DataColumn("isSmsSent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisSmsSent);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnusername = new global::System.Data.DataColumn("username", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnusername);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columnemail_template_id = new global::System.Data.DataColumn("email_template_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail_template_id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnreocurring_campaign_user_id}, true));
                this.columnreocurring_campaign_user_id.AutoIncrement = true;
                this.columnreocurring_campaign_user_id.AutoIncrementSeed = -1;
                this.columnreocurring_campaign_user_id.AutoIncrementStep = -1;
                this.columnreocurring_campaign_user_id.AllowDBNull = false;
                this.columnreocurring_campaign_user_id.ReadOnly = true;
                this.columnreocurring_campaign_user_id.Unique = true;
                this.columnfirst_name.MaxLength = 50;
                this.columnemail.MaxLength = 50;
                this.columnphone.MaxLength = 50;
                this.columnusername.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRow NewReocurringCampaignUsersRow() {
                return ((ReocurringCampaignUsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ReocurringCampaignUsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ReocurringCampaignUsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ReocurringCampaignUsersRowChanged != null)) {
                    this.ReocurringCampaignUsersRowChanged(this, new ReocurringCampaignUsersRowChangeEvent(((ReocurringCampaignUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ReocurringCampaignUsersRowChanging != null)) {
                    this.ReocurringCampaignUsersRowChanging(this, new ReocurringCampaignUsersRowChangeEvent(((ReocurringCampaignUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ReocurringCampaignUsersRowDeleted != null)) {
                    this.ReocurringCampaignUsersRowDeleted(this, new ReocurringCampaignUsersRowChangeEvent(((ReocurringCampaignUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ReocurringCampaignUsersRowDeleting != null)) {
                    this.ReocurringCampaignUsersRowDeleting(this, new ReocurringCampaignUsersRowChangeEvent(((ReocurringCampaignUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveReocurringCampaignUsersRow(ReocurringCampaignUsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ReocurringCampaignUsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FrequencyDataTable : global::System.Data.TypedTableBase<FrequencyRow> {
            
            private global::System.Data.DataColumn columnfrequency_id;
            
            private global::System.Data.DataColumn columnfrequency;
            
            private global::System.Data.DataColumn columndays;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FrequencyDataTable() {
                this.TableName = "Frequency";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FrequencyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FrequencyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn frequency_idColumn {
                get {
                    return this.columnfrequency_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn frequencyColumn {
                get {
                    return this.columnfrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn daysColumn {
                get {
                    return this.columndays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FrequencyRow this[int index] {
                get {
                    return ((FrequencyRow)(this.Rows[index]));
                }
            }
            
            public event FrequencyRowChangeEventHandler FrequencyRowChanging;
            
            public event FrequencyRowChangeEventHandler FrequencyRowChanged;
            
            public event FrequencyRowChangeEventHandler FrequencyRowDeleting;
            
            public event FrequencyRowChangeEventHandler FrequencyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFrequencyRow(FrequencyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FrequencyRow AddFrequencyRow(string frequency, int days) {
                FrequencyRow rowFrequencyRow = ((FrequencyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        frequency,
                        days};
                rowFrequencyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFrequencyRow);
                return rowFrequencyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FrequencyRow FindByfrequency_id(int frequency_id) {
                return ((FrequencyRow)(this.Rows.Find(new object[] {
                            frequency_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FrequencyDataTable cln = ((FrequencyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FrequencyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnfrequency_id = base.Columns["frequency_id"];
                this.columnfrequency = base.Columns["frequency"];
                this.columndays = base.Columns["days"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnfrequency_id = new global::System.Data.DataColumn("frequency_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrequency_id);
                this.columnfrequency = new global::System.Data.DataColumn("frequency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfrequency);
                this.columndays = new global::System.Data.DataColumn("days", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndays);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnfrequency_id}, true));
                this.columnfrequency_id.AutoIncrement = true;
                this.columnfrequency_id.AutoIncrementSeed = -1;
                this.columnfrequency_id.AutoIncrementStep = -1;
                this.columnfrequency_id.AllowDBNull = false;
                this.columnfrequency_id.ReadOnly = true;
                this.columnfrequency_id.Unique = true;
                this.columnfrequency.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FrequencyRow NewFrequencyRow() {
                return ((FrequencyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FrequencyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FrequencyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FrequencyRowChanged != null)) {
                    this.FrequencyRowChanged(this, new FrequencyRowChangeEvent(((FrequencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FrequencyRowChanging != null)) {
                    this.FrequencyRowChanging(this, new FrequencyRowChangeEvent(((FrequencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FrequencyRowDeleted != null)) {
                    this.FrequencyRowDeleted(this, new FrequencyRowChangeEvent(((FrequencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FrequencyRowDeleting != null)) {
                    this.FrequencyRowDeleting(this, new FrequencyRowChangeEvent(((FrequencyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFrequencyRow(FrequencyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FrequencyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AIManageRecurringActivityDataTable : global::System.Data.TypedTableBase<AIManageRecurringActivityRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnShopId;
            
            private global::System.Data.DataColumn columnUserId;
            
            private global::System.Data.DataColumn columnDeliveryDate;
            
            private global::System.Data.DataColumn columnIsProcessed;
            
            private global::System.Data.DataColumn columnProcessedDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AIManageRecurringActivityDataTable() {
                this.TableName = "AIManageRecurringActivity";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AIManageRecurringActivityDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AIManageRecurringActivityDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopIdColumn {
                get {
                    return this.columnShopId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UserIdColumn {
                get {
                    return this.columnUserId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeliveryDateColumn {
                get {
                    return this.columnDeliveryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsProcessedColumn {
                get {
                    return this.columnIsProcessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProcessedDateColumn {
                get {
                    return this.columnProcessedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AIManageRecurringActivityRow this[int index] {
                get {
                    return ((AIManageRecurringActivityRow)(this.Rows[index]));
                }
            }
            
            public event AIManageRecurringActivityRowChangeEventHandler AIManageRecurringActivityRowChanging;
            
            public event AIManageRecurringActivityRowChangeEventHandler AIManageRecurringActivityRowChanged;
            
            public event AIManageRecurringActivityRowChangeEventHandler AIManageRecurringActivityRowDeleting;
            
            public event AIManageRecurringActivityRowChangeEventHandler AIManageRecurringActivityRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAIManageRecurringActivityRow(AIManageRecurringActivityRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AIManageRecurringActivityRow AddAIManageRecurringActivityRow(int ShopId, int UserId, System.DateTime DeliveryDate, bool IsProcessed, System.DateTime ProcessedDate) {
                AIManageRecurringActivityRow rowAIManageRecurringActivityRow = ((AIManageRecurringActivityRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ShopId,
                        UserId,
                        DeliveryDate,
                        IsProcessed,
                        ProcessedDate};
                rowAIManageRecurringActivityRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAIManageRecurringActivityRow);
                return rowAIManageRecurringActivityRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AIManageRecurringActivityRow FindById(int Id) {
                return ((AIManageRecurringActivityRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AIManageRecurringActivityDataTable cln = ((AIManageRecurringActivityDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AIManageRecurringActivityDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnShopId = base.Columns["ShopId"];
                this.columnUserId = base.Columns["UserId"];
                this.columnDeliveryDate = base.Columns["DeliveryDate"];
                this.columnIsProcessed = base.Columns["IsProcessed"];
                this.columnProcessedDate = base.Columns["ProcessedDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnShopId = new global::System.Data.DataColumn("ShopId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopId);
                this.columnUserId = new global::System.Data.DataColumn("UserId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserId);
                this.columnDeliveryDate = new global::System.Data.DataColumn("DeliveryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeliveryDate);
                this.columnIsProcessed = new global::System.Data.DataColumn("IsProcessed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsProcessed);
                this.columnProcessedDate = new global::System.Data.DataColumn("ProcessedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessedDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnShopId.AllowDBNull = false;
                this.columnUserId.AllowDBNull = false;
                this.columnDeliveryDate.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AIManageRecurringActivityRow NewAIManageRecurringActivityRow() {
                return ((AIManageRecurringActivityRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AIManageRecurringActivityRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AIManageRecurringActivityRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AIManageRecurringActivityRowChanged != null)) {
                    this.AIManageRecurringActivityRowChanged(this, new AIManageRecurringActivityRowChangeEvent(((AIManageRecurringActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AIManageRecurringActivityRowChanging != null)) {
                    this.AIManageRecurringActivityRowChanging(this, new AIManageRecurringActivityRowChangeEvent(((AIManageRecurringActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AIManageRecurringActivityRowDeleted != null)) {
                    this.AIManageRecurringActivityRowDeleted(this, new AIManageRecurringActivityRowChangeEvent(((AIManageRecurringActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AIManageRecurringActivityRowDeleting != null)) {
                    this.AIManageRecurringActivityRowDeleting(this, new AIManageRecurringActivityRowChangeEvent(((AIManageRecurringActivityRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAIManageRecurringActivityRow(AIManageRecurringActivityRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AIManageRecurringActivityDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BodyShopDataTable : global::System.Data.TypedTableBase<BodyShopRow> {
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnshop_name;
            
            private global::System.Data.DataColumn columnaddress1;
            
            private global::System.Data.DataColumn columnaddress2;
            
            private global::System.Data.DataColumn columnlatitude;
            
            private global::System.Data.DataColumn columnlongitude;
            
            private global::System.Data.DataColumn columnratings;
            
            private global::System.Data.DataColumn columncity;
            
            private global::System.Data.DataColumn columnstate;
            
            private global::System.Data.DataColumn columnimage_attached;
            
            private global::System.Data.DataColumn columnzip;
            
            private global::System.Data.DataColumn columnphone;
            
            private global::System.Data.DataColumn columnfax;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnwebsite;
            
            private global::System.Data.DataColumn columnbusiness_license;
            
            private global::System.Data.DataColumn columnepa_license;
            
            private global::System.Data.DataColumn columnbar_license;
            
            private global::System.Data.DataColumn columnnetwork_name;
            
            private global::System.Data.DataColumn columncertification_vehicles;
            
            private global::System.Data.DataColumn columnthird_party_providers;
            
            private global::System.Data.DataColumn columnpositive_ratings;
            
            private global::System.Data.DataColumn columnnegative_ratings;
            
            private global::System.Data.DataColumn columnmanager;
            
            private global::System.Data.DataColumn columnsystem_admin;
            
            private global::System.Data.DataColumn columnportal_admin_password;
            
            private global::System.Data.DataColumn columncompany_tag_line;
            
            private global::System.Data.DataColumn columnowner;
            
            private global::System.Data.DataColumn columnnoPremierShop;
            
            private global::System.Data.DataColumn columnnoHelpSelection;
            
            private global::System.Data.DataColumn columnisPremierShop;
            
            private global::System.Data.DataColumn columnimage_path;
            
            private global::System.Data.DataColumn columnmessageCount;
            
            private global::System.Data.DataColumn columnavailableMessages;
            
            private global::System.Data.DataColumn columnexpirationDate;
            
            private global::System.Data.DataColumn columnstartDate;
            
            private global::System.Data.DataColumn columnisShow;
            
            private global::System.Data.DataColumn columncommentsfrequency;
            
            private global::System.Data.DataColumn columndisplaycommentonswebapp;
            
            private global::System.Data.DataColumn columnsubscription_reminder_day;
            
            private global::System.Data.DataColumn columndisplaypromoonwebpage;
            
            private global::System.Data.DataColumn columnapplyemailtemplate;
            
            private global::System.Data.DataColumn columnisRcintegrationapproved;
            
            private global::System.Data.DataColumn columnIsConsumerConsentApprovedForEmail;
            
            private global::System.Data.DataColumn columnIsConsumerConsentApprovedForSMS;
            
            private global::System.Data.DataColumn columnConsumerConsentApprovedDateForEmail;
            
            private global::System.Data.DataColumn columnConsumerConsentApprovedDateForSMS;
            
            private global::System.Data.DataColumn columnDonloadKeywords;
            
            private global::System.Data.DataColumn columnDownloadDescription;
            
            private global::System.Data.DataColumn columnDownloadTitle;
            
            private global::System.Data.DataColumn columnSpecialPromotionKeywords;
            
            private global::System.Data.DataColumn columnSpecialPromotionDescription;
            
            private global::System.Data.DataColumn columnSpecialPromotionTitle;
            
            private global::System.Data.DataColumn columnScheduleAppointmentKeywords;
            
            private global::System.Data.DataColumn columnScheduleAppointmentDescription;
            
            private global::System.Data.DataColumn columnScheduleAppointmentTitle;
            
            private global::System.Data.DataColumn columnOnlineEstimateKeywords;
            
            private global::System.Data.DataColumn columnOnlineEstimateDescription;
            
            private global::System.Data.DataColumn columnOnlineEstimateTitle;
            
            private global::System.Data.DataColumn columnVehicleStatusKeywords;
            
            private global::System.Data.DataColumn columnVehicleStatusDescription;
            
            private global::System.Data.DataColumn columnVehicleStatusTitle;
            
            private global::System.Data.DataColumn columnRentalCarCompanyPageUrl;
            
            private global::System.Data.DataColumn columnTowingCompanyPageUrl;
            
            private global::System.Data.DataColumn columnShopNameBackColor;
            
            private global::System.Data.DataColumn columnShopNameFontColor;
            
            private global::System.Data.DataColumn columnSendMessageKeywords;
            
            private global::System.Data.DataColumn columnSendMessageDescription;
            
            private global::System.Data.DataColumn columnSendMessageTitle;
            
            private global::System.Data.DataColumn columnShopBanerImage5;
            
            private global::System.Data.DataColumn columnShopBanerImage4;
            
            private global::System.Data.DataColumn columnShopBanerImage3;
            
            private global::System.Data.DataColumn columnShopBanerImage2;
            
            private global::System.Data.DataColumn columnSetBannerBackgroundColor;
            
            private global::System.Data.DataColumn columnTwitterPageUrl;
            
            private global::System.Data.DataColumn columnInstagramPageUrl;
            
            private global::System.Data.DataColumn columnGooglePlusPageUrl;
            
            private global::System.Data.DataColumn columnPinterestPageUrl;
            
            private global::System.Data.DataColumn columnYouTubePageUrl;
            
            private global::System.Data.DataColumn columnLinkedInPageUrl;
            
            private global::System.Data.DataColumn columnFacebookPageUrl;
            
            private global::System.Data.DataColumn columnShopBannerAlternateText;
            
            private global::System.Data.DataColumn columnShopBanner;
            
            private global::System.Data.DataColumn columnShopLogoAlternateText;
            
            private global::System.Data.DataColumn columnKeyword;
            
            private global::System.Data.DataColumn columnShopDescription;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnHistory;
            
            private global::System.Data.DataColumn columnSpeciality;
            
            private global::System.Data.DataColumn columncontent;
            
            private global::System.Data.DataColumn columnAccessToken;
            
            private global::System.Data.DataColumn columnPageID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopDataTable() {
                this.TableName = "BodyShop";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BodyShopDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected BodyShopDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_nameColumn {
                get {
                    return this.columnshop_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address1Column {
                get {
                    return this.columnaddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn address2Column {
                get {
                    return this.columnaddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn latitudeColumn {
                get {
                    return this.columnlatitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn longitudeColumn {
                get {
                    return this.columnlongitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ratingsColumn {
                get {
                    return this.columnratings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn cityColumn {
                get {
                    return this.columncity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn stateColumn {
                get {
                    return this.columnstate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn image_attachedColumn {
                get {
                    return this.columnimage_attached;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn zipColumn {
                get {
                    return this.columnzip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn phoneColumn {
                get {
                    return this.columnphone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn faxColumn {
                get {
                    return this.columnfax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn websiteColumn {
                get {
                    return this.columnwebsite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn business_licenseColumn {
                get {
                    return this.columnbusiness_license;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn epa_licenseColumn {
                get {
                    return this.columnepa_license;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn bar_licenseColumn {
                get {
                    return this.columnbar_license;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn network_nameColumn {
                get {
                    return this.columnnetwork_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn certification_vehiclesColumn {
                get {
                    return this.columncertification_vehicles;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn third_party_providersColumn {
                get {
                    return this.columnthird_party_providers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn positive_ratingsColumn {
                get {
                    return this.columnpositive_ratings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn negative_ratingsColumn {
                get {
                    return this.columnnegative_ratings;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn managerColumn {
                get {
                    return this.columnmanager;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn system_adminColumn {
                get {
                    return this.columnsystem_admin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn portal_admin_passwordColumn {
                get {
                    return this.columnportal_admin_password;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn company_tag_lineColumn {
                get {
                    return this.columncompany_tag_line;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ownerColumn {
                get {
                    return this.columnowner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noPremierShopColumn {
                get {
                    return this.columnnoPremierShop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn noHelpSelectionColumn {
                get {
                    return this.columnnoHelpSelection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isPremierShopColumn {
                get {
                    return this.columnisPremierShop;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn image_pathColumn {
                get {
                    return this.columnimage_path;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn messageCountColumn {
                get {
                    return this.columnmessageCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn availableMessagesColumn {
                get {
                    return this.columnavailableMessages;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn expirationDateColumn {
                get {
                    return this.columnexpirationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn startDateColumn {
                get {
                    return this.columnstartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isShowColumn {
                get {
                    return this.columnisShow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn commentsfrequencyColumn {
                get {
                    return this.columncommentsfrequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn displaycommentonswebappColumn {
                get {
                    return this.columndisplaycommentonswebapp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn subscription_reminder_dayColumn {
                get {
                    return this.columnsubscription_reminder_day;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn displaypromoonwebpageColumn {
                get {
                    return this.columndisplaypromoonwebpage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn applyemailtemplateColumn {
                get {
                    return this.columnapplyemailtemplate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isRcintegrationapprovedColumn {
                get {
                    return this.columnisRcintegrationapproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsConsumerConsentApprovedForEmailColumn {
                get {
                    return this.columnIsConsumerConsentApprovedForEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsConsumerConsentApprovedForSMSColumn {
                get {
                    return this.columnIsConsumerConsentApprovedForSMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumerConsentApprovedDateForEmailColumn {
                get {
                    return this.columnConsumerConsentApprovedDateForEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConsumerConsentApprovedDateForSMSColumn {
                get {
                    return this.columnConsumerConsentApprovedDateForSMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DonloadKeywordsColumn {
                get {
                    return this.columnDonloadKeywords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownloadDescriptionColumn {
                get {
                    return this.columnDownloadDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DownloadTitleColumn {
                get {
                    return this.columnDownloadTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialPromotionKeywordsColumn {
                get {
                    return this.columnSpecialPromotionKeywords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialPromotionDescriptionColumn {
                get {
                    return this.columnSpecialPromotionDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialPromotionTitleColumn {
                get {
                    return this.columnSpecialPromotionTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleAppointmentKeywordsColumn {
                get {
                    return this.columnScheduleAppointmentKeywords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleAppointmentDescriptionColumn {
                get {
                    return this.columnScheduleAppointmentDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ScheduleAppointmentTitleColumn {
                get {
                    return this.columnScheduleAppointmentTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineEstimateKeywordsColumn {
                get {
                    return this.columnOnlineEstimateKeywords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineEstimateDescriptionColumn {
                get {
                    return this.columnOnlineEstimateDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OnlineEstimateTitleColumn {
                get {
                    return this.columnOnlineEstimateTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleStatusKeywordsColumn {
                get {
                    return this.columnVehicleStatusKeywords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleStatusDescriptionColumn {
                get {
                    return this.columnVehicleStatusDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleStatusTitleColumn {
                get {
                    return this.columnVehicleStatusTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RentalCarCompanyPageUrlColumn {
                get {
                    return this.columnRentalCarCompanyPageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TowingCompanyPageUrlColumn {
                get {
                    return this.columnTowingCompanyPageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopNameBackColorColumn {
                get {
                    return this.columnShopNameBackColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopNameFontColorColumn {
                get {
                    return this.columnShopNameFontColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SendMessageKeywordsColumn {
                get {
                    return this.columnSendMessageKeywords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SendMessageDescriptionColumn {
                get {
                    return this.columnSendMessageDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SendMessageTitleColumn {
                get {
                    return this.columnSendMessageTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopBanerImage5Column {
                get {
                    return this.columnShopBanerImage5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopBanerImage4Column {
                get {
                    return this.columnShopBanerImage4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopBanerImage3Column {
                get {
                    return this.columnShopBanerImage3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopBanerImage2Column {
                get {
                    return this.columnShopBanerImage2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SetBannerBackgroundColorColumn {
                get {
                    return this.columnSetBannerBackgroundColor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TwitterPageUrlColumn {
                get {
                    return this.columnTwitterPageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InstagramPageUrlColumn {
                get {
                    return this.columnInstagramPageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GooglePlusPageUrlColumn {
                get {
                    return this.columnGooglePlusPageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PinterestPageUrlColumn {
                get {
                    return this.columnPinterestPageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YouTubePageUrlColumn {
                get {
                    return this.columnYouTubePageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LinkedInPageUrlColumn {
                get {
                    return this.columnLinkedInPageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FacebookPageUrlColumn {
                get {
                    return this.columnFacebookPageUrl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopBannerAlternateTextColumn {
                get {
                    return this.columnShopBannerAlternateText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopBannerColumn {
                get {
                    return this.columnShopBanner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopLogoAlternateTextColumn {
                get {
                    return this.columnShopLogoAlternateText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KeywordColumn {
                get {
                    return this.columnKeyword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopDescriptionColumn {
                get {
                    return this.columnShopDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecialityColumn {
                get {
                    return this.columnSpeciality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn contentColumn {
                get {
                    return this.columncontent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessTokenColumn {
                get {
                    return this.columnAccessToken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PageIDColumn {
                get {
                    return this.columnPageID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow this[int index] {
                get {
                    return ((BodyShopRow)(this.Rows[index]));
                }
            }
            
            public event BodyShopRowChangeEventHandler BodyShopRowChanging;
            
            public event BodyShopRowChangeEventHandler BodyShopRowChanged;
            
            public event BodyShopRowChangeEventHandler BodyShopRowDeleting;
            
            public event BodyShopRowChangeEventHandler BodyShopRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddBodyShopRow(BodyShopRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow AddBodyShopRow(
                        string shop_name, 
                        string address1, 
                        string address2, 
                        double latitude, 
                        double longitude, 
                        int ratings, 
                        string city, 
                        string state, 
                        byte[] image_attached, 
                        string zip, 
                        string phone, 
                        string fax, 
                        string email, 
                        string website, 
                        string business_license, 
                        string epa_license, 
                        string bar_license, 
                        string network_name, 
                        string certification_vehicles, 
                        string third_party_providers, 
                        int positive_ratings, 
                        int negative_ratings, 
                        string manager, 
                        string system_admin, 
                        string portal_admin_password, 
                        string company_tag_line, 
                        string owner, 
                        int noPremierShop, 
                        int noHelpSelection, 
                        bool isPremierShop, 
                        string image_path, 
                        int messageCount, 
                        int availableMessages, 
                        System.DateTime expirationDate, 
                        System.DateTime startDate, 
                        bool isShow, 
                        string commentsfrequency, 
                        bool displaycommentonswebapp, 
                        int subscription_reminder_day, 
                        bool displaypromoonwebpage, 
                        bool applyemailtemplate, 
                        bool isRcintegrationapproved, 
                        bool IsConsumerConsentApprovedForEmail, 
                        bool IsConsumerConsentApprovedForSMS, 
                        System.DateTime ConsumerConsentApprovedDateForEmail, 
                        System.DateTime ConsumerConsentApprovedDateForSMS, 
                        string DonloadKeywords, 
                        string DownloadDescription, 
                        string DownloadTitle, 
                        string SpecialPromotionKeywords, 
                        string SpecialPromotionDescription, 
                        string SpecialPromotionTitle, 
                        string ScheduleAppointmentKeywords, 
                        string ScheduleAppointmentDescription, 
                        string ScheduleAppointmentTitle, 
                        string OnlineEstimateKeywords, 
                        string OnlineEstimateDescription, 
                        string OnlineEstimateTitle, 
                        string VehicleStatusKeywords, 
                        string VehicleStatusDescription, 
                        string VehicleStatusTitle, 
                        string RentalCarCompanyPageUrl, 
                        string TowingCompanyPageUrl, 
                        string ShopNameBackColor, 
                        string ShopNameFontColor, 
                        string SendMessageKeywords, 
                        string SendMessageDescription, 
                        string SendMessageTitle, 
                        string ShopBanerImage5, 
                        string ShopBanerImage4, 
                        string ShopBanerImage3, 
                        string ShopBanerImage2, 
                        string SetBannerBackgroundColor, 
                        string TwitterPageUrl, 
                        string InstagramPageUrl, 
                        string GooglePlusPageUrl, 
                        string PinterestPageUrl, 
                        string YouTubePageUrl, 
                        string LinkedInPageUrl, 
                        string FacebookPageUrl, 
                        string ShopBannerAlternateText, 
                        string ShopBanner, 
                        string ShopLogoAlternateText, 
                        string Keyword, 
                        string ShopDescription, 
                        string Title, 
                        string History, 
                        string Speciality, 
                        string content, 
                        string AccessToken, 
                        string PageID) {
                BodyShopRow rowBodyShopRow = ((BodyShopRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        shop_name,
                        address1,
                        address2,
                        latitude,
                        longitude,
                        ratings,
                        city,
                        state,
                        image_attached,
                        zip,
                        phone,
                        fax,
                        email,
                        website,
                        business_license,
                        epa_license,
                        bar_license,
                        network_name,
                        certification_vehicles,
                        third_party_providers,
                        positive_ratings,
                        negative_ratings,
                        manager,
                        system_admin,
                        portal_admin_password,
                        company_tag_line,
                        owner,
                        noPremierShop,
                        noHelpSelection,
                        isPremierShop,
                        image_path,
                        messageCount,
                        availableMessages,
                        expirationDate,
                        startDate,
                        isShow,
                        commentsfrequency,
                        displaycommentonswebapp,
                        subscription_reminder_day,
                        displaypromoonwebpage,
                        applyemailtemplate,
                        isRcintegrationapproved,
                        IsConsumerConsentApprovedForEmail,
                        IsConsumerConsentApprovedForSMS,
                        ConsumerConsentApprovedDateForEmail,
                        ConsumerConsentApprovedDateForSMS,
                        DonloadKeywords,
                        DownloadDescription,
                        DownloadTitle,
                        SpecialPromotionKeywords,
                        SpecialPromotionDescription,
                        SpecialPromotionTitle,
                        ScheduleAppointmentKeywords,
                        ScheduleAppointmentDescription,
                        ScheduleAppointmentTitle,
                        OnlineEstimateKeywords,
                        OnlineEstimateDescription,
                        OnlineEstimateTitle,
                        VehicleStatusKeywords,
                        VehicleStatusDescription,
                        VehicleStatusTitle,
                        RentalCarCompanyPageUrl,
                        TowingCompanyPageUrl,
                        ShopNameBackColor,
                        ShopNameFontColor,
                        SendMessageKeywords,
                        SendMessageDescription,
                        SendMessageTitle,
                        ShopBanerImage5,
                        ShopBanerImage4,
                        ShopBanerImage3,
                        ShopBanerImage2,
                        SetBannerBackgroundColor,
                        TwitterPageUrl,
                        InstagramPageUrl,
                        GooglePlusPageUrl,
                        PinterestPageUrl,
                        YouTubePageUrl,
                        LinkedInPageUrl,
                        FacebookPageUrl,
                        ShopBannerAlternateText,
                        ShopBanner,
                        ShopLogoAlternateText,
                        Keyword,
                        ShopDescription,
                        Title,
                        History,
                        Speciality,
                        content,
                        AccessToken,
                        PageID};
                rowBodyShopRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBodyShopRow);
                return rowBodyShopRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow FindByshop_id(int shop_id) {
                return ((BodyShopRow)(this.Rows.Find(new object[] {
                            shop_id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                BodyShopDataTable cln = ((BodyShopDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BodyShopDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnshop_id = base.Columns["shop_id"];
                this.columnshop_name = base.Columns["shop_name"];
                this.columnaddress1 = base.Columns["address1"];
                this.columnaddress2 = base.Columns["address2"];
                this.columnlatitude = base.Columns["latitude"];
                this.columnlongitude = base.Columns["longitude"];
                this.columnratings = base.Columns["ratings"];
                this.columncity = base.Columns["city"];
                this.columnstate = base.Columns["state"];
                this.columnimage_attached = base.Columns["image_attached"];
                this.columnzip = base.Columns["zip"];
                this.columnphone = base.Columns["phone"];
                this.columnfax = base.Columns["fax"];
                this.columnemail = base.Columns["email"];
                this.columnwebsite = base.Columns["website"];
                this.columnbusiness_license = base.Columns["business_license"];
                this.columnepa_license = base.Columns["epa_license"];
                this.columnbar_license = base.Columns["bar_license"];
                this.columnnetwork_name = base.Columns["network_name"];
                this.columncertification_vehicles = base.Columns["certification_vehicles"];
                this.columnthird_party_providers = base.Columns["third_party_providers"];
                this.columnpositive_ratings = base.Columns["positive_ratings"];
                this.columnnegative_ratings = base.Columns["negative_ratings"];
                this.columnmanager = base.Columns["manager"];
                this.columnsystem_admin = base.Columns["system_admin"];
                this.columnportal_admin_password = base.Columns["portal_admin_password"];
                this.columncompany_tag_line = base.Columns["company_tag_line"];
                this.columnowner = base.Columns["owner"];
                this.columnnoPremierShop = base.Columns["noPremierShop"];
                this.columnnoHelpSelection = base.Columns["noHelpSelection"];
                this.columnisPremierShop = base.Columns["isPremierShop"];
                this.columnimage_path = base.Columns["image_path"];
                this.columnmessageCount = base.Columns["messageCount"];
                this.columnavailableMessages = base.Columns["availableMessages"];
                this.columnexpirationDate = base.Columns["expirationDate"];
                this.columnstartDate = base.Columns["startDate"];
                this.columnisShow = base.Columns["isShow"];
                this.columncommentsfrequency = base.Columns["commentsfrequency"];
                this.columndisplaycommentonswebapp = base.Columns["displaycommentonswebapp"];
                this.columnsubscription_reminder_day = base.Columns["subscription_reminder_day"];
                this.columndisplaypromoonwebpage = base.Columns["displaypromoonwebpage"];
                this.columnapplyemailtemplate = base.Columns["applyemailtemplate"];
                this.columnisRcintegrationapproved = base.Columns["isRcintegrationapproved"];
                this.columnIsConsumerConsentApprovedForEmail = base.Columns["IsConsumerConsentApprovedForEmail"];
                this.columnIsConsumerConsentApprovedForSMS = base.Columns["IsConsumerConsentApprovedForSMS"];
                this.columnConsumerConsentApprovedDateForEmail = base.Columns["ConsumerConsentApprovedDateForEmail"];
                this.columnConsumerConsentApprovedDateForSMS = base.Columns["ConsumerConsentApprovedDateForSMS"];
                this.columnDonloadKeywords = base.Columns["DonloadKeywords"];
                this.columnDownloadDescription = base.Columns["DownloadDescription"];
                this.columnDownloadTitle = base.Columns["DownloadTitle"];
                this.columnSpecialPromotionKeywords = base.Columns["SpecialPromotionKeywords"];
                this.columnSpecialPromotionDescription = base.Columns["SpecialPromotionDescription"];
                this.columnSpecialPromotionTitle = base.Columns["SpecialPromotionTitle"];
                this.columnScheduleAppointmentKeywords = base.Columns["ScheduleAppointmentKeywords"];
                this.columnScheduleAppointmentDescription = base.Columns["ScheduleAppointmentDescription"];
                this.columnScheduleAppointmentTitle = base.Columns["ScheduleAppointmentTitle"];
                this.columnOnlineEstimateKeywords = base.Columns["OnlineEstimateKeywords"];
                this.columnOnlineEstimateDescription = base.Columns["OnlineEstimateDescription"];
                this.columnOnlineEstimateTitle = base.Columns["OnlineEstimateTitle"];
                this.columnVehicleStatusKeywords = base.Columns["VehicleStatusKeywords"];
                this.columnVehicleStatusDescription = base.Columns["VehicleStatusDescription"];
                this.columnVehicleStatusTitle = base.Columns["VehicleStatusTitle"];
                this.columnRentalCarCompanyPageUrl = base.Columns["RentalCarCompanyPageUrl"];
                this.columnTowingCompanyPageUrl = base.Columns["TowingCompanyPageUrl"];
                this.columnShopNameBackColor = base.Columns["ShopNameBackColor"];
                this.columnShopNameFontColor = base.Columns["ShopNameFontColor"];
                this.columnSendMessageKeywords = base.Columns["SendMessageKeywords"];
                this.columnSendMessageDescription = base.Columns["SendMessageDescription"];
                this.columnSendMessageTitle = base.Columns["SendMessageTitle"];
                this.columnShopBanerImage5 = base.Columns["ShopBanerImage5"];
                this.columnShopBanerImage4 = base.Columns["ShopBanerImage4"];
                this.columnShopBanerImage3 = base.Columns["ShopBanerImage3"];
                this.columnShopBanerImage2 = base.Columns["ShopBanerImage2"];
                this.columnSetBannerBackgroundColor = base.Columns["SetBannerBackgroundColor"];
                this.columnTwitterPageUrl = base.Columns["TwitterPageUrl"];
                this.columnInstagramPageUrl = base.Columns["InstagramPageUrl"];
                this.columnGooglePlusPageUrl = base.Columns["GooglePlusPageUrl"];
                this.columnPinterestPageUrl = base.Columns["PinterestPageUrl"];
                this.columnYouTubePageUrl = base.Columns["YouTubePageUrl"];
                this.columnLinkedInPageUrl = base.Columns["LinkedInPageUrl"];
                this.columnFacebookPageUrl = base.Columns["FacebookPageUrl"];
                this.columnShopBannerAlternateText = base.Columns["ShopBannerAlternateText"];
                this.columnShopBanner = base.Columns["ShopBanner"];
                this.columnShopLogoAlternateText = base.Columns["ShopLogoAlternateText"];
                this.columnKeyword = base.Columns["Keyword"];
                this.columnShopDescription = base.Columns["ShopDescription"];
                this.columnTitle = base.Columns["Title"];
                this.columnHistory = base.Columns["History"];
                this.columnSpeciality = base.Columns["Speciality"];
                this.columncontent = base.Columns["content"];
                this.columnAccessToken = base.Columns["AccessToken"];
                this.columnPageID = base.Columns["PageID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnshop_name = new global::System.Data.DataColumn("shop_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_name);
                this.columnaddress1 = new global::System.Data.DataColumn("address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress1);
                this.columnaddress2 = new global::System.Data.DataColumn("address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress2);
                this.columnlatitude = new global::System.Data.DataColumn("latitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlatitude);
                this.columnlongitude = new global::System.Data.DataColumn("longitude", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlongitude);
                this.columnratings = new global::System.Data.DataColumn("ratings", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnratings);
                this.columncity = new global::System.Data.DataColumn("city", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncity);
                this.columnstate = new global::System.Data.DataColumn("state", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstate);
                this.columnimage_attached = new global::System.Data.DataColumn("image_attached", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage_attached);
                this.columnzip = new global::System.Data.DataColumn("zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnzip);
                this.columnphone = new global::System.Data.DataColumn("phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphone);
                this.columnfax = new global::System.Data.DataColumn("fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfax);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnwebsite = new global::System.Data.DataColumn("website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwebsite);
                this.columnbusiness_license = new global::System.Data.DataColumn("business_license", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbusiness_license);
                this.columnepa_license = new global::System.Data.DataColumn("epa_license", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnepa_license);
                this.columnbar_license = new global::System.Data.DataColumn("bar_license", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbar_license);
                this.columnnetwork_name = new global::System.Data.DataColumn("network_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnetwork_name);
                this.columncertification_vehicles = new global::System.Data.DataColumn("certification_vehicles", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertification_vehicles);
                this.columnthird_party_providers = new global::System.Data.DataColumn("third_party_providers", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnthird_party_providers);
                this.columnpositive_ratings = new global::System.Data.DataColumn("positive_ratings", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpositive_ratings);
                this.columnnegative_ratings = new global::System.Data.DataColumn("negative_ratings", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnegative_ratings);
                this.columnmanager = new global::System.Data.DataColumn("manager", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmanager);
                this.columnsystem_admin = new global::System.Data.DataColumn("system_admin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsystem_admin);
                this.columnportal_admin_password = new global::System.Data.DataColumn("portal_admin_password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnportal_admin_password);
                this.columncompany_tag_line = new global::System.Data.DataColumn("company_tag_line", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncompany_tag_line);
                this.columnowner = new global::System.Data.DataColumn("owner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnowner);
                this.columnnoPremierShop = new global::System.Data.DataColumn("noPremierShop", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoPremierShop);
                this.columnnoHelpSelection = new global::System.Data.DataColumn("noHelpSelection", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnoHelpSelection);
                this.columnisPremierShop = new global::System.Data.DataColumn("isPremierShop", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisPremierShop);
                this.columnimage_path = new global::System.Data.DataColumn("image_path", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimage_path);
                this.columnmessageCount = new global::System.Data.DataColumn("messageCount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmessageCount);
                this.columnavailableMessages = new global::System.Data.DataColumn("availableMessages", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnavailableMessages);
                this.columnexpirationDate = new global::System.Data.DataColumn("expirationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpirationDate);
                this.columnstartDate = new global::System.Data.DataColumn("startDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstartDate);
                this.columnisShow = new global::System.Data.DataColumn("isShow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisShow);
                this.columncommentsfrequency = new global::System.Data.DataColumn("commentsfrequency", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommentsfrequency);
                this.columndisplaycommentonswebapp = new global::System.Data.DataColumn("displaycommentonswebapp", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplaycommentonswebapp);
                this.columnsubscription_reminder_day = new global::System.Data.DataColumn("subscription_reminder_day", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsubscription_reminder_day);
                this.columndisplaypromoonwebpage = new global::System.Data.DataColumn("displaypromoonwebpage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisplaypromoonwebpage);
                this.columnapplyemailtemplate = new global::System.Data.DataColumn("applyemailtemplate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplyemailtemplate);
                this.columnisRcintegrationapproved = new global::System.Data.DataColumn("isRcintegrationapproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisRcintegrationapproved);
                this.columnIsConsumerConsentApprovedForEmail = new global::System.Data.DataColumn("IsConsumerConsentApprovedForEmail", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConsumerConsentApprovedForEmail);
                this.columnIsConsumerConsentApprovedForSMS = new global::System.Data.DataColumn("IsConsumerConsentApprovedForSMS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConsumerConsentApprovedForSMS);
                this.columnConsumerConsentApprovedDateForEmail = new global::System.Data.DataColumn("ConsumerConsentApprovedDateForEmail", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumerConsentApprovedDateForEmail);
                this.columnConsumerConsentApprovedDateForSMS = new global::System.Data.DataColumn("ConsumerConsentApprovedDateForSMS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsumerConsentApprovedDateForSMS);
                this.columnDonloadKeywords = new global::System.Data.DataColumn("DonloadKeywords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDonloadKeywords);
                this.columnDownloadDescription = new global::System.Data.DataColumn("DownloadDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownloadDescription);
                this.columnDownloadTitle = new global::System.Data.DataColumn("DownloadTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDownloadTitle);
                this.columnSpecialPromotionKeywords = new global::System.Data.DataColumn("SpecialPromotionKeywords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialPromotionKeywords);
                this.columnSpecialPromotionDescription = new global::System.Data.DataColumn("SpecialPromotionDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialPromotionDescription);
                this.columnSpecialPromotionTitle = new global::System.Data.DataColumn("SpecialPromotionTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialPromotionTitle);
                this.columnScheduleAppointmentKeywords = new global::System.Data.DataColumn("ScheduleAppointmentKeywords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleAppointmentKeywords);
                this.columnScheduleAppointmentDescription = new global::System.Data.DataColumn("ScheduleAppointmentDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleAppointmentDescription);
                this.columnScheduleAppointmentTitle = new global::System.Data.DataColumn("ScheduleAppointmentTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnScheduleAppointmentTitle);
                this.columnOnlineEstimateKeywords = new global::System.Data.DataColumn("OnlineEstimateKeywords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineEstimateKeywords);
                this.columnOnlineEstimateDescription = new global::System.Data.DataColumn("OnlineEstimateDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineEstimateDescription);
                this.columnOnlineEstimateTitle = new global::System.Data.DataColumn("OnlineEstimateTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOnlineEstimateTitle);
                this.columnVehicleStatusKeywords = new global::System.Data.DataColumn("VehicleStatusKeywords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleStatusKeywords);
                this.columnVehicleStatusDescription = new global::System.Data.DataColumn("VehicleStatusDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleStatusDescription);
                this.columnVehicleStatusTitle = new global::System.Data.DataColumn("VehicleStatusTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleStatusTitle);
                this.columnRentalCarCompanyPageUrl = new global::System.Data.DataColumn("RentalCarCompanyPageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentalCarCompanyPageUrl);
                this.columnTowingCompanyPageUrl = new global::System.Data.DataColumn("TowingCompanyPageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTowingCompanyPageUrl);
                this.columnShopNameBackColor = new global::System.Data.DataColumn("ShopNameBackColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopNameBackColor);
                this.columnShopNameFontColor = new global::System.Data.DataColumn("ShopNameFontColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopNameFontColor);
                this.columnSendMessageKeywords = new global::System.Data.DataColumn("SendMessageKeywords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendMessageKeywords);
                this.columnSendMessageDescription = new global::System.Data.DataColumn("SendMessageDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendMessageDescription);
                this.columnSendMessageTitle = new global::System.Data.DataColumn("SendMessageTitle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendMessageTitle);
                this.columnShopBanerImage5 = new global::System.Data.DataColumn("ShopBanerImage5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopBanerImage5);
                this.columnShopBanerImage4 = new global::System.Data.DataColumn("ShopBanerImage4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopBanerImage4);
                this.columnShopBanerImage3 = new global::System.Data.DataColumn("ShopBanerImage3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopBanerImage3);
                this.columnShopBanerImage2 = new global::System.Data.DataColumn("ShopBanerImage2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopBanerImage2);
                this.columnSetBannerBackgroundColor = new global::System.Data.DataColumn("SetBannerBackgroundColor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSetBannerBackgroundColor);
                this.columnTwitterPageUrl = new global::System.Data.DataColumn("TwitterPageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTwitterPageUrl);
                this.columnInstagramPageUrl = new global::System.Data.DataColumn("InstagramPageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstagramPageUrl);
                this.columnGooglePlusPageUrl = new global::System.Data.DataColumn("GooglePlusPageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGooglePlusPageUrl);
                this.columnPinterestPageUrl = new global::System.Data.DataColumn("PinterestPageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPinterestPageUrl);
                this.columnYouTubePageUrl = new global::System.Data.DataColumn("YouTubePageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYouTubePageUrl);
                this.columnLinkedInPageUrl = new global::System.Data.DataColumn("LinkedInPageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLinkedInPageUrl);
                this.columnFacebookPageUrl = new global::System.Data.DataColumn("FacebookPageUrl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFacebookPageUrl);
                this.columnShopBannerAlternateText = new global::System.Data.DataColumn("ShopBannerAlternateText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopBannerAlternateText);
                this.columnShopBanner = new global::System.Data.DataColumn("ShopBanner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopBanner);
                this.columnShopLogoAlternateText = new global::System.Data.DataColumn("ShopLogoAlternateText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopLogoAlternateText);
                this.columnKeyword = new global::System.Data.DataColumn("Keyword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeyword);
                this.columnShopDescription = new global::System.Data.DataColumn("ShopDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopDescription);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnHistory = new global::System.Data.DataColumn("History", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.columnSpeciality = new global::System.Data.DataColumn("Speciality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpeciality);
                this.columncontent = new global::System.Data.DataColumn("content", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncontent);
                this.columnAccessToken = new global::System.Data.DataColumn("AccessToken", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessToken);
                this.columnPageID = new global::System.Data.DataColumn("PageID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPageID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnshop_id}, true));
                this.columnshop_id.AutoIncrement = true;
                this.columnshop_id.AutoIncrementSeed = -1;
                this.columnshop_id.AutoIncrementStep = -1;
                this.columnshop_id.AllowDBNull = false;
                this.columnshop_id.ReadOnly = true;
                this.columnshop_id.Unique = true;
                this.columnshop_name.MaxLength = 50;
                this.columnaddress1.MaxLength = 50;
                this.columnaddress2.MaxLength = 50;
                this.columncity.MaxLength = 30;
                this.columnstate.MaxLength = 40;
                this.columnzip.MaxLength = 50;
                this.columnphone.MaxLength = 30;
                this.columnfax.MaxLength = 30;
                this.columnemail.MaxLength = 40;
                this.columnwebsite.MaxLength = 50;
                this.columnbusiness_license.MaxLength = 50;
                this.columnepa_license.MaxLength = 50;
                this.columnbar_license.MaxLength = 50;
                this.columnnetwork_name.MaxLength = 100;
                this.columncertification_vehicles.MaxLength = 100;
                this.columnthird_party_providers.MaxLength = 100;
                this.columnmanager.MaxLength = 100;
                this.columnsystem_admin.MaxLength = 100;
                this.columnportal_admin_password.MaxLength = 50;
                this.columncompany_tag_line.MaxLength = 500;
                this.columnowner.MaxLength = 100;
                this.columnimage_path.MaxLength = 500;
                this.columncommentsfrequency.MaxLength = 50;
                this.columnDonloadKeywords.MaxLength = 2147483647;
                this.columnDownloadDescription.MaxLength = 200;
                this.columnDownloadTitle.MaxLength = 100;
                this.columnSpecialPromotionKeywords.MaxLength = 2147483647;
                this.columnSpecialPromotionDescription.MaxLength = 200;
                this.columnSpecialPromotionTitle.MaxLength = 100;
                this.columnScheduleAppointmentKeywords.MaxLength = 2147483647;
                this.columnScheduleAppointmentDescription.MaxLength = 200;
                this.columnScheduleAppointmentTitle.MaxLength = 100;
                this.columnOnlineEstimateKeywords.MaxLength = 2147483647;
                this.columnOnlineEstimateDescription.MaxLength = 200;
                this.columnOnlineEstimateTitle.MaxLength = 100;
                this.columnVehicleStatusKeywords.MaxLength = 2147483647;
                this.columnVehicleStatusDescription.MaxLength = 200;
                this.columnVehicleStatusTitle.MaxLength = 100;
                this.columnRentalCarCompanyPageUrl.MaxLength = 500;
                this.columnTowingCompanyPageUrl.MaxLength = 500;
                this.columnShopNameBackColor.MaxLength = 50;
                this.columnShopNameFontColor.MaxLength = 50;
                this.columnSendMessageKeywords.MaxLength = 2147483647;
                this.columnSendMessageDescription.MaxLength = 200;
                this.columnSendMessageTitle.MaxLength = 100;
                this.columnShopBanerImage5.MaxLength = 500;
                this.columnShopBanerImage4.MaxLength = 500;
                this.columnShopBanerImage3.MaxLength = 500;
                this.columnShopBanerImage2.MaxLength = 500;
                this.columnSetBannerBackgroundColor.MaxLength = 50;
                this.columnTwitterPageUrl.MaxLength = 500;
                this.columnInstagramPageUrl.MaxLength = 500;
                this.columnGooglePlusPageUrl.MaxLength = 500;
                this.columnPinterestPageUrl.MaxLength = 500;
                this.columnYouTubePageUrl.MaxLength = 500;
                this.columnLinkedInPageUrl.MaxLength = 500;
                this.columnFacebookPageUrl.MaxLength = 500;
                this.columnShopBannerAlternateText.MaxLength = 1000;
                this.columnShopBanner.MaxLength = 500;
                this.columnShopLogoAlternateText.MaxLength = 1000;
                this.columnKeyword.MaxLength = 2147483647;
                this.columnShopDescription.MaxLength = 2147483647;
                this.columnTitle.MaxLength = 100;
                this.columnHistory.MaxLength = 2147483647;
                this.columnSpeciality.MaxLength = 2147483647;
                this.columncontent.MaxLength = 2147483647;
                this.columnAccessToken.MaxLength = 2147483647;
                this.columnPageID.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow NewBodyShopRow() {
                return ((BodyShopRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BodyShopRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(BodyShopRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BodyShopRowChanged != null)) {
                    this.BodyShopRowChanged(this, new BodyShopRowChangeEvent(((BodyShopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BodyShopRowChanging != null)) {
                    this.BodyShopRowChanging(this, new BodyShopRowChangeEvent(((BodyShopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BodyShopRowDeleted != null)) {
                    this.BodyShopRowDeleted(this, new BodyShopRowChangeEvent(((BodyShopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BodyShopRowDeleting != null)) {
                    this.BodyShopRowDeleting(this, new BodyShopRowChangeEvent(((BodyShopRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveBodyShopRow(BodyShopRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BodyShopDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VehicleStatusDataTable : global::System.Data.TypedTableBase<VehicleStatusRow> {
            
            private global::System.Data.DataColumn columnVehicleStatusId;
            
            private global::System.Data.DataColumn columnVehicleStatus;
            
            private global::System.Data.DataColumn columnMessage;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnshop_id;
            
            private global::System.Data.DataColumn columnSMS;
            
            private global::System.Data.DataColumn columnEmail;
            
            private global::System.Data.DataColumn columnMoveToMarketing;
            
            private global::System.Data.DataColumn columnUpdatedVehicleStatusName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleStatusDataTable() {
                this.TableName = "VehicleStatus";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VehicleStatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected VehicleStatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleStatusIdColumn {
                get {
                    return this.columnVehicleStatusId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VehicleStatusColumn {
                get {
                    return this.columnVehicleStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MessageColumn {
                get {
                    return this.columnMessage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn shop_idColumn {
                get {
                    return this.columnshop_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMSColumn {
                get {
                    return this.columnSMS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EmailColumn {
                get {
                    return this.columnEmail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MoveToMarketingColumn {
                get {
                    return this.columnMoveToMarketing;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdatedVehicleStatusNameColumn {
                get {
                    return this.columnUpdatedVehicleStatusName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleStatusRow this[int index] {
                get {
                    return ((VehicleStatusRow)(this.Rows[index]));
                }
            }
            
            public event VehicleStatusRowChangeEventHandler VehicleStatusRowChanging;
            
            public event VehicleStatusRowChangeEventHandler VehicleStatusRowChanged;
            
            public event VehicleStatusRowChangeEventHandler VehicleStatusRowDeleting;
            
            public event VehicleStatusRowChangeEventHandler VehicleStatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddVehicleStatusRow(VehicleStatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleStatusRow AddVehicleStatusRow(string VehicleStatus, string Message, bool IsActive, BodyShopRow parentBodyShopRowByFK_VehicleStatus_BodyShop, bool SMS, bool Email, bool MoveToMarketing, string UpdatedVehicleStatusName) {
                VehicleStatusRow rowVehicleStatusRow = ((VehicleStatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        VehicleStatus,
                        Message,
                        IsActive,
                        null,
                        SMS,
                        Email,
                        MoveToMarketing,
                        UpdatedVehicleStatusName};
                if ((parentBodyShopRowByFK_VehicleStatus_BodyShop != null)) {
                    columnValuesArray[4] = parentBodyShopRowByFK_VehicleStatus_BodyShop[0];
                }
                rowVehicleStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVehicleStatusRow);
                return rowVehicleStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleStatusRow FindByVehicleStatusId(int VehicleStatusId) {
                return ((VehicleStatusRow)(this.Rows.Find(new object[] {
                            VehicleStatusId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                VehicleStatusDataTable cln = ((VehicleStatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VehicleStatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnVehicleStatusId = base.Columns["VehicleStatusId"];
                this.columnVehicleStatus = base.Columns["VehicleStatus"];
                this.columnMessage = base.Columns["Message"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnshop_id = base.Columns["shop_id"];
                this.columnSMS = base.Columns["SMS"];
                this.columnEmail = base.Columns["Email"];
                this.columnMoveToMarketing = base.Columns["MoveToMarketing"];
                this.columnUpdatedVehicleStatusName = base.Columns["UpdatedVehicleStatusName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnVehicleStatusId = new global::System.Data.DataColumn("VehicleStatusId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleStatusId);
                this.columnVehicleStatus = new global::System.Data.DataColumn("VehicleStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicleStatus);
                this.columnMessage = new global::System.Data.DataColumn("Message", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnshop_id = new global::System.Data.DataColumn("shop_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshop_id);
                this.columnSMS = new global::System.Data.DataColumn("SMS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMS);
                this.columnEmail = new global::System.Data.DataColumn("Email", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmail);
                this.columnMoveToMarketing = new global::System.Data.DataColumn("MoveToMarketing", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMoveToMarketing);
                this.columnUpdatedVehicleStatusName = new global::System.Data.DataColumn("UpdatedVehicleStatusName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedVehicleStatusName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVehicleStatusId}, true));
                this.columnVehicleStatusId.AutoIncrement = true;
                this.columnVehicleStatusId.AutoIncrementSeed = -1;
                this.columnVehicleStatusId.AutoIncrementStep = -1;
                this.columnVehicleStatusId.AllowDBNull = false;
                this.columnVehicleStatusId.ReadOnly = true;
                this.columnVehicleStatusId.Unique = true;
                this.columnVehicleStatus.AllowDBNull = false;
                this.columnVehicleStatus.MaxLength = 50;
                this.columnMessage.MaxLength = 500;
                this.columnUpdatedVehicleStatusName.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleStatusRow NewVehicleStatusRow() {
                return ((VehicleStatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VehicleStatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(VehicleStatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VehicleStatusRowChanged != null)) {
                    this.VehicleStatusRowChanged(this, new VehicleStatusRowChangeEvent(((VehicleStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VehicleStatusRowChanging != null)) {
                    this.VehicleStatusRowChanging(this, new VehicleStatusRowChangeEvent(((VehicleStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VehicleStatusRowDeleted != null)) {
                    this.VehicleStatusRowDeleted(this, new VehicleStatusRowChangeEvent(((VehicleStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VehicleStatusRowDeleting != null)) {
                    this.VehicleStatusRowDeleting(this, new VehicleStatusRowChangeEvent(((VehicleStatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveVehicleStatusRow(VehicleStatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VehicleStatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AutoImporterShopsDataTable : global::System.Data.TypedTableBase<AutoImporterShopsRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnShopID;
            
            private global::System.Data.DataColumn columnSyncDateTime;
            
            private global::System.Data.DataColumn columnIsEmailSend;
            
            private global::System.Data.DataColumn columnSendMailDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AutoImporterShopsDataTable() {
                this.TableName = "AutoImporterShops";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AutoImporterShopsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected AutoImporterShopsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopIDColumn {
                get {
                    return this.columnShopID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SyncDateTimeColumn {
                get {
                    return this.columnSyncDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsEmailSendColumn {
                get {
                    return this.columnIsEmailSend;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SendMailDateColumn {
                get {
                    return this.columnSendMailDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AutoImporterShopsRow this[int index] {
                get {
                    return ((AutoImporterShopsRow)(this.Rows[index]));
                }
            }
            
            public event AutoImporterShopsRowChangeEventHandler AutoImporterShopsRowChanging;
            
            public event AutoImporterShopsRowChangeEventHandler AutoImporterShopsRowChanged;
            
            public event AutoImporterShopsRowChangeEventHandler AutoImporterShopsRowDeleting;
            
            public event AutoImporterShopsRowChangeEventHandler AutoImporterShopsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddAutoImporterShopsRow(AutoImporterShopsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AutoImporterShopsRow AddAutoImporterShopsRow(int ShopID, System.DateTime SyncDateTime, bool IsEmailSend, System.DateTime SendMailDate) {
                AutoImporterShopsRow rowAutoImporterShopsRow = ((AutoImporterShopsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ShopID,
                        SyncDateTime,
                        IsEmailSend,
                        SendMailDate};
                rowAutoImporterShopsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAutoImporterShopsRow);
                return rowAutoImporterShopsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AutoImporterShopsRow FindByID(int ID) {
                return ((AutoImporterShopsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                AutoImporterShopsDataTable cln = ((AutoImporterShopsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AutoImporterShopsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnShopID = base.Columns["ShopID"];
                this.columnSyncDateTime = base.Columns["SyncDateTime"];
                this.columnIsEmailSend = base.Columns["IsEmailSend"];
                this.columnSendMailDate = base.Columns["SendMailDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnShopID = new global::System.Data.DataColumn("ShopID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopID);
                this.columnSyncDateTime = new global::System.Data.DataColumn("SyncDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSyncDateTime);
                this.columnIsEmailSend = new global::System.Data.DataColumn("IsEmailSend", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEmailSend);
                this.columnSendMailDate = new global::System.Data.DataColumn("SendMailDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSendMailDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AutoIncrementSeed = -1;
                this.columnID.AutoIncrementStep = -1;
                this.columnID.AllowDBNull = false;
                this.columnID.ReadOnly = true;
                this.columnID.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AutoImporterShopsRow NewAutoImporterShopsRow() {
                return ((AutoImporterShopsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AutoImporterShopsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(AutoImporterShopsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AutoImporterShopsRowChanged != null)) {
                    this.AutoImporterShopsRowChanged(this, new AutoImporterShopsRowChangeEvent(((AutoImporterShopsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AutoImporterShopsRowChanging != null)) {
                    this.AutoImporterShopsRowChanging(this, new AutoImporterShopsRowChangeEvent(((AutoImporterShopsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AutoImporterShopsRowDeleted != null)) {
                    this.AutoImporterShopsRowDeleted(this, new AutoImporterShopsRowChangeEvent(((AutoImporterShopsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AutoImporterShopsRowDeleting != null)) {
                    this.AutoImporterShopsRowDeleting(this, new AutoImporterShopsRowChangeEvent(((AutoImporterShopsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveAutoImporterShopsRow(AutoImporterShopsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AutoImporterShopsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class User_Audit_TrailDataTable : global::System.Data.TypedTableBase<User_Audit_TrailRow> {
            
            private global::System.Data.DataColumn columnid;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnvehicle_id;
            
            private global::System.Data.DataColumn columnvehicle_status_id;
            
            private global::System.Data.DataColumn columnlast_updated;
            
            private global::System.Data.DataColumn columnisLastUnsoldStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailDataTable() {
                this.TableName = "User_Audit_Trail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal User_Audit_TrailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected User_Audit_TrailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_idColumn {
                get {
                    return this.columnvehicle_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn vehicle_status_idColumn {
                get {
                    return this.columnvehicle_status_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn last_updatedColumn {
                get {
                    return this.columnlast_updated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn isLastUnsoldStatusColumn {
                get {
                    return this.columnisLastUnsoldStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailRow this[int index] {
                get {
                    return ((User_Audit_TrailRow)(this.Rows[index]));
                }
            }
            
            public event User_Audit_TrailRowChangeEventHandler User_Audit_TrailRowChanging;
            
            public event User_Audit_TrailRowChangeEventHandler User_Audit_TrailRowChanged;
            
            public event User_Audit_TrailRowChangeEventHandler User_Audit_TrailRowDeleting;
            
            public event User_Audit_TrailRowChangeEventHandler User_Audit_TrailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUser_Audit_TrailRow(User_Audit_TrailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailRow AddUser_Audit_TrailRow(UserRow parentUserRowByFK_User_Audit_Trail_User, VehicleInfoRow parentVehicleInfoRowByFK_User_Audit_Trail_VehicleInfo, int vehicle_status_id, System.DateTime last_updated, bool isLastUnsoldStatus) {
                User_Audit_TrailRow rowUser_Audit_TrailRow = ((User_Audit_TrailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        vehicle_status_id,
                        last_updated,
                        isLastUnsoldStatus};
                if ((parentUserRowByFK_User_Audit_Trail_User != null)) {
                    columnValuesArray[1] = parentUserRowByFK_User_Audit_Trail_User[0];
                }
                if ((parentVehicleInfoRowByFK_User_Audit_Trail_VehicleInfo != null)) {
                    columnValuesArray[2] = parentVehicleInfoRowByFK_User_Audit_Trail_VehicleInfo[0];
                }
                rowUser_Audit_TrailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUser_Audit_TrailRow);
                return rowUser_Audit_TrailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailRow FindByid(int id) {
                return ((User_Audit_TrailRow)(this.Rows.Find(new object[] {
                            id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                User_Audit_TrailDataTable cln = ((User_Audit_TrailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new User_Audit_TrailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnid = base.Columns["id"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnvehicle_id = base.Columns["vehicle_id"];
                this.columnvehicle_status_id = base.Columns["vehicle_status_id"];
                this.columnlast_updated = base.Columns["last_updated"];
                this.columnisLastUnsoldStatus = base.Columns["isLastUnsoldStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnid = new global::System.Data.DataColumn("id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnvehicle_id = new global::System.Data.DataColumn("vehicle_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_id);
                this.columnvehicle_status_id = new global::System.Data.DataColumn("vehicle_status_id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvehicle_status_id);
                this.columnlast_updated = new global::System.Data.DataColumn("last_updated", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlast_updated);
                this.columnisLastUnsoldStatus = new global::System.Data.DataColumn("isLastUnsoldStatus", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisLastUnsoldStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid}, true));
                this.columnid.AutoIncrement = true;
                this.columnid.AutoIncrementSeed = -1;
                this.columnid.AutoIncrementStep = -1;
                this.columnid.AllowDBNull = false;
                this.columnid.ReadOnly = true;
                this.columnid.Unique = true;
                this.columnuser_id.AllowDBNull = false;
                this.columnvehicle_id.AllowDBNull = false;
                this.columnvehicle_status_id.AllowDBNull = false;
                this.columnlast_updated.AllowDBNull = false;
                this.columnisLastUnsoldStatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailRow NewUser_Audit_TrailRow() {
                return ((User_Audit_TrailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new User_Audit_TrailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(User_Audit_TrailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.User_Audit_TrailRowChanged != null)) {
                    this.User_Audit_TrailRowChanged(this, new User_Audit_TrailRowChangeEvent(((User_Audit_TrailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.User_Audit_TrailRowChanging != null)) {
                    this.User_Audit_TrailRowChanging(this, new User_Audit_TrailRowChangeEvent(((User_Audit_TrailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.User_Audit_TrailRowDeleted != null)) {
                    this.User_Audit_TrailRowDeleted(this, new User_Audit_TrailRowChangeEvent(((User_Audit_TrailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.User_Audit_TrailRowDeleting != null)) {
                    this.User_Audit_TrailRowDeleting(this, new User_Audit_TrailRowChangeEvent(((User_Audit_TrailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUser_Audit_TrailRow(User_Audit_TrailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "User_Audit_TrailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ConnectAPIDataTable : global::System.Data.TypedTableBase<ConnectAPIRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnShopId;
            
            private global::System.Data.DataColumn columnPartnerKey;
            
            private global::System.Data.DataColumn columnClientKey;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnLastSyncDate;
            
            private global::System.Data.DataColumn columnFromDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConnectAPIDataTable() {
                this.TableName = "ConnectAPI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ConnectAPIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ConnectAPIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ShopIdColumn {
                get {
                    return this.columnShopId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PartnerKeyColumn {
                get {
                    return this.columnPartnerKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClientKeyColumn {
                get {
                    return this.columnClientKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LastSyncDateColumn {
                get {
                    return this.columnLastSyncDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConnectAPIRow this[int index] {
                get {
                    return ((ConnectAPIRow)(this.Rows[index]));
                }
            }
            
            public event ConnectAPIRowChangeEventHandler ConnectAPIRowChanging;
            
            public event ConnectAPIRowChangeEventHandler ConnectAPIRowChanged;
            
            public event ConnectAPIRowChangeEventHandler ConnectAPIRowDeleting;
            
            public event ConnectAPIRowChangeEventHandler ConnectAPIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddConnectAPIRow(ConnectAPIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConnectAPIRow AddConnectAPIRow(BodyShopRow parentBodyShopRowByFK_BodyShop_ConnectApi, string PartnerKey, string ClientKey, System.DateTime CreatedDate, System.DateTime LastSyncDate, System.DateTime FromDate) {
                ConnectAPIRow rowConnectAPIRow = ((ConnectAPIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        PartnerKey,
                        ClientKey,
                        CreatedDate,
                        LastSyncDate,
                        FromDate};
                if ((parentBodyShopRowByFK_BodyShop_ConnectApi != null)) {
                    columnValuesArray[1] = parentBodyShopRowByFK_BodyShop_ConnectApi[0];
                }
                rowConnectAPIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConnectAPIRow);
                return rowConnectAPIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConnectAPIRow FindById(int Id) {
                return ((ConnectAPIRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ConnectAPIDataTable cln = ((ConnectAPIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ConnectAPIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnShopId = base.Columns["ShopId"];
                this.columnPartnerKey = base.Columns["PartnerKey"];
                this.columnClientKey = base.Columns["ClientKey"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnLastSyncDate = base.Columns["LastSyncDate"];
                this.columnFromDate = base.Columns["FromDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnShopId = new global::System.Data.DataColumn("ShopId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopId);
                this.columnPartnerKey = new global::System.Data.DataColumn("PartnerKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartnerKey);
                this.columnClientKey = new global::System.Data.DataColumn("ClientKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientKey);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnLastSyncDate = new global::System.Data.DataColumn("LastSyncDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastSyncDate);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnShopId.AllowDBNull = false;
                this.columnPartnerKey.MaxLength = 2147483647;
                this.columnClientKey.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConnectAPIRow NewConnectAPIRow() {
                return ((ConnectAPIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ConnectAPIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ConnectAPIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ConnectAPIRowChanged != null)) {
                    this.ConnectAPIRowChanged(this, new ConnectAPIRowChangeEvent(((ConnectAPIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ConnectAPIRowChanging != null)) {
                    this.ConnectAPIRowChanging(this, new ConnectAPIRowChangeEvent(((ConnectAPIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ConnectAPIRowDeleted != null)) {
                    this.ConnectAPIRowDeleted(this, new ConnectAPIRowChangeEvent(((ConnectAPIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ConnectAPIRowDeleting != null)) {
                    this.ConnectAPIRowDeleting(this, new ConnectAPIRowChangeEvent(((ConnectAPIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveConnectAPIRow(ConnectAPIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SummitDS ds = new SummitDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ConnectAPIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AccidentReportRow : global::System.Data.DataRow {
            
            private AccidentReportDataTable tableAccidentReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AccidentReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAccidentReport = ((AccidentReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int accident_id {
                get {
                    return ((int)(this[this.tableAccidentReport.accident_idColumn]));
                }
                set {
                    this[this.tableAccidentReport.accident_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableAccidentReport.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string street {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.streetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'street\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.streetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'city\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string state {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string description {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.descriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'description\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.descriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string driver_phone {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.driver_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driver_phone\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.driver_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string driver_license_state_plate {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.driver_license_state_plateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driver_license_state_plate\' in table \'AccidentReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.driver_license_state_plateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string driver_license_no {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.driver_license_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driver_license_no\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.driver_license_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string driver_vehicle_type {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.driver_vehicle_typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driver_vehicle_type\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.driver_vehicle_typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string insurance_company_name {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.insurance_company_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'insurance_company_name\' in table \'AccidentReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.insurance_company_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string insurance_policy_no {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.insurance_policy_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'insurance_policy_no\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.insurance_policy_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string police_office {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.police_officeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'police_office\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.police_officeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string police_report_no {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.police_report_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'police_report_no\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.police_report_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string witnesses {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.witnessesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'witnesses\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.witnessesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string witness_comments {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.witness_commentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'witness_comments\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.witness_commentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string misc_notes {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.misc_notesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'misc_notes\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.misc_notesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] image_attached {
                get {
                    try {
                        return ((byte[])(this[this.tableAccidentReport.image_attachedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'image_attached\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.image_attachedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int message_id {
                get {
                    try {
                        return ((int)(this[this.tableAccidentReport.message_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message_id\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.message_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string image_name {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.image_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'image_name\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.image_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string driver_name {
                get {
                    try {
                        return ((string)(this[this.tableAccidentReport.driver_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'driver_name\' in table \'AccidentReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAccidentReport.driver_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_AccidentReport_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AccidentReport_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MessageRow MessageRow {
                get {
                    return ((MessageRow)(this.GetParentRow(this.Table.ParentRelations["FK_AccidentReport_Message"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_AccidentReport_Message"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableAccidentReport.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableAccidentReport.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstreetNull() {
                return this.IsNull(this.tableAccidentReport.streetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstreetNull() {
                this[this.tableAccidentReport.streetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscityNull() {
                return this.IsNull(this.tableAccidentReport.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcityNull() {
                this[this.tableAccidentReport.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstateNull() {
                return this.IsNull(this.tableAccidentReport.stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstateNull() {
                this[this.tableAccidentReport.stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdescriptionNull() {
                return this.IsNull(this.tableAccidentReport.descriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdescriptionNull() {
                this[this.tableAccidentReport.descriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdriver_phoneNull() {
                return this.IsNull(this.tableAccidentReport.driver_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdriver_phoneNull() {
                this[this.tableAccidentReport.driver_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdriver_license_state_plateNull() {
                return this.IsNull(this.tableAccidentReport.driver_license_state_plateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdriver_license_state_plateNull() {
                this[this.tableAccidentReport.driver_license_state_plateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdriver_license_noNull() {
                return this.IsNull(this.tableAccidentReport.driver_license_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdriver_license_noNull() {
                this[this.tableAccidentReport.driver_license_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdriver_vehicle_typeNull() {
                return this.IsNull(this.tableAccidentReport.driver_vehicle_typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdriver_vehicle_typeNull() {
                this[this.tableAccidentReport.driver_vehicle_typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinsurance_company_nameNull() {
                return this.IsNull(this.tableAccidentReport.insurance_company_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinsurance_company_nameNull() {
                this[this.tableAccidentReport.insurance_company_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isinsurance_policy_noNull() {
                return this.IsNull(this.tableAccidentReport.insurance_policy_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setinsurance_policy_noNull() {
                this[this.tableAccidentReport.insurance_policy_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispolice_officeNull() {
                return this.IsNull(this.tableAccidentReport.police_officeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpolice_officeNull() {
                this[this.tableAccidentReport.police_officeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispolice_report_noNull() {
                return this.IsNull(this.tableAccidentReport.police_report_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpolice_report_noNull() {
                this[this.tableAccidentReport.police_report_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswitnessesNull() {
                return this.IsNull(this.tableAccidentReport.witnessesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwitnessesNull() {
                this[this.tableAccidentReport.witnessesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iswitness_commentsNull() {
                return this.IsNull(this.tableAccidentReport.witness_commentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setwitness_commentsNull() {
                this[this.tableAccidentReport.witness_commentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismisc_notesNull() {
                return this.IsNull(this.tableAccidentReport.misc_notesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmisc_notesNull() {
                this[this.tableAccidentReport.misc_notesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isimage_attachedNull() {
                return this.IsNull(this.tableAccidentReport.image_attachedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setimage_attachedNull() {
                this[this.tableAccidentReport.image_attachedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismessage_idNull() {
                return this.IsNull(this.tableAccidentReport.message_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmessage_idNull() {
                this[this.tableAccidentReport.message_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isimage_nameNull() {
                return this.IsNull(this.tableAccidentReport.image_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setimage_nameNull() {
                this[this.tableAccidentReport.image_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdriver_nameNull() {
                return this.IsNull(this.tableAccidentReport.driver_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdriver_nameNull() {
                this[this.tableAccidentReport.driver_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VehicleInfoRow : global::System.Data.DataRow {
            
            private VehicleInfoDataTable tableVehicleInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VehicleInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVehicleInfo = ((VehicleInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_id {
                get {
                    return ((int)(this[this.tableVehicleInfo.vehicle_idColumn]));
                }
                set {
                    this[this.tableVehicleInfo.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableVehicleInfo.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string make {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.makeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'make\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.makeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string year {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'year\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string other_info {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.other_infoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'other_info\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.other_infoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool is_using {
                get {
                    try {
                        return ((bool)(this[this.tableVehicleInfo.is_usingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_using\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.is_usingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string style {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.styleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'style\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.styleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string color {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.colorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'color\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.colorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string paint_code {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.paint_codeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'paint_code\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.paint_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string vin {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.vinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vin\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.vinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string license {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.licenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'license\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime production_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVehicleInfo.production_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'production_date\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.production_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string estimate_file_identifier {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.estimate_file_identifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'estimate_file_identifier\' in table \'VehicleInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.estimate_file_identifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string estimator_name {
                get {
                    try {
                        return ((string)(this[this.tableVehicleInfo.estimator_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'estimator_name\' in table \'VehicleInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleInfo.estimator_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_VehicleInfo_VehicleInfo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_VehicleInfo_VehicleInfo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableVehicleInfo.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableVehicleInfo.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tableVehicleInfo.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tableVehicleInfo.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmakeNull() {
                return this.IsNull(this.tableVehicleInfo.makeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmakeNull() {
                this[this.tableVehicleInfo.makeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearNull() {
                return this.IsNull(this.tableVehicleInfo.yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearNull() {
                this[this.tableVehicleInfo.yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isother_infoNull() {
                return this.IsNull(this.tableVehicleInfo.other_infoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setother_infoNull() {
                this[this.tableVehicleInfo.other_infoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_usingNull() {
                return this.IsNull(this.tableVehicleInfo.is_usingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_usingNull() {
                this[this.tableVehicleInfo.is_usingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstyleNull() {
                return this.IsNull(this.tableVehicleInfo.styleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstyleNull() {
                this[this.tableVehicleInfo.styleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscolorNull() {
                return this.IsNull(this.tableVehicleInfo.colorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcolorNull() {
                this[this.tableVehicleInfo.colorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispaint_codeNull() {
                return this.IsNull(this.tableVehicleInfo.paint_codeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpaint_codeNull() {
                this[this.tableVehicleInfo.paint_codeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvinNull() {
                return this.IsNull(this.tableVehicleInfo.vinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvinNull() {
                this[this.tableVehicleInfo.vinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslicenseNull() {
                return this.IsNull(this.tableVehicleInfo.licenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlicenseNull() {
                this[this.tableVehicleInfo.licenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isproduction_dateNull() {
                return this.IsNull(this.tableVehicleInfo.production_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setproduction_dateNull() {
                this[this.tableVehicleInfo.production_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isestimate_file_identifierNull() {
                return this.IsNull(this.tableVehicleInfo.estimate_file_identifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setestimate_file_identifierNull() {
                this[this.tableVehicleInfo.estimate_file_identifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isestimator_nameNull() {
                return this.IsNull(this.tableVehicleInfo.estimator_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setestimator_nameNull() {
                this[this.tableVehicleInfo.estimator_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRow[] GetMarketingUsersRows() {
                if ((this.Table.ChildRelations["FK_MarketingUsers_VehicleInfo"] == null)) {
                    return new MarketingUsersRow[0];
                }
                else {
                    return ((MarketingUsersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MarketingUsers_VehicleInfo"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleMediaLinkRow[] GetVehicleMediaLinkRows() {
                if ((this.Table.ChildRelations["FK_VehicleMediaLink_VehicleInfo"] == null)) {
                    return new VehicleMediaLinkRow[0];
                }
                else {
                    return ((VehicleMediaLinkRow[])(base.GetChildRows(this.Table.ChildRelations["FK_VehicleMediaLink_VehicleInfo"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusRow[] GetUserVehicleStatusRows() {
                if ((this.Table.ChildRelations["FK_UserVechicleStatus_VehicleInfo"] == null)) {
                    return new UserVehicleStatusRow[0];
                }
                else {
                    return ((UserVehicleStatusRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UserVechicleStatus_VehicleInfo"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailRow[] GetUser_Audit_TrailRows() {
                if ((this.Table.ChildRelations["FK_User_Audit_Trail_VehicleInfo"] == null)) {
                    return new User_Audit_TrailRow[0];
                }
                else {
                    return ((User_Audit_TrailRow[])(base.GetChildRows(this.Table.ChildRelations["FK_User_Audit_Trail_VehicleInfo"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class InsuranceInformationRow : global::System.Data.DataRow {
            
            private InsuranceInformationDataTable tableInsuranceInformation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal InsuranceInformationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInsuranceInformation = ((InsuranceInformationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int insurance_id {
                get {
                    return ((int)(this[this.tableInsuranceInformation.insurance_idColumn]));
                }
                set {
                    this[this.tableInsuranceInformation.insurance_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agent_name {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.agent_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_name\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.agent_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agent_phone {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.agent_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_phone\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.agent_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agent_cell_phone {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.agent_cell_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_cell_phone\' in table \'InsuranceInformation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.agent_cell_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agent_website {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.agent_websiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_website\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.agent_websiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_name {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_name\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_cell_phone {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_cell_phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_cell_phone\' in table \'InsuranceInformation\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_cell_phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_website {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_websiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_website\' in table \'InsuranceInformation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_websiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string policy_no {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.policy_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'policy_no\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.policy_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime expiration_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInsuranceInformation.expiration_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'expiration_date\' in table \'InsuranceInformation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.expiration_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableInsuranceInformation.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_fax {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_fax\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_address {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_address\' in table \'InsuranceInformation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_city {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_city\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_state {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_state\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_zip {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_zipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_zip\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_zipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date_of_loss {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInsuranceInformation.date_of_lossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_of_loss\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.date_of_lossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal deductible {
                get {
                    try {
                        return ((decimal)(this[this.tableInsuranceInformation.deductibleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deductible\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.deductibleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string claim_number {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.claim_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'claim_number\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.claim_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string net_total_amount {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.net_total_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net_total_amount\' in table \'InsuranceInformation\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.net_total_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string repair_order_identifier {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.repair_order_identifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repair_order_identifier\' in table \'InsuranceInformation\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.repair_order_identifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string total_ro_amount {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.total_ro_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'total_ro_amount\' in table \'InsuranceInformation\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.total_ro_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_email {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.company_emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_email\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.company_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agent_email {
                get {
                    try {
                        return ((string)(this[this.tableInsuranceInformation.agent_emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_email\' in table \'InsuranceInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInsuranceInformation.agent_emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_InsuranceInformation_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_InsuranceInformation_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isagent_nameNull() {
                return this.IsNull(this.tableInsuranceInformation.agent_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setagent_nameNull() {
                this[this.tableInsuranceInformation.agent_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isagent_phoneNull() {
                return this.IsNull(this.tableInsuranceInformation.agent_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setagent_phoneNull() {
                this[this.tableInsuranceInformation.agent_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isagent_cell_phoneNull() {
                return this.IsNull(this.tableInsuranceInformation.agent_cell_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setagent_cell_phoneNull() {
                this[this.tableInsuranceInformation.agent_cell_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isagent_websiteNull() {
                return this.IsNull(this.tableInsuranceInformation.agent_websiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setagent_websiteNull() {
                this[this.tableInsuranceInformation.agent_websiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_nameNull() {
                return this.IsNull(this.tableInsuranceInformation.company_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_nameNull() {
                this[this.tableInsuranceInformation.company_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_cell_phoneNull() {
                return this.IsNull(this.tableInsuranceInformation.company_cell_phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_cell_phoneNull() {
                this[this.tableInsuranceInformation.company_cell_phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_websiteNull() {
                return this.IsNull(this.tableInsuranceInformation.company_websiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_websiteNull() {
                this[this.tableInsuranceInformation.company_websiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispolicy_noNull() {
                return this.IsNull(this.tableInsuranceInformation.policy_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpolicy_noNull() {
                this[this.tableInsuranceInformation.policy_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isexpiration_dateNull() {
                return this.IsNull(this.tableInsuranceInformation.expiration_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setexpiration_dateNull() {
                this[this.tableInsuranceInformation.expiration_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableInsuranceInformation.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableInsuranceInformation.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_faxNull() {
                return this.IsNull(this.tableInsuranceInformation.company_faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_faxNull() {
                this[this.tableInsuranceInformation.company_faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_addressNull() {
                return this.IsNull(this.tableInsuranceInformation.company_addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_addressNull() {
                this[this.tableInsuranceInformation.company_addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_cityNull() {
                return this.IsNull(this.tableInsuranceInformation.company_cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_cityNull() {
                this[this.tableInsuranceInformation.company_cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_stateNull() {
                return this.IsNull(this.tableInsuranceInformation.company_stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_stateNull() {
                this[this.tableInsuranceInformation.company_stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_zipNull() {
                return this.IsNull(this.tableInsuranceInformation.company_zipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_zipNull() {
                this[this.tableInsuranceInformation.company_zipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate_of_lossNull() {
                return this.IsNull(this.tableInsuranceInformation.date_of_lossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate_of_lossNull() {
                this[this.tableInsuranceInformation.date_of_lossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeductibleNull() {
                return this.IsNull(this.tableInsuranceInformation.deductibleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeductibleNull() {
                this[this.tableInsuranceInformation.deductibleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isclaim_numberNull() {
                return this.IsNull(this.tableInsuranceInformation.claim_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setclaim_numberNull() {
                this[this.tableInsuranceInformation.claim_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnet_total_amountNull() {
                return this.IsNull(this.tableInsuranceInformation.net_total_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnet_total_amountNull() {
                this[this.tableInsuranceInformation.net_total_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrepair_order_identifierNull() {
                return this.IsNull(this.tableInsuranceInformation.repair_order_identifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrepair_order_identifierNull() {
                this[this.tableInsuranceInformation.repair_order_identifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istotal_ro_amountNull() {
                return this.IsNull(this.tableInsuranceInformation.total_ro_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settotal_ro_amountNull() {
                this[this.tableInsuranceInformation.total_ro_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_emailNull() {
                return this.IsNull(this.tableInsuranceInformation.company_emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_emailNull() {
                this[this.tableInsuranceInformation.company_emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isagent_emailNull() {
                return this.IsNull(this.tableInsuranceInformation.agent_emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setagent_emailNull() {
                this[this.tableInsuranceInformation.agent_emailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MessageRow : global::System.Data.DataRow {
            
            private MessageDataTable tableMessage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MessageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMessage = ((MessageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableMessage.IDColumn]));
                }
                set {
                    this[this.tableMessage.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime messageTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableMessage.messageTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'messageTime\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.messageTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string message {
                get {
                    try {
                        return ((string)(this[this.tableMessage.messageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string attachemet {
                get {
                    try {
                        return ((string)(this[this.tableMessage.attachemetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'attachemet\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.attachemetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int type {
                get {
                    try {
                        return ((int)(this[this.tableMessage.typeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'type\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.typeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableMessage.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int phoneUser_id {
                get {
                    try {
                        return ((int)(this[this.tableMessage.phoneUser_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phoneUser_id\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.phoneUser_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string locationLink {
                get {
                    try {
                        return ((string)(this[this.tableMessage.locationLinkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'locationLink\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.locationLinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool is_read {
                get {
                    try {
                        return ((bool)(this[this.tableMessage.is_readColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_read\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.is_readColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double latitude {
                get {
                    try {
                        return ((double)(this[this.tableMessage.latitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'latitude\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.latitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double longitude {
                get {
                    try {
                        return ((double)(this[this.tableMessage.longitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'longitude\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.longitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int private_label_id {
                get {
                    try {
                        return ((int)(this[this.tableMessage.private_label_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'private_label_id\' in table \'Message\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMessage.private_label_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmessageTimeNull() {
                return this.IsNull(this.tableMessage.messageTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmessageTimeNull() {
                this[this.tableMessage.messageTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmessageNull() {
                return this.IsNull(this.tableMessage.messageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmessageNull() {
                this[this.tableMessage.messageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsattachemetNull() {
                return this.IsNull(this.tableMessage.attachemetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetattachemetNull() {
                this[this.tableMessage.attachemetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstypeNull() {
                return this.IsNull(this.tableMessage.typeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettypeNull() {
                this[this.tableMessage.typeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableMessage.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableMessage.shop_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneUser_idNull() {
                return this.IsNull(this.tableMessage.phoneUser_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneUser_idNull() {
                this[this.tableMessage.phoneUser_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslocationLinkNull() {
                return this.IsNull(this.tableMessage.locationLinkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlocationLinkNull() {
                this[this.tableMessage.locationLinkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_readNull() {
                return this.IsNull(this.tableMessage.is_readColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_readNull() {
                this[this.tableMessage.is_readColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslatitudeNull() {
                return this.IsNull(this.tableMessage.latitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlatitudeNull() {
                this[this.tableMessage.latitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslongitudeNull() {
                return this.IsNull(this.tableMessage.longitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlongitudeNull() {
                this[this.tableMessage.longitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprivate_label_idNull() {
                return this.IsNull(this.tableMessage.private_label_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprivate_label_idNull() {
                this[this.tableMessage.private_label_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportRow[] GetAccidentReportRows() {
                if ((this.Table.ChildRelations["FK_AccidentReport_Message"] == null)) {
                    return new AccidentReportRow[0];
                }
                else {
                    return ((AccidentReportRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AccidentReport_Message"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UserRow : global::System.Data.DataRow {
            
            private UserDataTable tableUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UserRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUser = ((UserDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    return ((int)(this[this.tableUser.user_idColumn]));
                }
                set {
                    this[this.tableUser.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string first_name {
                get {
                    try {
                        return ((string)(this[this.tableUser.first_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'first_name\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.first_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string last_name {
                get {
                    try {
                        return ((string)(this[this.tableUser.last_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_name\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.last_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime date_of_birth {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUser.date_of_birthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'date_of_birth\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.date_of_birthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tableUser.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'city\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string state {
                get {
                    try {
                        return ((string)(this[this.tableUser.stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool gender {
                get {
                    try {
                        return ((bool)(this[this.tableUser.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableUser.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableUser.usernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'username\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.usernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string password {
                get {
                    try {
                        return ((string)(this[this.tableUser.passwordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'password\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.passwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone_id {
                get {
                    try {
                        return ((string)(this[this.tableUser.phone_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone_id\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.phone_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zip {
                get {
                    try {
                        return ((string)(this[this.tableUser.zipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zip\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.zipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime appDownLoadDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUser.appDownLoadDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appDownLoadDate\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.appDownLoadDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isRegistred {
                get {
                    try {
                        return ((bool)(this[this.tableUser.isRegistredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isRegistred\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.isRegistredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isNew {
                get {
                    try {
                        return ((bool)(this[this.tableUser.isNewColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isNew\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.isNewColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isRegistred_Shop {
                get {
                    try {
                        return ((bool)(this[this.tableUser.isRegistred_ShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isRegistred_Shop\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.isRegistred_ShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isShow {
                get {
                    try {
                        return ((bool)(this[this.tableUser.isShowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isShow\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.isShowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isShowEmailMarketing {
                get {
                    try {
                        return ((bool)(this[this.tableUser.isShowEmailMarketingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isShowEmailMarketing\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.isShowEmailMarketingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isShowTextMarketing {
                get {
                    try {
                        return ((bool)(this[this.tableUser.isShowTextMarketingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isShowTextMarketing\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.isShowTextMarketingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updatedEntryTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUser.updatedEntryTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updatedEntryTime\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.updatedEntryTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username_id {
                get {
                    try {
                        return ((string)(this[this.tableUser.username_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'username_id\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.username_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone2 {
                get {
                    try {
                        return ((string)(this[this.tableUser.phone2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone2\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.phone2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isOptOutNotificationSent {
                get {
                    try {
                        return ((bool)(this[this.tableUser.isOptOutNotificationSentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isOptOutNotificationSent\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.isOptOutNotificationSentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isOptedOutForMobileMessage {
                get {
                    try {
                        return ((bool)(this[this.tableUser.isOptedOutForMobileMessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isOptedOutForMobileMessage\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.isOptedOutForMobileMessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Device_Type {
                get {
                    try {
                        return ((int)(this[this.tableUser.Device_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Device_Type\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.Device_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string push_notification_device_id {
                get {
                    try {
                        return ((string)(this[this.tableUser.push_notification_device_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'push_notification_device_id\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.push_notification_device_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableUser.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address1 {
                get {
                    try {
                        return ((string)(this[this.tableUser.address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address1\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tableUser.address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address2\' in table \'User\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser.address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfirst_nameNull() {
                return this.IsNull(this.tableUser.first_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfirst_nameNull() {
                this[this.tableUser.first_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islast_nameNull() {
                return this.IsNull(this.tableUser.last_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlast_nameNull() {
                this[this.tableUser.last_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdate_of_birthNull() {
                return this.IsNull(this.tableUser.date_of_birthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdate_of_birthNull() {
                this[this.tableUser.date_of_birthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscityNull() {
                return this.IsNull(this.tableUser.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcityNull() {
                this[this.tableUser.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstateNull() {
                return this.IsNull(this.tableUser.stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstateNull() {
                this[this.tableUser.stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsgenderNull() {
                return this.IsNull(this.tableUser.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetgenderNull() {
                this[this.tableUser.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableUser.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableUser.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableUser.usernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableUser.usernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspasswordNull() {
                return this.IsNull(this.tableUser.passwordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpasswordNull() {
                this[this.tableUser.passwordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isphone_idNull() {
                return this.IsNull(this.tableUser.phone_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setphone_idNull() {
                this[this.tableUser.phone_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszipNull() {
                return this.IsNull(this.tableUser.zipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzipNull() {
                this[this.tableUser.zipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsappDownLoadDateNull() {
                return this.IsNull(this.tableUser.appDownLoadDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetappDownLoadDateNull() {
                this[this.tableUser.appDownLoadDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisRegistredNull() {
                return this.IsNull(this.tableUser.isRegistredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisRegistredNull() {
                this[this.tableUser.isRegistredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisNewNull() {
                return this.IsNull(this.tableUser.isNewColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisNewNull() {
                this[this.tableUser.isNewColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisRegistred_ShopNull() {
                return this.IsNull(this.tableUser.isRegistred_ShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisRegistred_ShopNull() {
                this[this.tableUser.isRegistred_ShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisShowNull() {
                return this.IsNull(this.tableUser.isShowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisShowNull() {
                this[this.tableUser.isShowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisShowEmailMarketingNull() {
                return this.IsNull(this.tableUser.isShowEmailMarketingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisShowEmailMarketingNull() {
                this[this.tableUser.isShowEmailMarketingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisShowTextMarketingNull() {
                return this.IsNull(this.tableUser.isShowTextMarketingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisShowTextMarketingNull() {
                this[this.tableUser.isShowTextMarketingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdatedEntryTimeNull() {
                return this.IsNull(this.tableUser.updatedEntryTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdatedEntryTimeNull() {
                this[this.tableUser.updatedEntryTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isusername_idNull() {
                return this.IsNull(this.tableUser.username_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setusername_idNull() {
                this[this.tableUser.username_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isphone2Null() {
                return this.IsNull(this.tableUser.phone2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setphone2Null() {
                this[this.tableUser.phone2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisOptOutNotificationSentNull() {
                return this.IsNull(this.tableUser.isOptOutNotificationSentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisOptOutNotificationSentNull() {
                this[this.tableUser.isOptOutNotificationSentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisOptedOutForMobileMessageNull() {
                return this.IsNull(this.tableUser.isOptedOutForMobileMessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisOptedOutForMobileMessageNull() {
                this[this.tableUser.isOptedOutForMobileMessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDevice_TypeNull() {
                return this.IsNull(this.tableUser.Device_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDevice_TypeNull() {
                this[this.tableUser.Device_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispush_notification_device_idNull() {
                return this.IsNull(this.tableUser.push_notification_device_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpush_notification_device_idNull() {
                this[this.tableUser.push_notification_device_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableUser.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableUser.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress1Null() {
                return this.IsNull(this.tableUser.address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress1Null() {
                this[this.tableUser.address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress2Null() {
                return this.IsNull(this.tableUser.address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress2Null() {
                this[this.tableUser.address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportRow[] GetAccidentReportRows() {
                if ((this.Table.ChildRelations["FK_AccidentReport_User"] == null)) {
                    return new AccidentReportRow[0];
                }
                else {
                    return ((AccidentReportRow[])(base.GetChildRows(this.Table.ChildRelations["FK_AccidentReport_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow[] GetVehicleInfoRows() {
                if ((this.Table.ChildRelations["FK_VehicleInfo_VehicleInfo"] == null)) {
                    return new VehicleInfoRow[0];
                }
                else {
                    return ((VehicleInfoRow[])(base.GetChildRows(this.Table.ChildRelations["FK_VehicleInfo_VehicleInfo"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsuranceInformationRow[] GetInsuranceInformationRows() {
                if ((this.Table.ChildRelations["FK_InsuranceInformation_User"] == null)) {
                    return new InsuranceInformationRow[0];
                }
                else {
                    return ((InsuranceInformationRow[])(base.GetChildRows(this.Table.ChildRelations["FK_InsuranceInformation_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopRow[] GetUser_PreferredShopRows() {
                if ((this.Table.ChildRelations["FK_UserPreferedShop_User"] == null)) {
                    return new User_PreferredShopRow[0];
                }
                else {
                    return ((User_PreferredShopRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UserPreferedShop_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRow[] GetMarketingUsersRows() {
                if ((this.Table.ChildRelations["FK_MarketingUsers_MarketingUsers"] == null)) {
                    return new MarketingUsersRow[0];
                }
                else {
                    return ((MarketingUsersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MarketingUsers_MarketingUsers"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryRow[] GetCommunicationHistoryRows() {
                if ((this.Table.ChildRelations["FK_CommunicationHistory_User"] == null)) {
                    return new CommunicationHistoryRow[0];
                }
                else {
                    return ((CommunicationHistoryRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CommunicationHistory_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusRow[] GetUserVehicleStatusRows() {
                if ((this.Table.ChildRelations["FK_UserVechicleStatus_User"] == null)) {
                    return new UserVehicleStatusRow[0];
                }
                else {
                    return ((UserVehicleStatusRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UserVechicleStatus_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRow[] GetReocurringCampaignUsersRows() {
                if ((this.Table.ChildRelations["FK_ReocurringCampaignUsers_User"] == null)) {
                    return new ReocurringCampaignUsersRow[0];
                }
                else {
                    return ((ReocurringCampaignUsersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ReocurringCampaignUsers_User"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailRow[] GetUser_Audit_TrailRows() {
                if ((this.Table.ChildRelations["FK_User_Audit_Trail_User"] == null)) {
                    return new User_Audit_TrailRow[0];
                }
                else {
                    return ((User_Audit_TrailRow[])(base.GetChildRows(this.Table.ChildRelations["FK_User_Audit_Trail_User"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class User_PreferredShopRow : global::System.Data.DataRow {
            
            private User_PreferredShopDataTable tableUser_PreferredShop;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal User_PreferredShopRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUser_PreferredShop = ((User_PreferredShopDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableUser_PreferredShop.IDColumn]));
                }
                set {
                    this[this.tableUser_PreferredShop.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableUser_PreferredShop.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'User_PreferredShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser_PreferredShop.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableUser_PreferredShop.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'User_PreferredShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUser_PreferredShop.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_UserPreferedShop_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UserPreferedShop_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow BodyShopRow {
                get {
                    return ((BodyShopRow)(this.GetParentRow(this.Table.ParentRelations["FK_UserPreferedShop_Shop"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UserPreferedShop_Shop"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableUser_PreferredShop.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableUser_PreferredShop.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableUser_PreferredShop.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableUser_PreferredShop.shop_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ZipCodeRow : global::System.Data.DataRow {
            
            private ZipCodeDataTable tableZipCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ZipCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableZipCode = ((ZipCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Code_id {
                get {
                    return ((int)(this[this.tableZipCode.Code_idColumn]));
                }
                set {
                    this[this.tableZipCode.Code_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    return ((string)(this[this.tableZipCode.ZipColumn]));
                }
                set {
                    this[this.tableZipCode.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Login_id {
                get {
                    return ((int)(this[this.tableZipCode.Login_idColumn]));
                }
                set {
                    this[this.tableZipCode.Login_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginRow LoginRow {
                get {
                    return ((LoginRow)(this.GetParentRow(this.Table.ParentRelations["FK_Login_id"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Login_id"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UnreadUsersFromRepairProspectRow : global::System.Data.DataRow {
            
            private UnreadUsersFromRepairProspectDataTable tableUnreadUsersFromRepairProspect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UnreadUsersFromRepairProspectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUnreadUsersFromRepairProspect = ((UnreadUsersFromRepairProspectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableUnreadUsersFromRepairProspect.idColumn]));
                }
                set {
                    this[this.tableUnreadUsersFromRepairProspect.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableUnreadUsersFromRepairProspect.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'UnreadUsersFromRepairProspect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableUnreadUsersFromRepairProspect.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableUnreadUsersFromRepairProspect.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'UnreadUsersFromRepairProspect\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableUnreadUsersFromRepairProspect.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableUnreadUsersFromRepairProspect.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableUnreadUsersFromRepairProspect.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableUnreadUsersFromRepairProspect.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableUnreadUsersFromRepairProspect.shop_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DeletedUsersFromRepairProspectRow : global::System.Data.DataRow {
            
            private DeletedUsersFromRepairProspectDataTable tableDeletedUsersFromRepairProspect;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DeletedUsersFromRepairProspectRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDeletedUsersFromRepairProspect = ((DeletedUsersFromRepairProspectDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableDeletedUsersFromRepairProspect.IDColumn]));
                }
                set {
                    this[this.tableDeletedUsersFromRepairProspect.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableDeletedUsersFromRepairProspect.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'DeletedUsersFromRepairProspect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDeletedUsersFromRepairProspect.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableDeletedUsersFromRepairProspect.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'DeletedUsersFromRepairProspect\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDeletedUsersFromRepairProspect.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableDeletedUsersFromRepairProspect.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableDeletedUsersFromRepairProspect.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableDeletedUsersFromRepairProspect.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableDeletedUsersFromRepairProspect.shop_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class MarketingUsersRow : global::System.Data.DataRow {
            
            private MarketingUsersDataTable tableMarketingUsers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal MarketingUsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMarketingUsers = ((MarketingUsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    return ((int)(this[this.tableMarketingUsers.shop_idColumn]));
                }
                set {
                    this[this.tableMarketingUsers.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    return ((int)(this[this.tableMarketingUsers.user_idColumn]));
                }
                set {
                    this[this.tableMarketingUsers.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isShowInProcess {
                get {
                    try {
                        return ((bool)(this[this.tableMarketingUsers.isShowInProcessColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isShowInProcess\' in table \'MarketingUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketingUsers.isShowInProcessColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int contactMethod {
                get {
                    try {
                        return ((int)(this[this.tableMarketingUsers.contactMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contactMethod\' in table \'MarketingUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMarketingUsers.contactMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_id {
                get {
                    return ((int)(this[this.tableMarketingUsers.vehicle_idColumn]));
                }
                set {
                    this[this.tableMarketingUsers.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_MarketingUsers_MarketingUsers"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MarketingUsers_MarketingUsers"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow VehicleInfoRow {
                get {
                    return ((VehicleInfoRow)(this.GetParentRow(this.Table.ParentRelations["FK_MarketingUsers_VehicleInfo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MarketingUsers_VehicleInfo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow BodyShopRow {
                get {
                    return ((BodyShopRow)(this.GetParentRow(this.Table.ParentRelations["FK_MarketingUsers_BodyShop"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_MarketingUsers_BodyShop"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisShowInProcessNull() {
                return this.IsNull(this.tableMarketingUsers.isShowInProcessColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisShowInProcessNull() {
                this[this.tableMarketingUsers.isShowInProcessColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactMethodNull() {
                return this.IsNull(this.tableMarketingUsers.contactMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactMethodNull() {
                this[this.tableMarketingUsers.contactMethodColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SP_Search_InProcessUsersRow : global::System.Data.DataRow {
            
            private SP_Search_InProcessUsersDataTable tableSP_Search_InProcessUsers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SP_Search_InProcessUsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_Search_InProcessUsers = ((SP_Search_InProcessUsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableSP_Search_InProcessUsers.idColumn]));
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableSP_Search_InProcessUsers.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableSP_Search_InProcessUsers.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shop_name {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.shop_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_name\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.shop_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int userVehicleStatusId {
                get {
                    try {
                        return ((int)(this[this.tableSP_Search_InProcessUsers.userVehicleStatusIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userVehicleStatusId\' in table \'SP_Search_InProcessUsers\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.userVehicleStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_id {
                get {
                    try {
                        return ((int)(this[this.tableSP_Search_InProcessUsers.vehicle_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vehicle_id\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.usernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'username\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.usernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_Search_InProcessUsers.dateInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateIn\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.dateInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dateOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_Search_InProcessUsers.dateOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateOut\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.dateOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string year {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'year\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string make {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.makeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'make\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.makeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicleStatus {
                get {
                    try {
                        return ((int)(this[this.tableSP_Search_InProcessUsers.vehicleStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vehicleStatus\' in table \'SP_Search_InProcessUsers\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.vehicleStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int contactMethod {
                get {
                    try {
                        return ((int)(this[this.tableSP_Search_InProcessUsers.contactMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contactMethod\' in table \'SP_Search_InProcessUsers\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.contactMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string claim_number {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.claim_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'claim_number\' in table \'SP_Search_InProcessUsers\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.claim_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ro_Identifier {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.ro_IdentifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ro_Identifier\' in table \'SP_Search_InProcessUsers\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.ro_IdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agent_name {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.agent_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_name\' in table \'SP_Search_InProcessUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.agent_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_name {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.company_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_name\' in table \'SP_Search_InProcessUsers\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.company_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string net__Total_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.net__Total_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net_ Total_Amount\' in table \'SP_Search_InProcessUsers\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.net__Total_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_Search_InProcessUsers.UpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedDate\' in table \'SP_Search_InProcessUsers\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.UpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_Search_InProcessUsers.updatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updatedDate\' in table \'SP_Search_InProcessUsers\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.updatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string estimate_file_identifier {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_InProcessUsers.estimate_file_identifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'estimate_file_identifier\' in table \'SP_Search_InProcessUser" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_InProcessUsers.estimate_file_identifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableSP_Search_InProcessUsers.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableSP_Search_InProcessUsers.shop_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_nameNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.shop_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_nameNull() {
                this[this.tableSP_Search_InProcessUsers.shop_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserVehicleStatusIdNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.userVehicleStatusIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserVehicleStatusIdNull() {
                this[this.tableSP_Search_InProcessUsers.userVehicleStatusIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvehicle_idNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.vehicle_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvehicle_idNull() {
                this[this.tableSP_Search_InProcessUsers.vehicle_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.usernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableSP_Search_InProcessUsers.usernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableSP_Search_InProcessUsers.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableSP_Search_InProcessUsers.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateInNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.dateInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateInNull() {
                this[this.tableSP_Search_InProcessUsers.dateInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdateOutNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.dateOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdateOutNull() {
                this[this.tableSP_Search_InProcessUsers.dateOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearNull() {
                this[this.tableSP_Search_InProcessUsers.yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmakeNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.makeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmakeNull() {
                this[this.tableSP_Search_InProcessUsers.makeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tableSP_Search_InProcessUsers.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsvehicleStatusNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.vehicleStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetvehicleStatusNull() {
                this[this.tableSP_Search_InProcessUsers.vehicleStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactMethodNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.contactMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactMethodNull() {
                this[this.tableSP_Search_InProcessUsers.contactMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isclaim_numberNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.claim_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setclaim_numberNull() {
                this[this.tableSP_Search_InProcessUsers.claim_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isro_IdentifierNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.ro_IdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setro_IdentifierNull() {
                this[this.tableSP_Search_InProcessUsers.ro_IdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isagent_nameNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.agent_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setagent_nameNull() {
                this[this.tableSP_Search_InProcessUsers.agent_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_nameNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.company_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_nameNull() {
                this[this.tableSP_Search_InProcessUsers.company_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnet__Total_AmountNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.net__Total_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnet__Total_AmountNull() {
                this[this.tableSP_Search_InProcessUsers.net__Total_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedDateNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.UpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedDateNull() {
                this[this.tableSP_Search_InProcessUsers.UpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdatedDateNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.updatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdatedDateNull() {
                this[this.tableSP_Search_InProcessUsers.updatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isestimate_file_identifierNull() {
                return this.IsNull(this.tableSP_Search_InProcessUsers.estimate_file_identifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setestimate_file_identifierNull() {
                this[this.tableSP_Search_InProcessUsers.estimate_file_identifierColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SP_Search_EmailTextMarketingCentersRow : global::System.Data.DataRow {
            
            private SP_Search_EmailTextMarketingCentersDataTable tableSP_Search_EmailTextMarketingCenters;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SP_Search_EmailTextMarketingCentersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSP_Search_EmailTextMarketingCenters = ((SP_Search_EmailTextMarketingCentersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableSP_Search_EmailTextMarketingCenters.idColumn]));
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    return ((int)(this[this.tableSP_Search_EmailTextMarketingCenters.user_idColumn]));
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableSP_Search_EmailTextMarketingCenters.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'SP_Search_EmailTextMarketingCenters\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'SP_Search_EmailTextMarketingCenters\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'SP_Search_EmailTextMarketingCenters\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string userName {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.userNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'userName\' in table \'SP_Search_EmailTextMarketingCenters\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.userNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zip {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.zipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zip\' in table \'SP_Search_EmailTextMarketingCenters\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.zipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime appDownLoadDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_Search_EmailTextMarketingCenters.appDownLoadDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appDownLoadDate\' in table \'SP_Search_EmailTextMarketingCent" +
                                "ers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.appDownLoadDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model\' in table \'SP_Search_EmailTextMarketingCenters\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string make {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.makeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'make\' in table \'SP_Search_EmailTextMarketingCenters\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.makeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string year {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'year\' in table \'SP_Search_EmailTextMarketingCenters\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updatedEntryTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_Search_EmailTextMarketingCenters.updatedEntryTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updatedEntryTime\' in table \'SP_Search_EmailTextMarketingCen" +
                                "ters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.updatedEntryTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_id {
                get {
                    try {
                        return ((int)(this[this.tableSP_Search_EmailTextMarketingCenters.vehicle_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vehicle_id\' in table \'SP_Search_EmailTextMarketingCenters\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string claim_number {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.claim_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'claim_number\' in table \'SP_Search_EmailTextMarketingCenters" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.claim_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ro_Identifier {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.ro_IdentifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ro_Identifier\' in table \'SP_Search_EmailTextMarketingCenter" +
                                "s\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.ro_IdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agent_name {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.agent_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_name\' in table \'SP_Search_EmailTextMarketingCenters\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.agent_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_name {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.company_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_name\' in table \'SP_Search_EmailTextMarketingCenters" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.company_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string net__Total_Amount {
                get {
                    try {
                        return ((string)(this[this.tableSP_Search_EmailTextMarketingCenters.net__Total_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net_ Total_Amount\' in table \'SP_Search_EmailTextMarketingCe" +
                                "nters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.net__Total_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime deliverydate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSP_Search_EmailTextMarketingCenters.deliverydateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deliverydate\' in table \'SP_Search_EmailTextMarketingCenters" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.deliverydateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isShowEmailMarketing {
                get {
                    try {
                        return ((bool)(this[this.tableSP_Search_EmailTextMarketingCenters.isShowEmailMarketingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isShowEmailMarketing\' in table \'SP_Search_EmailTextMarketin" +
                                "gCenters\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.isShowEmailMarketingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isShowTextMarketing {
                get {
                    try {
                        return ((bool)(this[this.tableSP_Search_EmailTextMarketingCenters.isShowTextMarketingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isShowTextMarketing\' in table \'SP_Search_EmailTextMarketing" +
                                "Centers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSP_Search_EmailTextMarketingCenters.isShowTextMarketingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.shop_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsuserNameNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.userNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetuserNameNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.userNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszipNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.zipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzipNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.zipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsappDownLoadDateNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.appDownLoadDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetappDownLoadDateNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.appDownLoadDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmakeNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.makeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmakeNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.makeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdatedEntryTimeNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.updatedEntryTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdatedEntryTimeNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.updatedEntryTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvehicle_idNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.vehicle_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvehicle_idNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.vehicle_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isclaim_numberNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.claim_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setclaim_numberNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.claim_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isro_IdentifierNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.ro_IdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setro_IdentifierNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.ro_IdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isagent_nameNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.agent_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setagent_nameNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.agent_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_nameNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.company_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_nameNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.company_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnet__Total_AmountNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.net__Total_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnet__Total_AmountNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.net__Total_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdeliverydateNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.deliverydateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdeliverydateNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.deliverydateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisShowEmailMarketingNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.isShowEmailMarketingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisShowEmailMarketingNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.isShowEmailMarketingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisShowTextMarketingNull() {
                return this.IsNull(this.tableSP_Search_EmailTextMarketingCenters.isShowTextMarketingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisShowTextMarketingNull() {
                this[this.tableSP_Search_EmailTextMarketingCenters.isShowTextMarketingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BodyShop_PrivateLabelRow : global::System.Data.DataRow {
            
            private BodyShop_PrivateLabelDataTable tableBodyShop_PrivateLabel;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BodyShop_PrivateLabelRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBodyShop_PrivateLabel = ((BodyShop_PrivateLabelDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableBodyShop_PrivateLabel.idColumn]));
                }
                set {
                    this[this.tableBodyShop_PrivateLabel.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int private_label_id {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop_PrivateLabel.private_label_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'private_label_id\' in table \'BodyShop_PrivateLabel\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableBodyShop_PrivateLabel.private_label_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop_PrivateLabel.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'BodyShop_PrivateLabel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop_PrivateLabel.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string page_logo_path {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop_PrivateLabel.page_logo_pathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'page_logo_path\' in table \'BodyShop_PrivateLabel\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBodyShop_PrivateLabel.page_logo_pathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string btn_logo_path {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop_PrivateLabel.btn_logo_pathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'btn_logo_path\' in table \'BodyShop_PrivateLabel\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop_PrivateLabel.btn_logo_pathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isprivate_label_idNull() {
                return this.IsNull(this.tableBodyShop_PrivateLabel.private_label_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setprivate_label_idNull() {
                this[this.tableBodyShop_PrivateLabel.private_label_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableBodyShop_PrivateLabel.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableBodyShop_PrivateLabel.shop_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispage_logo_pathNull() {
                return this.IsNull(this.tableBodyShop_PrivateLabel.page_logo_pathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpage_logo_pathNull() {
                this[this.tableBodyShop_PrivateLabel.page_logo_pathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbtn_logo_pathNull() {
                return this.IsNull(this.tableBodyShop_PrivateLabel.btn_logo_pathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbtn_logo_pathNull() {
                this[this.tableBodyShop_PrivateLabel.btn_logo_pathColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CampaignRow : global::System.Data.DataRow {
            
            private CampaignDataTable tableCampaign;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CampaignRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCampaign = ((CampaignDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int campaign_id {
                get {
                    return ((int)(this[this.tableCampaign.campaign_idColumn]));
                }
                set {
                    this[this.tableCampaign.campaign_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    return ((string)(this[this.tableCampaign.nameColumn]));
                }
                set {
                    this[this.tableCampaign.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string message {
                get {
                    try {
                        return ((string)(this[this.tableCampaign.messageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'message\' in table \'Campaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableCampaign.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'Campaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isEmail {
                get {
                    try {
                        return ((bool)(this[this.tableCampaign.isEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isEmail\' in table \'Campaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.isEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime createddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCampaign.createddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createddate\' in table \'Campaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.createddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool is_zip_code_matches_message {
                get {
                    try {
                        return ((bool)(this[this.tableCampaign.is_zip_code_matches_messageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_zip_code_matches_message\' in table \'Campaign\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCampaign.is_zip_code_matches_messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool is_preferred_shop_message {
                get {
                    try {
                        return ((bool)(this[this.tableCampaign.is_preferred_shop_messageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'is_preferred_shop_message\' in table \'Campaign\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCampaign.is_preferred_shop_messageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmessageNull() {
                return this.IsNull(this.tableCampaign.messageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmessageNull() {
                this[this.tableCampaign.messageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableCampaign.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableCampaign.shop_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisEmailNull() {
                return this.IsNull(this.tableCampaign.isEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisEmailNull() {
                this[this.tableCampaign.isEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreateddateNull() {
                return this.IsNull(this.tableCampaign.createddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreateddateNull() {
                this[this.tableCampaign.createddateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_zip_code_matches_messageNull() {
                return this.IsNull(this.tableCampaign.is_zip_code_matches_messageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_zip_code_matches_messageNull() {
                this[this.tableCampaign.is_zip_code_matches_messageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isis_preferred_shop_messageNull() {
                return this.IsNull(this.tableCampaign.is_preferred_shop_messageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setis_preferred_shop_messageNull() {
                this[this.tableCampaign.is_preferred_shop_messageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CommunicationHistoryRow : global::System.Data.DataRow {
            
            private CommunicationHistoryDataTable tableCommunicationHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CommunicationHistoryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCommunicationHistory = ((CommunicationHistoryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableCommunicationHistory.IDColumn]));
                }
                set {
                    this[this.tableCommunicationHistory.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Shop_Id {
                get {
                    try {
                        return ((int)(this[this.tableCommunicationHistory.Shop_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Shop_Id\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.Shop_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int User_Id {
                get {
                    try {
                        return ((int)(this[this.tableCommunicationHistory.User_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_Id\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.User_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CommunicationType {
                get {
                    try {
                        return ((int)(this[this.tableCommunicationHistory.CommunicationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommunicationType\' in table \'CommunicationHistory\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.CommunicationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MessageText {
                get {
                    try {
                        return ((string)(this[this.tableCommunicationHistory.MessageTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MessageText\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.MessageTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommunicationHistory.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableCommunicationHistory.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableCommunicationHistory.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FromAppSection {
                get {
                    try {
                        return ((int)(this[this.tableCommunicationHistory.FromAppSectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromAppSection\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.FromAppSectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MessageId {
                get {
                    try {
                        return ((string)(this[this.tableCommunicationHistory.MessageIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MessageId\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.MessageIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DeliveryStatus {
                get {
                    try {
                        return ((string)(this[this.tableCommunicationHistory.DeliveryStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryStatus\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.DeliveryStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCommunicationHistory.DeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryDate\' in table \'CommunicationHistory\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunicationHistory.DeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_CommunicationHistory_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CommunicationHistory_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow BodyShopRow {
                get {
                    return ((BodyShopRow)(this.GetParentRow(this.Table.ParentRelations["FK_CommunicationHistory_BodyShop"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CommunicationHistory_BodyShop"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShop_IdNull() {
                return this.IsNull(this.tableCommunicationHistory.Shop_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShop_IdNull() {
                this[this.tableCommunicationHistory.Shop_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_IdNull() {
                return this.IsNull(this.tableCommunicationHistory.User_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_IdNull() {
                this[this.tableCommunicationHistory.User_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommunicationTypeNull() {
                return this.IsNull(this.tableCommunicationHistory.CommunicationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommunicationTypeNull() {
                this[this.tableCommunicationHistory.CommunicationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageTextNull() {
                return this.IsNull(this.tableCommunicationHistory.MessageTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageTextNull() {
                this[this.tableCommunicationHistory.MessageTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableCommunicationHistory.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableCommunicationHistory.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableCommunicationHistory.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableCommunicationHistory.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableCommunicationHistory.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableCommunicationHistory.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromAppSectionNull() {
                return this.IsNull(this.tableCommunicationHistory.FromAppSectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromAppSectionNull() {
                this[this.tableCommunicationHistory.FromAppSectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageIdNull() {
                return this.IsNull(this.tableCommunicationHistory.MessageIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageIdNull() {
                this[this.tableCommunicationHistory.MessageIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryStatusNull() {
                return this.IsNull(this.tableCommunicationHistory.DeliveryStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryStatusNull() {
                this[this.tableCommunicationHistory.DeliveryStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryDateNull() {
                return this.IsNull(this.tableCommunicationHistory.DeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryDateNull() {
                this[this.tableCommunicationHistory.DeliveryDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class GetShopIdsByZipCodeRow : global::System.Data.DataRow {
            
            private GetShopIdsByZipCodeDataTable tableGetShopIdsByZipCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal GetShopIdsByZipCodeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetShopIdsByZipCode = ((GetShopIdsByZipCodeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShopID {
                get {
                    try {
                        return ((int)(this[this.tableGetShopIdsByZipCode.ShopIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopID\' in table \'GetShopIdsByZipCode\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetShopIdsByZipCode.ShopIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zip {
                get {
                    return ((string)(this[this.tableGetShopIdsByZipCode.ZipColumn]));
                }
                set {
                    this[this.tableGetShopIdsByZipCode.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopIDNull() {
                return this.IsNull(this.tableGetShopIdsByZipCode.ShopIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopIDNull() {
                this[this.tableGetShopIdsByZipCode.ShopIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LoginRow : global::System.Data.DataRow {
            
            private LoginDataTable tableLogin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LoginRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLogin = ((LoginDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserID {
                get {
                    return ((int)(this[this.tableLogin.UserIDColumn]));
                }
                set {
                    this[this.tableLogin.UserIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UserName {
                get {
                    try {
                        return ((string)(this[this.tableLogin.UserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UserName\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.UserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Password {
                get {
                    try {
                        return ((string)(this[this.tableLogin.PasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Password\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tableLogin.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tableLogin.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Email {
                get {
                    try {
                        return ((string)(this[this.tableLogin.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tableLogin.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    try {
                        return ((string)(this[this.tableLogin.CompanyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CompanySize {
                get {
                    try {
                        return ((int)(this[this.tableLogin.CompanySizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CompanySize\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.CompanySizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int CountryEntityID {
                get {
                    try {
                        return ((int)(this[this.tableLogin.CountryEntityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryEntityID\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.CountryEntityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShopID {
                get {
                    try {
                        return ((int)(this[this.tableLogin.ShopIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopID\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.ShopIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RoleId {
                get {
                    try {
                        return ((int)(this[this.tableLogin.RoleIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RoleId\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.RoleIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool UseProvidedSMTPServer {
                get {
                    try {
                        return ((bool)(this[this.tableLogin.UseProvidedSMTPServerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseProvidedSMTPServer\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.UseProvidedSMTPServerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SMTPServerName {
                get {
                    try {
                        return ((string)(this[this.tableLogin.SMTPServerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPServerName\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.SMTPServerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SMTPServerUserName {
                get {
                    try {
                        return ((string)(this[this.tableLogin.SMTPServerUserNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPServerUserName\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.SMTPServerUserNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SMTPServerPassword {
                get {
                    try {
                        return ((string)(this[this.tableLogin.SMTPServerPasswordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPServerPassword\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.SMTPServerPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SMTPServerPort {
                get {
                    try {
                        return ((int)(this[this.tableLogin.SMTPServerPortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPServerPort\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.SMTPServerPortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool EnableSSL {
                get {
                    return ((bool)(this[this.tableLogin.EnableSSLColumn]));
                }
                set {
                    this[this.tableLogin.EnableSSLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SMTPServerEmail {
                get {
                    try {
                        return ((string)(this[this.tableLogin.SMTPServerEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTPServerEmail\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.SMTPServerEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int AvailableSMS {
                get {
                    try {
                        return ((int)(this[this.tableLogin.AvailableSMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AvailableSMS\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.AvailableSMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SentSMS {
                get {
                    try {
                        return ((int)(this[this.tableLogin.SentSMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SentSMS\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.SentSMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SMSActivationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLogin.SMSActivationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMSActivationDate\' in table \'Login\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLogin.SMSActivationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow BodyShopRow {
                get {
                    return ((BodyShopRow)(this.GetParentRow(this.Table.ParentRelations["FK_Login_ShopID"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Login_ShopID"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUserNameNull() {
                return this.IsNull(this.tableLogin.UserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUserNameNull() {
                this[this.tableLogin.UserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPasswordNull() {
                return this.IsNull(this.tableLogin.PasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPasswordNull() {
                this[this.tableLogin.PasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tableLogin.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFirstNameNull() {
                this[this.tableLogin.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastNameNull() {
                return this.IsNull(this.tableLogin.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastNameNull() {
                this[this.tableLogin.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableLogin.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableLogin.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tableLogin.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tableLogin.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanyNull() {
                return this.IsNull(this.tableLogin.CompanyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanyNull() {
                this[this.tableLogin.CompanyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompanySizeNull() {
                return this.IsNull(this.tableLogin.CompanySizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompanySizeNull() {
                this[this.tableLogin.CompanySizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryEntityIDNull() {
                return this.IsNull(this.tableLogin.CountryEntityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryEntityIDNull() {
                this[this.tableLogin.CountryEntityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopIDNull() {
                return this.IsNull(this.tableLogin.ShopIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopIDNull() {
                this[this.tableLogin.ShopIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRoleIdNull() {
                return this.IsNull(this.tableLogin.RoleIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRoleIdNull() {
                this[this.tableLogin.RoleIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseProvidedSMTPServerNull() {
                return this.IsNull(this.tableLogin.UseProvidedSMTPServerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseProvidedSMTPServerNull() {
                this[this.tableLogin.UseProvidedSMTPServerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMTPServerNameNull() {
                return this.IsNull(this.tableLogin.SMTPServerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMTPServerNameNull() {
                this[this.tableLogin.SMTPServerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMTPServerUserNameNull() {
                return this.IsNull(this.tableLogin.SMTPServerUserNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMTPServerUserNameNull() {
                this[this.tableLogin.SMTPServerUserNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMTPServerPasswordNull() {
                return this.IsNull(this.tableLogin.SMTPServerPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMTPServerPasswordNull() {
                this[this.tableLogin.SMTPServerPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMTPServerPortNull() {
                return this.IsNull(this.tableLogin.SMTPServerPortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMTPServerPortNull() {
                this[this.tableLogin.SMTPServerPortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMTPServerEmailNull() {
                return this.IsNull(this.tableLogin.SMTPServerEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMTPServerEmailNull() {
                this[this.tableLogin.SMTPServerEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAvailableSMSNull() {
                return this.IsNull(this.tableLogin.AvailableSMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAvailableSMSNull() {
                this[this.tableLogin.AvailableSMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSentSMSNull() {
                return this.IsNull(this.tableLogin.SentSMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSentSMSNull() {
                this[this.tableLogin.SentSMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMSActivationDateNull() {
                return this.IsNull(this.tableLogin.SMSActivationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMSActivationDateNull() {
                this[this.tableLogin.SMSActivationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZipCodeRow[] GetZipCodeRows() {
                if ((this.Table.ChildRelations["FK_Login_id"] == null)) {
                    return new ZipCodeRow[0];
                }
                else {
                    return ((ZipCodeRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Login_id"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VehicleMediaLinkRow : global::System.Data.DataRow {
            
            private VehicleMediaLinkDataTable tableVehicleMediaLink;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VehicleMediaLinkRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVehicleMediaLink = ((VehicleMediaLinkDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableVehicleMediaLink.idColumn]));
                }
                set {
                    this[this.tableVehicleMediaLink.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_id {
                get {
                    return ((int)(this[this.tableVehicleMediaLink.vehicle_idColumn]));
                }
                set {
                    this[this.tableVehicleMediaLink.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string media_link {
                get {
                    return ((string)(this[this.tableVehicleMediaLink.media_linkColumn]));
                }
                set {
                    this[this.tableVehicleMediaLink.media_linkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime created_datetime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVehicleMediaLink.created_datetimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'created_datetime\' in table \'VehicleMediaLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleMediaLink.created_datetimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VehicleMediaLinkNoteID {
                get {
                    try {
                        return ((int)(this[this.tableVehicleMediaLink.VehicleMediaLinkNoteIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleMediaLinkNoteID\' in table \'VehicleMediaLink\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableVehicleMediaLink.VehicleMediaLinkNoteIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string media_link_Thumnail {
                get {
                    try {
                        return ((string)(this[this.tableVehicleMediaLink.media_link_ThumnailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'media_link_Thumnail\' in table \'VehicleMediaLink\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableVehicleMediaLink.media_link_ThumnailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNewLink {
                get {
                    try {
                        return ((bool)(this[this.tableVehicleMediaLink.IsNewLinkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNewLink\' in table \'VehicleMediaLink\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleMediaLink.IsNewLinkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow VehicleInfoRow {
                get {
                    return ((VehicleInfoRow)(this.GetParentRow(this.Table.ParentRelations["FK_VehicleMediaLink_VehicleInfo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_VehicleMediaLink_VehicleInfo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscreated_datetimeNull() {
                return this.IsNull(this.tableVehicleMediaLink.created_datetimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcreated_datetimeNull() {
                this[this.tableVehicleMediaLink.created_datetimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleMediaLinkNoteIDNull() {
                return this.IsNull(this.tableVehicleMediaLink.VehicleMediaLinkNoteIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleMediaLinkNoteIDNull() {
                this[this.tableVehicleMediaLink.VehicleMediaLinkNoteIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ismedia_link_ThumnailNull() {
                return this.IsNull(this.tableVehicleMediaLink.media_link_ThumnailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setmedia_link_ThumnailNull() {
                this[this.tableVehicleMediaLink.media_link_ThumnailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsNewLinkNull() {
                return this.IsNull(this.tableVehicleMediaLink.IsNewLinkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsNewLinkNull() {
                this[this.tableVehicleMediaLink.IsNewLinkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class UserVehicleStatusRow : global::System.Data.DataRow {
            
            private UserVehicleStatusDataTable tableUserVehicleStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UserVehicleStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUserVehicleStatus = ((UserVehicleStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableUserVehicleStatus.IDColumn]));
                }
                set {
                    this[this.tableUserVehicleStatus.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Vehicle_id {
                get {
                    try {
                        return ((int)(this[this.tableUserVehicleStatus.Vehicle_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vehicle_id\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.Vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUserVehicleStatus.DateInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateIn\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.DateInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUserVehicleStatus.DateOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOut\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.DateOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int User_id {
                get {
                    try {
                        return ((int)(this[this.tableUserVehicleStatus.User_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_id\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.User_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VehicleStatus {
                get {
                    try {
                        return ((int)(this[this.tableUserVehicleStatus.VehicleStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleStatus\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.VehicleStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Last_status_updated_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUserVehicleStatus.Last_status_updated_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Last_status_updated_date\' in table \'UserVehicleStatus\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.Last_status_updated_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUserVehicleStatus.DeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryDate\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.DeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Repair_Start_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUserVehicleStatus.Repair_Start_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Repair_Start_Date\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.Repair_Start_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Actual_Delivery_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUserVehicleStatus.Actual_Delivery_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Actual_Delivery_Date\' in table \'UserVehicleStatus\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.Actual_Delivery_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ETA_Hours {
                get {
                    try {
                        return ((int)(this[this.tableUserVehicleStatus.ETA_HoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ETA_Hours\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.ETA_HoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RO_Hours {
                get {
                    try {
                        return ((int)(this[this.tableUserVehicleStatus.RO_HoursColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RO_Hours\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.RO_HoursColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime File_Import_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUserVehicleStatus.File_Import_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'File_Import_Date\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.File_Import_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string File_Status {
                get {
                    try {
                        return ((string)(this[this.tableUserVehicleStatus.File_StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'File_Status\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.File_StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime File_Import_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUserVehicleStatus.File_Import_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'File_Import_Time\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.File_Import_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int IsRead {
                get {
                    try {
                        return ((int)(this[this.tableUserVehicleStatus.IsReadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsRead\' in table \'UserVehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUserVehicleStatus.IsReadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_UserVechicleStatus_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UserVechicleStatus_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow VehicleInfoRow {
                get {
                    return ((VehicleInfoRow)(this.GetParentRow(this.Table.ParentRelations["FK_UserVechicleStatus_VehicleInfo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_UserVechicleStatus_VehicleInfo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicle_idNull() {
                return this.IsNull(this.tableUserVehicleStatus.Vehicle_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicle_idNull() {
                this[this.tableUserVehicleStatus.Vehicle_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateInNull() {
                return this.IsNull(this.tableUserVehicleStatus.DateInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateInNull() {
                this[this.tableUserVehicleStatus.DateInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOutNull() {
                return this.IsNull(this.tableUserVehicleStatus.DateOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOutNull() {
                this[this.tableUserVehicleStatus.DateOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_idNull() {
                return this.IsNull(this.tableUserVehicleStatus.User_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_idNull() {
                this[this.tableUserVehicleStatus.User_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleStatusNull() {
                return this.IsNull(this.tableUserVehicleStatus.VehicleStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleStatusNull() {
                this[this.tableUserVehicleStatus.VehicleStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLast_status_updated_dateNull() {
                return this.IsNull(this.tableUserVehicleStatus.Last_status_updated_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLast_status_updated_dateNull() {
                this[this.tableUserVehicleStatus.Last_status_updated_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryDateNull() {
                return this.IsNull(this.tableUserVehicleStatus.DeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryDateNull() {
                this[this.tableUserVehicleStatus.DeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRepair_Start_DateNull() {
                return this.IsNull(this.tableUserVehicleStatus.Repair_Start_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRepair_Start_DateNull() {
                this[this.tableUserVehicleStatus.Repair_Start_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActual_Delivery_DateNull() {
                return this.IsNull(this.tableUserVehicleStatus.Actual_Delivery_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActual_Delivery_DateNull() {
                this[this.tableUserVehicleStatus.Actual_Delivery_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsETA_HoursNull() {
                return this.IsNull(this.tableUserVehicleStatus.ETA_HoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetETA_HoursNull() {
                this[this.tableUserVehicleStatus.ETA_HoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRO_HoursNull() {
                return this.IsNull(this.tableUserVehicleStatus.RO_HoursColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRO_HoursNull() {
                this[this.tableUserVehicleStatus.RO_HoursColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFile_Import_DateNull() {
                return this.IsNull(this.tableUserVehicleStatus.File_Import_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFile_Import_DateNull() {
                this[this.tableUserVehicleStatus.File_Import_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFile_StatusNull() {
                return this.IsNull(this.tableUserVehicleStatus.File_StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFile_StatusNull() {
                this[this.tableUserVehicleStatus.File_StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFile_Import_TimeNull() {
                return this.IsNull(this.tableUserVehicleStatus.File_Import_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFile_Import_TimeNull() {
                this[this.tableUserVehicleStatus.File_Import_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsReadNull() {
                return this.IsNull(this.tableUserVehicleStatus.IsReadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsReadNull() {
                this[this.tableUserVehicleStatus.IsReadColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_MyCustomerRow : global::System.Data.DataRow {
            
            private View_MyCustomerDataTable tableView_MyCustomer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_MyCustomerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_MyCustomer = ((View_MyCustomerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableView_MyCustomer.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    return ((int)(this[this.tableView_MyCustomer.shop_idColumn]));
                }
                set {
                    this[this.tableView_MyCustomer.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shop_name {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.shop_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_name\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.shop_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.usernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'username\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.usernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateIn {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_MyCustomer.DateInColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateIn\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.DateInColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateOut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_MyCustomer.DateOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateOut\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.DateOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string model {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.modelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'model\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.modelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string make {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.makeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'make\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.makeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string year {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.yearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'year\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.yearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int contactMethod {
                get {
                    try {
                        return ((int)(this[this.tableView_MyCustomer.contactMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'contactMethod\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.contactMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime updatedEntryTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_MyCustomer.updatedEntryTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'updatedEntryTime\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.updatedEntryTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string claim_number {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.claim_numberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'claim_number\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.claim_numberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string repair_order_identifier {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.repair_order_identifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'repair_order_identifier\' in table \'View_MyCustomer\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.repair_order_identifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string agent_name {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.agent_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'agent_name\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.agent_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_name {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.company_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_name\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.company_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string net_total_amount {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.net_total_amountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'net_total_amount\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.net_total_amountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string estimate_file_identifier {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.estimate_file_identifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'estimate_file_identifier\' in table \'View_MyCustomer\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.estimate_file_identifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime createddate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_MyCustomer.createddateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'createddate\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.createddateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string push_notification_device_id {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.push_notification_device_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'push_notification_device_id\' in table \'View_MyCustomer\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.push_notification_device_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VehicleStatus {
                get {
                    try {
                        return ((int)(this[this.tableView_MyCustomer.VehicleStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleStatus\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.VehicleStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string first_name {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.first_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'first_name\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.first_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string last_name {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.last_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'last_name\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.last_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zip {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.zipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zip\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.zipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_MyCustomer.DeliveryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeliveryDate\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.DeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_id {
                get {
                    try {
                        return ((int)(this[this.tableView_MyCustomer.vehicle_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vehicle_id\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableView_MyCustomer.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'View_MyCustomer\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_MyCustomer.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableView_MyCustomer.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableView_MyCustomer.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_nameNull() {
                return this.IsNull(this.tableView_MyCustomer.shop_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_nameNull() {
                this[this.tableView_MyCustomer.shop_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableView_MyCustomer.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableView_MyCustomer.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableView_MyCustomer.usernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableView_MyCustomer.usernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableView_MyCustomer.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableView_MyCustomer.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateInNull() {
                return this.IsNull(this.tableView_MyCustomer.DateInColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateInNull() {
                this[this.tableView_MyCustomer.DateInColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateOutNull() {
                return this.IsNull(this.tableView_MyCustomer.DateOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateOutNull() {
                this[this.tableView_MyCustomer.DateOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmodelNull() {
                return this.IsNull(this.tableView_MyCustomer.modelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmodelNull() {
                this[this.tableView_MyCustomer.modelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmakeNull() {
                return this.IsNull(this.tableView_MyCustomer.makeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmakeNull() {
                this[this.tableView_MyCustomer.makeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsyearNull() {
                return this.IsNull(this.tableView_MyCustomer.yearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetyearNull() {
                this[this.tableView_MyCustomer.yearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontactMethodNull() {
                return this.IsNull(this.tableView_MyCustomer.contactMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontactMethodNull() {
                this[this.tableView_MyCustomer.contactMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsupdatedEntryTimeNull() {
                return this.IsNull(this.tableView_MyCustomer.updatedEntryTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetupdatedEntryTimeNull() {
                this[this.tableView_MyCustomer.updatedEntryTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isclaim_numberNull() {
                return this.IsNull(this.tableView_MyCustomer.claim_numberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setclaim_numberNull() {
                this[this.tableView_MyCustomer.claim_numberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isrepair_order_identifierNull() {
                return this.IsNull(this.tableView_MyCustomer.repair_order_identifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setrepair_order_identifierNull() {
                this[this.tableView_MyCustomer.repair_order_identifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isagent_nameNull() {
                return this.IsNull(this.tableView_MyCustomer.agent_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setagent_nameNull() {
                this[this.tableView_MyCustomer.agent_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_nameNull() {
                return this.IsNull(this.tableView_MyCustomer.company_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_nameNull() {
                this[this.tableView_MyCustomer.company_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnet_total_amountNull() {
                return this.IsNull(this.tableView_MyCustomer.net_total_amountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnet_total_amountNull() {
                this[this.tableView_MyCustomer.net_total_amountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isestimate_file_identifierNull() {
                return this.IsNull(this.tableView_MyCustomer.estimate_file_identifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setestimate_file_identifierNull() {
                this[this.tableView_MyCustomer.estimate_file_identifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscreateddateNull() {
                return this.IsNull(this.tableView_MyCustomer.createddateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcreateddateNull() {
                this[this.tableView_MyCustomer.createddateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispush_notification_device_idNull() {
                return this.IsNull(this.tableView_MyCustomer.push_notification_device_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpush_notification_device_idNull() {
                this[this.tableView_MyCustomer.push_notification_device_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleStatusNull() {
                return this.IsNull(this.tableView_MyCustomer.VehicleStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleStatusNull() {
                this[this.tableView_MyCustomer.VehicleStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfirst_nameNull() {
                return this.IsNull(this.tableView_MyCustomer.first_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfirst_nameNull() {
                this[this.tableView_MyCustomer.first_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Islast_nameNull() {
                return this.IsNull(this.tableView_MyCustomer.last_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setlast_nameNull() {
                this[this.tableView_MyCustomer.last_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszipNull() {
                return this.IsNull(this.tableView_MyCustomer.zipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzipNull() {
                this[this.tableView_MyCustomer.zipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeliveryDateNull() {
                return this.IsNull(this.tableView_MyCustomer.DeliveryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeliveryDateNull() {
                this[this.tableView_MyCustomer.DeliveryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvehicle_idNull() {
                return this.IsNull(this.tableView_MyCustomer.vehicle_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvehicle_idNull() {
                this[this.tableView_MyCustomer.vehicle_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableView_MyCustomer.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableView_MyCustomer.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ScheduledUsersRow : global::System.Data.DataRow {
            
            private ScheduledUsersDataTable tableScheduledUsers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ScheduledUsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableScheduledUsers = ((ScheduledUsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int scheduled_users_id {
                get {
                    return ((int)(this[this.tableScheduledUsers.scheduled_users_idColumn]));
                }
                set {
                    this[this.tableScheduledUsers.scheduled_users_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableScheduledUsers.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'ScheduledUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduledUsers.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime send_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableScheduledUsers.send_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'send_date\' in table \'ScheduledUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduledUsers.send_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableScheduledUsers.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'ScheduledUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduledUsers.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int frequency_id {
                get {
                    try {
                        return ((int)(this[this.tableScheduledUsers.frequency_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'frequency_id\' in table \'ScheduledUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduledUsers.frequency_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isMailSent {
                get {
                    try {
                        return ((bool)(this[this.tableScheduledUsers.isMailSentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isMailSent\' in table \'ScheduledUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduledUsers.isMailSentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isSmsSent {
                get {
                    try {
                        return ((bool)(this[this.tableScheduledUsers.isSmsSentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isSmsSent\' in table \'ScheduledUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableScheduledUsers.isSmsSentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow BodyShopRow {
                get {
                    return ((BodyShopRow)(this.GetParentRow(this.Table.ParentRelations["FK_ScheduledUsers_BodyShop"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ScheduledUsers_BodyShop"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableScheduledUsers.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableScheduledUsers.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issend_dateNull() {
                return this.IsNull(this.tableScheduledUsers.send_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsend_dateNull() {
                this[this.tableScheduledUsers.send_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableScheduledUsers.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableScheduledUsers.shop_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfrequency_idNull() {
                return this.IsNull(this.tableScheduledUsers.frequency_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfrequency_idNull() {
                this[this.tableScheduledUsers.frequency_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisMailSentNull() {
                return this.IsNull(this.tableScheduledUsers.isMailSentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisMailSentNull() {
                this[this.tableScheduledUsers.isMailSentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisSmsSentNull() {
                return this.IsNull(this.tableScheduledUsers.isSmsSentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisSmsSentNull() {
                this[this.tableScheduledUsers.isSmsSentColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ReocurringCampaignUsersRow : global::System.Data.DataRow {
            
            private ReocurringCampaignUsersDataTable tableReocurringCampaignUsers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ReocurringCampaignUsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableReocurringCampaignUsers = ((ReocurringCampaignUsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int reocurring_campaign_user_id {
                get {
                    return ((int)(this[this.tableReocurringCampaignUsers.reocurring_campaign_user_idColumn]));
                }
                set {
                    this[this.tableReocurringCampaignUsers.reocurring_campaign_user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    try {
                        return ((int)(this[this.tableReocurringCampaignUsers.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime delivered_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableReocurringCampaignUsers.delivered_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'delivered_date\' in table \'ReocurringCampaignUsers\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.delivered_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isMailSent {
                get {
                    try {
                        return ((bool)(this[this.tableReocurringCampaignUsers.isMailSentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isMailSent\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.isMailSentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableReocurringCampaignUsers.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int frequency_id {
                get {
                    try {
                        return ((int)(this[this.tableReocurringCampaignUsers.frequency_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'frequency_id\' in table \'ReocurringCampaignUsers\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.frequency_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string first_name {
                get {
                    try {
                        return ((string)(this[this.tableReocurringCampaignUsers.first_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'first_name\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.first_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableReocurringCampaignUsers.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isSmsSent {
                get {
                    try {
                        return ((bool)(this[this.tableReocurringCampaignUsers.isSmsSentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isSmsSent\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.isSmsSentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableReocurringCampaignUsers.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string username {
                get {
                    try {
                        return ((string)(this[this.tableReocurringCampaignUsers.usernameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'username\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.usernameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_id {
                get {
                    try {
                        return ((int)(this[this.tableReocurringCampaignUsers.vehicle_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vehicle_id\' in table \'ReocurringCampaignUsers\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int email_template_id {
                get {
                    try {
                        return ((int)(this[this.tableReocurringCampaignUsers.email_template_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email_template_id\' in table \'ReocurringCampaignUsers\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableReocurringCampaignUsers.email_template_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_ReocurringCampaignUsers_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ReocurringCampaignUsers_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FrequencyRow FrequencyRow {
                get {
                    return ((FrequencyRow)(this.GetParentRow(this.Table.ParentRelations["FK_ReocurringCampaignUsers_Frequency"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ReocurringCampaignUsers_Frequency"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow BodyShopRow {
                get {
                    return ((BodyShopRow)(this.GetParentRow(this.Table.ParentRelations["FK_ReocurringCampaignUsers_BodyShop"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ReocurringCampaignUsers_BodyShop"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tableReocurringCampaignUsers.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isdelivered_dateNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.delivered_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setdelivered_dateNull() {
                this[this.tableReocurringCampaignUsers.delivered_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisMailSentNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.isMailSentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisMailSentNull() {
                this[this.tableReocurringCampaignUsers.isMailSentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableReocurringCampaignUsers.shop_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfrequency_idNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.frequency_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfrequency_idNull() {
                this[this.tableReocurringCampaignUsers.frequency_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isfirst_nameNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.first_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setfirst_nameNull() {
                this[this.tableReocurringCampaignUsers.first_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableReocurringCampaignUsers.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisSmsSentNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.isSmsSentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisSmsSentNull() {
                this[this.tableReocurringCampaignUsers.isSmsSentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableReocurringCampaignUsers.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsusernameNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.usernameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetusernameNull() {
                this[this.tableReocurringCampaignUsers.usernameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isvehicle_idNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.vehicle_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setvehicle_idNull() {
                this[this.tableReocurringCampaignUsers.vehicle_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isemail_template_idNull() {
                return this.IsNull(this.tableReocurringCampaignUsers.email_template_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setemail_template_idNull() {
                this[this.tableReocurringCampaignUsers.email_template_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FrequencyRow : global::System.Data.DataRow {
            
            private FrequencyDataTable tableFrequency;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FrequencyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFrequency = ((FrequencyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int frequency_id {
                get {
                    return ((int)(this[this.tableFrequency.frequency_idColumn]));
                }
                set {
                    this[this.tableFrequency.frequency_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string frequency {
                get {
                    try {
                        return ((string)(this[this.tableFrequency.frequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'frequency\' in table \'Frequency\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFrequency.frequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int days {
                get {
                    try {
                        return ((int)(this[this.tableFrequency.daysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'days\' in table \'Frequency\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFrequency.daysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfrequencyNull() {
                return this.IsNull(this.tableFrequency.frequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfrequencyNull() {
                this[this.tableFrequency.frequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdaysNull() {
                return this.IsNull(this.tableFrequency.daysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdaysNull() {
                this[this.tableFrequency.daysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRow[] GetReocurringCampaignUsersRows() {
                if ((this.Table.ChildRelations["FK_ReocurringCampaignUsers_Frequency"] == null)) {
                    return new ReocurringCampaignUsersRow[0];
                }
                else {
                    return ((ReocurringCampaignUsersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ReocurringCampaignUsers_Frequency"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AIManageRecurringActivityRow : global::System.Data.DataRow {
            
            private AIManageRecurringActivityDataTable tableAIManageRecurringActivity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AIManageRecurringActivityRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAIManageRecurringActivity = ((AIManageRecurringActivityDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableAIManageRecurringActivity.IdColumn]));
                }
                set {
                    this[this.tableAIManageRecurringActivity.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShopId {
                get {
                    return ((int)(this[this.tableAIManageRecurringActivity.ShopIdColumn]));
                }
                set {
                    this[this.tableAIManageRecurringActivity.ShopIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UserId {
                get {
                    return ((int)(this[this.tableAIManageRecurringActivity.UserIdColumn]));
                }
                set {
                    this[this.tableAIManageRecurringActivity.UserIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeliveryDate {
                get {
                    return ((global::System.DateTime)(this[this.tableAIManageRecurringActivity.DeliveryDateColumn]));
                }
                set {
                    this[this.tableAIManageRecurringActivity.DeliveryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProcessed {
                get {
                    try {
                        return ((bool)(this[this.tableAIManageRecurringActivity.IsProcessedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsProcessed\' in table \'AIManageRecurringActivity\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableAIManageRecurringActivity.IsProcessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ProcessedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAIManageRecurringActivity.ProcessedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcessedDate\' in table \'AIManageRecurringActivity\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableAIManageRecurringActivity.ProcessedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsProcessedNull() {
                return this.IsNull(this.tableAIManageRecurringActivity.IsProcessedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsProcessedNull() {
                this[this.tableAIManageRecurringActivity.IsProcessedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProcessedDateNull() {
                return this.IsNull(this.tableAIManageRecurringActivity.ProcessedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProcessedDateNull() {
                this[this.tableAIManageRecurringActivity.ProcessedDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class BodyShopRow : global::System.Data.DataRow {
            
            private BodyShopDataTable tableBodyShop;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal BodyShopRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBodyShop = ((BodyShopDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    return ((int)(this[this.tableBodyShop.shop_idColumn]));
                }
                set {
                    this[this.tableBodyShop.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string shop_name {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.shop_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_name\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.shop_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address1 {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address1\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string address2 {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address2\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double latitude {
                get {
                    try {
                        return ((double)(this[this.tableBodyShop.latitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'latitude\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.latitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double longitude {
                get {
                    try {
                        return ((double)(this[this.tableBodyShop.longitudeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'longitude\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.longitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ratings {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop.ratingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ratings\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ratingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string city {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.cityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'city\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.cityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string state {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.stateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'state\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.stateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] image_attached {
                get {
                    try {
                        return ((byte[])(this[this.tableBodyShop.image_attachedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'image_attached\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.image_attachedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string zip {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.zipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'zip\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.zipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string phone {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.phoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phone\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.phoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string fax {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.faxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fax\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.faxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string website {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.websiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'website\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.websiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string business_license {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.business_licenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'business_license\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.business_licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string epa_license {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.epa_licenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'epa_license\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.epa_licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string bar_license {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.bar_licenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bar_license\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.bar_licenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string network_name {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.network_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'network_name\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.network_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string certification_vehicles {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.certification_vehiclesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certification_vehicles\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.certification_vehiclesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string third_party_providers {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.third_party_providersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'third_party_providers\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.third_party_providersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int positive_ratings {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop.positive_ratingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'positive_ratings\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.positive_ratingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int negative_ratings {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop.negative_ratingsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'negative_ratings\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.negative_ratingsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string manager {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.managerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'manager\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.managerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string system_admin {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.system_adminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'system_admin\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.system_adminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string portal_admin_password {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.portal_admin_passwordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'portal_admin_password\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.portal_admin_passwordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string company_tag_line {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.company_tag_lineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'company_tag_line\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.company_tag_lineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string owner {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ownerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'owner\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ownerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int noPremierShop {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop.noPremierShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noPremierShop\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.noPremierShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int noHelpSelection {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop.noHelpSelectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'noHelpSelection\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.noHelpSelectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isPremierShop {
                get {
                    try {
                        return ((bool)(this[this.tableBodyShop.isPremierShopColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isPremierShop\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.isPremierShopColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string image_path {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.image_pathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'image_path\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.image_pathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int messageCount {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop.messageCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'messageCount\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.messageCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int availableMessages {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop.availableMessagesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'availableMessages\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.availableMessagesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime expirationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBodyShop.expirationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'expirationDate\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.expirationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime startDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBodyShop.startDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'startDate\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.startDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isShow {
                get {
                    try {
                        return ((bool)(this[this.tableBodyShop.isShowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isShow\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.isShowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string commentsfrequency {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.commentsfrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commentsfrequency\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.commentsfrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool displaycommentonswebapp {
                get {
                    try {
                        return ((bool)(this[this.tableBodyShop.displaycommentonswebappColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'displaycommentonswebapp\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.displaycommentonswebappColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int subscription_reminder_day {
                get {
                    try {
                        return ((int)(this[this.tableBodyShop.subscription_reminder_dayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'subscription_reminder_day\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.subscription_reminder_dayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool displaypromoonwebpage {
                get {
                    try {
                        return ((bool)(this[this.tableBodyShop.displaypromoonwebpageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'displaypromoonwebpage\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.displaypromoonwebpageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool applyemailtemplate {
                get {
                    try {
                        return ((bool)(this[this.tableBodyShop.applyemailtemplateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'applyemailtemplate\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.applyemailtemplateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isRcintegrationapproved {
                get {
                    try {
                        return ((bool)(this[this.tableBodyShop.isRcintegrationapprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isRcintegrationapproved\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.isRcintegrationapprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumerConsentApprovedForEmail {
                get {
                    try {
                        return ((bool)(this[this.tableBodyShop.IsConsumerConsentApprovedForEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsConsumerConsentApprovedForEmail\' in table \'BodyShop\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.IsConsumerConsentApprovedForEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumerConsentApprovedForSMS {
                get {
                    try {
                        return ((bool)(this[this.tableBodyShop.IsConsumerConsentApprovedForSMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsConsumerConsentApprovedForSMS\' in table \'BodyShop\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.IsConsumerConsentApprovedForSMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ConsumerConsentApprovedDateForEmail {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBodyShop.ConsumerConsentApprovedDateForEmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumerConsentApprovedDateForEmail\' in table \'BodyShop\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ConsumerConsentApprovedDateForEmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ConsumerConsentApprovedDateForSMS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBodyShop.ConsumerConsentApprovedDateForSMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsumerConsentApprovedDateForSMS\' in table \'BodyShop\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ConsumerConsentApprovedDateForSMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DonloadKeywords {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.DonloadKeywordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DonloadKeywords\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.DonloadKeywordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DownloadDescription {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.DownloadDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DownloadDescription\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.DownloadDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DownloadTitle {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.DownloadTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DownloadTitle\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.DownloadTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialPromotionKeywords {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.SpecialPromotionKeywordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialPromotionKeywords\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.SpecialPromotionKeywordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialPromotionDescription {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.SpecialPromotionDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialPromotionDescription\' in table \'BodyShop\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBodyShop.SpecialPromotionDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SpecialPromotionTitle {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.SpecialPromotionTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialPromotionTitle\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.SpecialPromotionTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduleAppointmentKeywords {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ScheduleAppointmentKeywordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleAppointmentKeywords\' in table \'BodyShop\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ScheduleAppointmentKeywordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduleAppointmentDescription {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ScheduleAppointmentDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleAppointmentDescription\' in table \'BodyShop\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ScheduleAppointmentDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ScheduleAppointmentTitle {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ScheduleAppointmentTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ScheduleAppointmentTitle\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ScheduleAppointmentTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OnlineEstimateKeywords {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.OnlineEstimateKeywordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OnlineEstimateKeywords\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.OnlineEstimateKeywordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OnlineEstimateDescription {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.OnlineEstimateDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OnlineEstimateDescription\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.OnlineEstimateDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OnlineEstimateTitle {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.OnlineEstimateTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OnlineEstimateTitle\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.OnlineEstimateTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VehicleStatusKeywords {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.VehicleStatusKeywordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleStatusKeywords\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.VehicleStatusKeywordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VehicleStatusDescription {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.VehicleStatusDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleStatusDescription\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.VehicleStatusDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VehicleStatusTitle {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.VehicleStatusTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VehicleStatusTitle\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.VehicleStatusTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RentalCarCompanyPageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.RentalCarCompanyPageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentalCarCompanyPageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.RentalCarCompanyPageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TowingCompanyPageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.TowingCompanyPageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TowingCompanyPageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.TowingCompanyPageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopNameBackColor {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopNameBackColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopNameBackColor\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopNameBackColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopNameFontColor {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopNameFontColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopNameFontColor\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopNameFontColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SendMessageKeywords {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.SendMessageKeywordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SendMessageKeywords\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.SendMessageKeywordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SendMessageDescription {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.SendMessageDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SendMessageDescription\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.SendMessageDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SendMessageTitle {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.SendMessageTitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SendMessageTitle\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.SendMessageTitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopBanerImage5 {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopBanerImage5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopBanerImage5\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopBanerImage5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopBanerImage4 {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopBanerImage4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopBanerImage4\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopBanerImage4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopBanerImage3 {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopBanerImage3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopBanerImage3\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopBanerImage3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopBanerImage2 {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopBanerImage2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopBanerImage2\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopBanerImage2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SetBannerBackgroundColor {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.SetBannerBackgroundColorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SetBannerBackgroundColor\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.SetBannerBackgroundColorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TwitterPageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.TwitterPageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TwitterPageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.TwitterPageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstagramPageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.InstagramPageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InstagramPageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.InstagramPageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GooglePlusPageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.GooglePlusPageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GooglePlusPageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.GooglePlusPageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PinterestPageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.PinterestPageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PinterestPageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.PinterestPageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YouTubePageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.YouTubePageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'YouTubePageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.YouTubePageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LinkedInPageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.LinkedInPageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LinkedInPageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.LinkedInPageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FacebookPageUrl {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.FacebookPageUrlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FacebookPageUrl\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.FacebookPageUrlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopBannerAlternateText {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopBannerAlternateTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopBannerAlternateText\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopBannerAlternateTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopBanner {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopBannerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopBanner\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopBannerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopLogoAlternateText {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopLogoAlternateTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopLogoAlternateText\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopLogoAlternateTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Keyword {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.KeywordColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Keyword\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.KeywordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ShopDescription {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.ShopDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopDescription\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.ShopDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string History {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.HistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'History\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.HistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Speciality {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.SpecialityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Speciality\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.SpecialityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string content {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.contentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'content\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.contentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AccessToken {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.AccessTokenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessToken\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.AccessTokenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PageID {
                get {
                    try {
                        return ((string)(this[this.tableBodyShop.PageIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PageID\' in table \'BodyShop\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableBodyShop.PageIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_nameNull() {
                return this.IsNull(this.tableBodyShop.shop_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_nameNull() {
                this[this.tableBodyShop.shop_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress1Null() {
                return this.IsNull(this.tableBodyShop.address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress1Null() {
                this[this.tableBodyShop.address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isaddress2Null() {
                return this.IsNull(this.tableBodyShop.address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setaddress2Null() {
                this[this.tableBodyShop.address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslatitudeNull() {
                return this.IsNull(this.tableBodyShop.latitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlatitudeNull() {
                this[this.tableBodyShop.latitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IslongitudeNull() {
                return this.IsNull(this.tableBodyShop.longitudeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetlongitudeNull() {
                this[this.tableBodyShop.longitudeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsratingsNull() {
                return this.IsNull(this.tableBodyShop.ratingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetratingsNull() {
                this[this.tableBodyShop.ratingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscityNull() {
                return this.IsNull(this.tableBodyShop.cityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcityNull() {
                this[this.tableBodyShop.cityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstateNull() {
                return this.IsNull(this.tableBodyShop.stateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstateNull() {
                this[this.tableBodyShop.stateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isimage_attachedNull() {
                return this.IsNull(this.tableBodyShop.image_attachedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setimage_attachedNull() {
                this[this.tableBodyShop.image_attachedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IszipNull() {
                return this.IsNull(this.tableBodyShop.zipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetzipNull() {
                this[this.tableBodyShop.zipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsphoneNull() {
                return this.IsNull(this.tableBodyShop.phoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetphoneNull() {
                this[this.tableBodyShop.phoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsfaxNull() {
                return this.IsNull(this.tableBodyShop.faxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetfaxNull() {
                this[this.tableBodyShop.faxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tableBodyShop.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tableBodyShop.emailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IswebsiteNull() {
                return this.IsNull(this.tableBodyShop.websiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetwebsiteNull() {
                this[this.tableBodyShop.websiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbusiness_licenseNull() {
                return this.IsNull(this.tableBodyShop.business_licenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbusiness_licenseNull() {
                this[this.tableBodyShop.business_licenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isepa_licenseNull() {
                return this.IsNull(this.tableBodyShop.epa_licenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setepa_licenseNull() {
                this[this.tableBodyShop.epa_licenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isbar_licenseNull() {
                return this.IsNull(this.tableBodyShop.bar_licenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setbar_licenseNull() {
                this[this.tableBodyShop.bar_licenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnetwork_nameNull() {
                return this.IsNull(this.tableBodyShop.network_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnetwork_nameNull() {
                this[this.tableBodyShop.network_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscertification_vehiclesNull() {
                return this.IsNull(this.tableBodyShop.certification_vehiclesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcertification_vehiclesNull() {
                this[this.tableBodyShop.certification_vehiclesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isthird_party_providersNull() {
                return this.IsNull(this.tableBodyShop.third_party_providersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setthird_party_providersNull() {
                this[this.tableBodyShop.third_party_providersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Ispositive_ratingsNull() {
                return this.IsNull(this.tableBodyShop.positive_ratingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setpositive_ratingsNull() {
                this[this.tableBodyShop.positive_ratingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isnegative_ratingsNull() {
                return this.IsNull(this.tableBodyShop.negative_ratingsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setnegative_ratingsNull() {
                this[this.tableBodyShop.negative_ratingsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmanagerNull() {
                return this.IsNull(this.tableBodyShop.managerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmanagerNull() {
                this[this.tableBodyShop.managerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issystem_adminNull() {
                return this.IsNull(this.tableBodyShop.system_adminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsystem_adminNull() {
                this[this.tableBodyShop.system_adminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isportal_admin_passwordNull() {
                return this.IsNull(this.tableBodyShop.portal_admin_passwordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setportal_admin_passwordNull() {
                this[this.tableBodyShop.portal_admin_passwordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Iscompany_tag_lineNull() {
                return this.IsNull(this.tableBodyShop.company_tag_lineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setcompany_tag_lineNull() {
                this[this.tableBodyShop.company_tag_lineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsownerNull() {
                return this.IsNull(this.tableBodyShop.ownerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetownerNull() {
                this[this.tableBodyShop.ownerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoPremierShopNull() {
                return this.IsNull(this.tableBodyShop.noPremierShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoPremierShopNull() {
                this[this.tableBodyShop.noPremierShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnoHelpSelectionNull() {
                return this.IsNull(this.tableBodyShop.noHelpSelectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnoHelpSelectionNull() {
                this[this.tableBodyShop.noHelpSelectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisPremierShopNull() {
                return this.IsNull(this.tableBodyShop.isPremierShopColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisPremierShopNull() {
                this[this.tableBodyShop.isPremierShopColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isimage_pathNull() {
                return this.IsNull(this.tableBodyShop.image_pathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setimage_pathNull() {
                this[this.tableBodyShop.image_pathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsmessageCountNull() {
                return this.IsNull(this.tableBodyShop.messageCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetmessageCountNull() {
                this[this.tableBodyShop.messageCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsavailableMessagesNull() {
                return this.IsNull(this.tableBodyShop.availableMessagesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetavailableMessagesNull() {
                this[this.tableBodyShop.availableMessagesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsexpirationDateNull() {
                return this.IsNull(this.tableBodyShop.expirationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetexpirationDateNull() {
                this[this.tableBodyShop.expirationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsstartDateNull() {
                return this.IsNull(this.tableBodyShop.startDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetstartDateNull() {
                this[this.tableBodyShop.startDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisShowNull() {
                return this.IsNull(this.tableBodyShop.isShowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisShowNull() {
                this[this.tableBodyShop.isShowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscommentsfrequencyNull() {
                return this.IsNull(this.tableBodyShop.commentsfrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcommentsfrequencyNull() {
                this[this.tableBodyShop.commentsfrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdisplaycommentonswebappNull() {
                return this.IsNull(this.tableBodyShop.displaycommentonswebappColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdisplaycommentonswebappNull() {
                this[this.tableBodyShop.displaycommentonswebappColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issubscription_reminder_dayNull() {
                return this.IsNull(this.tableBodyShop.subscription_reminder_dayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsubscription_reminder_dayNull() {
                this[this.tableBodyShop.subscription_reminder_dayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdisplaypromoonwebpageNull() {
                return this.IsNull(this.tableBodyShop.displaypromoonwebpageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdisplaypromoonwebpageNull() {
                this[this.tableBodyShop.displaypromoonwebpageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsapplyemailtemplateNull() {
                return this.IsNull(this.tableBodyShop.applyemailtemplateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetapplyemailtemplateNull() {
                this[this.tableBodyShop.applyemailtemplateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsisRcintegrationapprovedNull() {
                return this.IsNull(this.tableBodyShop.isRcintegrationapprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetisRcintegrationapprovedNull() {
                this[this.tableBodyShop.isRcintegrationapprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsConsumerConsentApprovedForEmailNull() {
                return this.IsNull(this.tableBodyShop.IsConsumerConsentApprovedForEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsConsumerConsentApprovedForEmailNull() {
                this[this.tableBodyShop.IsConsumerConsentApprovedForEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsConsumerConsentApprovedForSMSNull() {
                return this.IsNull(this.tableBodyShop.IsConsumerConsentApprovedForSMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsConsumerConsentApprovedForSMSNull() {
                this[this.tableBodyShop.IsConsumerConsentApprovedForSMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumerConsentApprovedDateForEmailNull() {
                return this.IsNull(this.tableBodyShop.ConsumerConsentApprovedDateForEmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumerConsentApprovedDateForEmailNull() {
                this[this.tableBodyShop.ConsumerConsentApprovedDateForEmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConsumerConsentApprovedDateForSMSNull() {
                return this.IsNull(this.tableBodyShop.ConsumerConsentApprovedDateForSMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConsumerConsentApprovedDateForSMSNull() {
                this[this.tableBodyShop.ConsumerConsentApprovedDateForSMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDonloadKeywordsNull() {
                return this.IsNull(this.tableBodyShop.DonloadKeywordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDonloadKeywordsNull() {
                this[this.tableBodyShop.DonloadKeywordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownloadDescriptionNull() {
                return this.IsNull(this.tableBodyShop.DownloadDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownloadDescriptionNull() {
                this[this.tableBodyShop.DownloadDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDownloadTitleNull() {
                return this.IsNull(this.tableBodyShop.DownloadTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDownloadTitleNull() {
                this[this.tableBodyShop.DownloadTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialPromotionKeywordsNull() {
                return this.IsNull(this.tableBodyShop.SpecialPromotionKeywordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialPromotionKeywordsNull() {
                this[this.tableBodyShop.SpecialPromotionKeywordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialPromotionDescriptionNull() {
                return this.IsNull(this.tableBodyShop.SpecialPromotionDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialPromotionDescriptionNull() {
                this[this.tableBodyShop.SpecialPromotionDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialPromotionTitleNull() {
                return this.IsNull(this.tableBodyShop.SpecialPromotionTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialPromotionTitleNull() {
                this[this.tableBodyShop.SpecialPromotionTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleAppointmentKeywordsNull() {
                return this.IsNull(this.tableBodyShop.ScheduleAppointmentKeywordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleAppointmentKeywordsNull() {
                this[this.tableBodyShop.ScheduleAppointmentKeywordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleAppointmentDescriptionNull() {
                return this.IsNull(this.tableBodyShop.ScheduleAppointmentDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleAppointmentDescriptionNull() {
                this[this.tableBodyShop.ScheduleAppointmentDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsScheduleAppointmentTitleNull() {
                return this.IsNull(this.tableBodyShop.ScheduleAppointmentTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetScheduleAppointmentTitleNull() {
                this[this.tableBodyShop.ScheduleAppointmentTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineEstimateKeywordsNull() {
                return this.IsNull(this.tableBodyShop.OnlineEstimateKeywordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineEstimateKeywordsNull() {
                this[this.tableBodyShop.OnlineEstimateKeywordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineEstimateDescriptionNull() {
                return this.IsNull(this.tableBodyShop.OnlineEstimateDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineEstimateDescriptionNull() {
                this[this.tableBodyShop.OnlineEstimateDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOnlineEstimateTitleNull() {
                return this.IsNull(this.tableBodyShop.OnlineEstimateTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOnlineEstimateTitleNull() {
                this[this.tableBodyShop.OnlineEstimateTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleStatusKeywordsNull() {
                return this.IsNull(this.tableBodyShop.VehicleStatusKeywordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleStatusKeywordsNull() {
                this[this.tableBodyShop.VehicleStatusKeywordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleStatusDescriptionNull() {
                return this.IsNull(this.tableBodyShop.VehicleStatusDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleStatusDescriptionNull() {
                this[this.tableBodyShop.VehicleStatusDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVehicleStatusTitleNull() {
                return this.IsNull(this.tableBodyShop.VehicleStatusTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVehicleStatusTitleNull() {
                this[this.tableBodyShop.VehicleStatusTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRentalCarCompanyPageUrlNull() {
                return this.IsNull(this.tableBodyShop.RentalCarCompanyPageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRentalCarCompanyPageUrlNull() {
                this[this.tableBodyShop.RentalCarCompanyPageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTowingCompanyPageUrlNull() {
                return this.IsNull(this.tableBodyShop.TowingCompanyPageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTowingCompanyPageUrlNull() {
                this[this.tableBodyShop.TowingCompanyPageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopNameBackColorNull() {
                return this.IsNull(this.tableBodyShop.ShopNameBackColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopNameBackColorNull() {
                this[this.tableBodyShop.ShopNameBackColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopNameFontColorNull() {
                return this.IsNull(this.tableBodyShop.ShopNameFontColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopNameFontColorNull() {
                this[this.tableBodyShop.ShopNameFontColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSendMessageKeywordsNull() {
                return this.IsNull(this.tableBodyShop.SendMessageKeywordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSendMessageKeywordsNull() {
                this[this.tableBodyShop.SendMessageKeywordsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSendMessageDescriptionNull() {
                return this.IsNull(this.tableBodyShop.SendMessageDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSendMessageDescriptionNull() {
                this[this.tableBodyShop.SendMessageDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSendMessageTitleNull() {
                return this.IsNull(this.tableBodyShop.SendMessageTitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSendMessageTitleNull() {
                this[this.tableBodyShop.SendMessageTitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopBanerImage5Null() {
                return this.IsNull(this.tableBodyShop.ShopBanerImage5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopBanerImage5Null() {
                this[this.tableBodyShop.ShopBanerImage5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopBanerImage4Null() {
                return this.IsNull(this.tableBodyShop.ShopBanerImage4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopBanerImage4Null() {
                this[this.tableBodyShop.ShopBanerImage4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopBanerImage3Null() {
                return this.IsNull(this.tableBodyShop.ShopBanerImage3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopBanerImage3Null() {
                this[this.tableBodyShop.ShopBanerImage3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopBanerImage2Null() {
                return this.IsNull(this.tableBodyShop.ShopBanerImage2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopBanerImage2Null() {
                this[this.tableBodyShop.ShopBanerImage2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSetBannerBackgroundColorNull() {
                return this.IsNull(this.tableBodyShop.SetBannerBackgroundColorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSetBannerBackgroundColorNull() {
                this[this.tableBodyShop.SetBannerBackgroundColorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTwitterPageUrlNull() {
                return this.IsNull(this.tableBodyShop.TwitterPageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTwitterPageUrlNull() {
                this[this.tableBodyShop.TwitterPageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInstagramPageUrlNull() {
                return this.IsNull(this.tableBodyShop.InstagramPageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInstagramPageUrlNull() {
                this[this.tableBodyShop.InstagramPageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGooglePlusPageUrlNull() {
                return this.IsNull(this.tableBodyShop.GooglePlusPageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGooglePlusPageUrlNull() {
                this[this.tableBodyShop.GooglePlusPageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPinterestPageUrlNull() {
                return this.IsNull(this.tableBodyShop.PinterestPageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPinterestPageUrlNull() {
                this[this.tableBodyShop.PinterestPageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYouTubePageUrlNull() {
                return this.IsNull(this.tableBodyShop.YouTubePageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYouTubePageUrlNull() {
                this[this.tableBodyShop.YouTubePageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLinkedInPageUrlNull() {
                return this.IsNull(this.tableBodyShop.LinkedInPageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLinkedInPageUrlNull() {
                this[this.tableBodyShop.LinkedInPageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFacebookPageUrlNull() {
                return this.IsNull(this.tableBodyShop.FacebookPageUrlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFacebookPageUrlNull() {
                this[this.tableBodyShop.FacebookPageUrlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopBannerAlternateTextNull() {
                return this.IsNull(this.tableBodyShop.ShopBannerAlternateTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopBannerAlternateTextNull() {
                this[this.tableBodyShop.ShopBannerAlternateTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopBannerNull() {
                return this.IsNull(this.tableBodyShop.ShopBannerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopBannerNull() {
                this[this.tableBodyShop.ShopBannerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopLogoAlternateTextNull() {
                return this.IsNull(this.tableBodyShop.ShopLogoAlternateTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopLogoAlternateTextNull() {
                this[this.tableBodyShop.ShopLogoAlternateTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKeywordNull() {
                return this.IsNull(this.tableBodyShop.KeywordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKeywordNull() {
                this[this.tableBodyShop.KeywordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopDescriptionNull() {
                return this.IsNull(this.tableBodyShop.ShopDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopDescriptionNull() {
                this[this.tableBodyShop.ShopDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTitleNull() {
                return this.IsNull(this.tableBodyShop.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTitleNull() {
                this[this.tableBodyShop.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHistoryNull() {
                return this.IsNull(this.tableBodyShop.HistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHistoryNull() {
                this[this.tableBodyShop.HistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecialityNull() {
                return this.IsNull(this.tableBodyShop.SpecialityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecialityNull() {
                this[this.tableBodyShop.SpecialityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IscontentNull() {
                return this.IsNull(this.tableBodyShop.contentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetcontentNull() {
                this[this.tableBodyShop.contentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessTokenNull() {
                return this.IsNull(this.tableBodyShop.AccessTokenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessTokenNull() {
                this[this.tableBodyShop.AccessTokenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPageIDNull() {
                return this.IsNull(this.tableBodyShop.PageIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPageIDNull() {
                this[this.tableBodyShop.PageIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopRow[] GetUser_PreferredShopRows() {
                if ((this.Table.ChildRelations["FK_UserPreferedShop_Shop"] == null)) {
                    return new User_PreferredShopRow[0];
                }
                else {
                    return ((User_PreferredShopRow[])(base.GetChildRows(this.Table.ChildRelations["FK_UserPreferedShop_Shop"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRow[] GetMarketingUsersRows() {
                if ((this.Table.ChildRelations["FK_MarketingUsers_BodyShop"] == null)) {
                    return new MarketingUsersRow[0];
                }
                else {
                    return ((MarketingUsersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_MarketingUsers_BodyShop"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryRow[] GetCommunicationHistoryRows() {
                if ((this.Table.ChildRelations["FK_CommunicationHistory_BodyShop"] == null)) {
                    return new CommunicationHistoryRow[0];
                }
                else {
                    return ((CommunicationHistoryRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CommunicationHistory_BodyShop"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginRow[] GetLoginRows() {
                if ((this.Table.ChildRelations["FK_Login_ShopID"] == null)) {
                    return new LoginRow[0];
                }
                else {
                    return ((LoginRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Login_ShopID"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScheduledUsersRow[] GetScheduledUsersRows() {
                if ((this.Table.ChildRelations["FK_ScheduledUsers_BodyShop"] == null)) {
                    return new ScheduledUsersRow[0];
                }
                else {
                    return ((ScheduledUsersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ScheduledUsers_BodyShop"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRow[] GetReocurringCampaignUsersRows() {
                if ((this.Table.ChildRelations["FK_ReocurringCampaignUsers_BodyShop"] == null)) {
                    return new ReocurringCampaignUsersRow[0];
                }
                else {
                    return ((ReocurringCampaignUsersRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ReocurringCampaignUsers_BodyShop"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleStatusRow[] GetVehicleStatusRows() {
                if ((this.Table.ChildRelations["FK_VehicleStatus_BodyShop"] == null)) {
                    return new VehicleStatusRow[0];
                }
                else {
                    return ((VehicleStatusRow[])(base.GetChildRows(this.Table.ChildRelations["FK_VehicleStatus_BodyShop"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConnectAPIRow[] GetConnectAPIRows() {
                if ((this.Table.ChildRelations["FK_BodyShop_ConnectApi"] == null)) {
                    return new ConnectAPIRow[0];
                }
                else {
                    return ((ConnectAPIRow[])(base.GetChildRows(this.Table.ChildRelations["FK_BodyShop_ConnectApi"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class VehicleStatusRow : global::System.Data.DataRow {
            
            private VehicleStatusDataTable tableVehicleStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal VehicleStatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVehicleStatus = ((VehicleStatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int VehicleStatusId {
                get {
                    return ((int)(this[this.tableVehicleStatus.VehicleStatusIdColumn]));
                }
                set {
                    this[this.tableVehicleStatus.VehicleStatusIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VehicleStatus {
                get {
                    return ((string)(this[this.tableVehicleStatus.VehicleStatusColumn]));
                }
                set {
                    this[this.tableVehicleStatus.VehicleStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Message {
                get {
                    try {
                        return ((string)(this[this.tableVehicleStatus.MessageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Message\' in table \'VehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleStatus.MessageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tableVehicleStatus.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'VehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleStatus.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int shop_id {
                get {
                    try {
                        return ((int)(this[this.tableVehicleStatus.shop_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'shop_id\' in table \'VehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleStatus.shop_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool SMS {
                get {
                    try {
                        return ((bool)(this[this.tableVehicleStatus.SMSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMS\' in table \'VehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleStatus.SMSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Email {
                get {
                    try {
                        return ((bool)(this[this.tableVehicleStatus.EmailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Email\' in table \'VehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleStatus.EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool MoveToMarketing {
                get {
                    try {
                        return ((bool)(this[this.tableVehicleStatus.MoveToMarketingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MoveToMarketing\' in table \'VehicleStatus\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicleStatus.MoveToMarketingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UpdatedVehicleStatusName {
                get {
                    try {
                        return ((string)(this[this.tableVehicleStatus.UpdatedVehicleStatusNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedVehicleStatusName\' in table \'VehicleStatus\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableVehicleStatus.UpdatedVehicleStatusNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow BodyShopRow {
                get {
                    return ((BodyShopRow)(this.GetParentRow(this.Table.ParentRelations["FK_VehicleStatus_BodyShop"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_VehicleStatus_BodyShop"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMessageNull() {
                return this.IsNull(this.tableVehicleStatus.MessageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMessageNull() {
                this[this.tableVehicleStatus.MessageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableVehicleStatus.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableVehicleStatus.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isshop_idNull() {
                return this.IsNull(this.tableVehicleStatus.shop_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setshop_idNull() {
                this[this.tableVehicleStatus.shop_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMSNull() {
                return this.IsNull(this.tableVehicleStatus.SMSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMSNull() {
                this[this.tableVehicleStatus.SMSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailNull() {
                return this.IsNull(this.tableVehicleStatus.EmailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEmailNull() {
                this[this.tableVehicleStatus.EmailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMoveToMarketingNull() {
                return this.IsNull(this.tableVehicleStatus.MoveToMarketingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMoveToMarketingNull() {
                this[this.tableVehicleStatus.MoveToMarketingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdatedVehicleStatusNameNull() {
                return this.IsNull(this.tableVehicleStatus.UpdatedVehicleStatusNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdatedVehicleStatusNameNull() {
                this[this.tableVehicleStatus.UpdatedVehicleStatusNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class AutoImporterShopsRow : global::System.Data.DataRow {
            
            private AutoImporterShopsDataTable tableAutoImporterShops;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal AutoImporterShopsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAutoImporterShops = ((AutoImporterShopsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableAutoImporterShops.IDColumn]));
                }
                set {
                    this[this.tableAutoImporterShops.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShopID {
                get {
                    try {
                        return ((int)(this[this.tableAutoImporterShops.ShopIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShopID\' in table \'AutoImporterShops\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoImporterShops.ShopIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SyncDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoImporterShops.SyncDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SyncDateTime\' in table \'AutoImporterShops\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoImporterShops.SyncDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEmailSend {
                get {
                    try {
                        return ((bool)(this[this.tableAutoImporterShops.IsEmailSendColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsEmailSend\' in table \'AutoImporterShops\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoImporterShops.IsEmailSendColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SendMailDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoImporterShops.SendMailDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SendMailDate\' in table \'AutoImporterShops\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoImporterShops.SendMailDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsShopIDNull() {
                return this.IsNull(this.tableAutoImporterShops.ShopIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetShopIDNull() {
                this[this.tableAutoImporterShops.ShopIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSyncDateTimeNull() {
                return this.IsNull(this.tableAutoImporterShops.SyncDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSyncDateTimeNull() {
                this[this.tableAutoImporterShops.SyncDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsEmailSendNull() {
                return this.IsNull(this.tableAutoImporterShops.IsEmailSendColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsEmailSendNull() {
                this[this.tableAutoImporterShops.IsEmailSendColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSendMailDateNull() {
                return this.IsNull(this.tableAutoImporterShops.SendMailDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSendMailDateNull() {
                this[this.tableAutoImporterShops.SendMailDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class User_Audit_TrailRow : global::System.Data.DataRow {
            
            private User_Audit_TrailDataTable tableUser_Audit_Trail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal User_Audit_TrailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUser_Audit_Trail = ((User_Audit_TrailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int id {
                get {
                    return ((int)(this[this.tableUser_Audit_Trail.idColumn]));
                }
                set {
                    this[this.tableUser_Audit_Trail.idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int user_id {
                get {
                    return ((int)(this[this.tableUser_Audit_Trail.user_idColumn]));
                }
                set {
                    this[this.tableUser_Audit_Trail.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_id {
                get {
                    return ((int)(this[this.tableUser_Audit_Trail.vehicle_idColumn]));
                }
                set {
                    this[this.tableUser_Audit_Trail.vehicle_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int vehicle_status_id {
                get {
                    return ((int)(this[this.tableUser_Audit_Trail.vehicle_status_idColumn]));
                }
                set {
                    this[this.tableUser_Audit_Trail.vehicle_status_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime last_updated {
                get {
                    return ((global::System.DateTime)(this[this.tableUser_Audit_Trail.last_updatedColumn]));
                }
                set {
                    this[this.tableUser_Audit_Trail.last_updatedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool isLastUnsoldStatus {
                get {
                    return ((bool)(this[this.tableUser_Audit_Trail.isLastUnsoldStatusColumn]));
                }
                set {
                    this[this.tableUser_Audit_Trail.isLastUnsoldStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow UserRow {
                get {
                    return ((UserRow)(this.GetParentRow(this.Table.ParentRelations["FK_User_Audit_Trail_User"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_User_Audit_Trail_User"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow VehicleInfoRow {
                get {
                    return ((VehicleInfoRow)(this.GetParentRow(this.Table.ParentRelations["FK_User_Audit_Trail_VehicleInfo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_User_Audit_Trail_VehicleInfo"]);
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ConnectAPIRow : global::System.Data.DataRow {
            
            private ConnectAPIDataTable tableConnectAPI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ConnectAPIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConnectAPI = ((ConnectAPIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Id {
                get {
                    return ((int)(this[this.tableConnectAPI.IdColumn]));
                }
                set {
                    this[this.tableConnectAPI.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ShopId {
                get {
                    return ((int)(this[this.tableConnectAPI.ShopIdColumn]));
                }
                set {
                    this[this.tableConnectAPI.ShopIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PartnerKey {
                get {
                    try {
                        return ((string)(this[this.tableConnectAPI.PartnerKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PartnerKey\' in table \'ConnectAPI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnectAPI.PartnerKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientKey {
                get {
                    try {
                        return ((string)(this[this.tableConnectAPI.ClientKeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientKey\' in table \'ConnectAPI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnectAPI.ClientKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableConnectAPI.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'ConnectAPI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnectAPI.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LastSyncDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableConnectAPI.LastSyncDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastSyncDate\' in table \'ConnectAPI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnectAPI.LastSyncDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableConnectAPI.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'ConnectAPI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnectAPI.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow BodyShopRow {
                get {
                    return ((BodyShopRow)(this.GetParentRow(this.Table.ParentRelations["FK_BodyShop_ConnectApi"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_BodyShop_ConnectApi"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPartnerKeyNull() {
                return this.IsNull(this.tableConnectAPI.PartnerKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPartnerKeyNull() {
                this[this.tableConnectAPI.PartnerKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientKeyNull() {
                return this.IsNull(this.tableConnectAPI.ClientKeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientKeyNull() {
                this[this.tableConnectAPI.ClientKeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableConnectAPI.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreatedDateNull() {
                this[this.tableConnectAPI.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLastSyncDateNull() {
                return this.IsNull(this.tableConnectAPI.LastSyncDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLastSyncDateNull() {
                this[this.tableConnectAPI.LastSyncDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFromDateNull() {
                return this.IsNull(this.tableConnectAPI.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFromDateNull() {
                this[this.tableConnectAPI.FromDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AccidentReportRowChangeEvent : global::System.EventArgs {
            
            private AccidentReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportRowChangeEvent(AccidentReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AccidentReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VehicleInfoRowChangeEvent : global::System.EventArgs {
            
            private VehicleInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRowChangeEvent(VehicleInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class InsuranceInformationRowChangeEvent : global::System.EventArgs {
            
            private InsuranceInformationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsuranceInformationRowChangeEvent(InsuranceInformationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public InsuranceInformationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MessageRowChangeEvent : global::System.EventArgs {
            
            private MessageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MessageRowChangeEvent(MessageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MessageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UserRowChangeEvent : global::System.EventArgs {
            
            private UserRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRowChangeEvent(UserRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class User_PreferredShopRowChangeEvent : global::System.EventArgs {
            
            private User_PreferredShopRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopRowChangeEvent(User_PreferredShopRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_PreferredShopRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ZipCodeRowChangeEvent : global::System.EventArgs {
            
            private ZipCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZipCodeRowChangeEvent(ZipCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ZipCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UnreadUsersFromRepairProspectRowChangeEvent : global::System.EventArgs {
            
            private UnreadUsersFromRepairProspectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UnreadUsersFromRepairProspectRowChangeEvent(UnreadUsersFromRepairProspectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UnreadUsersFromRepairProspectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DeletedUsersFromRepairProspectRowChangeEvent : global::System.EventArgs {
            
            private DeletedUsersFromRepairProspectRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeletedUsersFromRepairProspectRowChangeEvent(DeletedUsersFromRepairProspectRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DeletedUsersFromRepairProspectRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class MarketingUsersRowChangeEvent : global::System.EventArgs {
            
            private MarketingUsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRowChangeEvent(MarketingUsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public MarketingUsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SP_Search_InProcessUsersRowChangeEvent : global::System.EventArgs {
            
            private SP_Search_InProcessUsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_InProcessUsersRowChangeEvent(SP_Search_InProcessUsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_InProcessUsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SP_Search_EmailTextMarketingCentersRowChangeEvent : global::System.EventArgs {
            
            private SP_Search_EmailTextMarketingCentersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_EmailTextMarketingCentersRowChangeEvent(SP_Search_EmailTextMarketingCentersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SP_Search_EmailTextMarketingCentersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BodyShop_PrivateLabelRowChangeEvent : global::System.EventArgs {
            
            private BodyShop_PrivateLabelRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShop_PrivateLabelRowChangeEvent(BodyShop_PrivateLabelRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShop_PrivateLabelRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CampaignRowChangeEvent : global::System.EventArgs {
            
            private CampaignRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CampaignRowChangeEvent(CampaignRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CampaignRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CommunicationHistoryRowChangeEvent : global::System.EventArgs {
            
            private CommunicationHistoryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryRowChangeEvent(CommunicationHistoryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CommunicationHistoryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class GetShopIdsByZipCodeRowChangeEvent : global::System.EventArgs {
            
            private GetShopIdsByZipCodeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetShopIdsByZipCodeRowChangeEvent(GetShopIdsByZipCodeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public GetShopIdsByZipCodeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LoginRowChangeEvent : global::System.EventArgs {
            
            private LoginRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginRowChangeEvent(LoginRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LoginRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VehicleMediaLinkRowChangeEvent : global::System.EventArgs {
            
            private VehicleMediaLinkRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleMediaLinkRowChangeEvent(VehicleMediaLinkRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleMediaLinkRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class UserVehicleStatusRowChangeEvent : global::System.EventArgs {
            
            private UserVehicleStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusRowChangeEvent(UserVehicleStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UserVehicleStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_MyCustomerRowChangeEvent : global::System.EventArgs {
            
            private View_MyCustomerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_MyCustomerRowChangeEvent(View_MyCustomerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_MyCustomerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ScheduledUsersRowChangeEvent : global::System.EventArgs {
            
            private ScheduledUsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScheduledUsersRowChangeEvent(ScheduledUsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ScheduledUsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ReocurringCampaignUsersRowChangeEvent : global::System.EventArgs {
            
            private ReocurringCampaignUsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRowChangeEvent(ReocurringCampaignUsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ReocurringCampaignUsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FrequencyRowChangeEvent : global::System.EventArgs {
            
            private FrequencyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FrequencyRowChangeEvent(FrequencyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FrequencyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AIManageRecurringActivityRowChangeEvent : global::System.EventArgs {
            
            private AIManageRecurringActivityRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AIManageRecurringActivityRowChangeEvent(AIManageRecurringActivityRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AIManageRecurringActivityRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class BodyShopRowChangeEvent : global::System.EventArgs {
            
            private BodyShopRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRowChangeEvent(BodyShopRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public BodyShopRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class VehicleStatusRowChangeEvent : global::System.EventArgs {
            
            private VehicleStatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleStatusRowChangeEvent(VehicleStatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public VehicleStatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class AutoImporterShopsRowChangeEvent : global::System.EventArgs {
            
            private AutoImporterShopsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AutoImporterShopsRowChangeEvent(AutoImporterShopsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public AutoImporterShopsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class User_Audit_TrailRowChangeEvent : global::System.EventArgs {
            
            private User_Audit_TrailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailRowChangeEvent(User_Audit_TrailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public User_Audit_TrailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ConnectAPIRowChangeEvent : global::System.EventArgs {
            
            private ConnectAPIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConnectAPIRowChangeEvent(ConnectAPIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ConnectAPIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace SummitShopApp.DAL.SummitDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AccidentReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AccidentReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AccidentReport";
            tableMapping.ColumnMappings.Add("accident_id", "accident_id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("street", "street");
            tableMapping.ColumnMappings.Add("city", "city");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("description", "description");
            tableMapping.ColumnMappings.Add("driver_phone", "driver_phone");
            tableMapping.ColumnMappings.Add("driver_license_state_plate", "driver_license_state_plate");
            tableMapping.ColumnMappings.Add("driver_license_no", "driver_license_no");
            tableMapping.ColumnMappings.Add("driver_vehicle_type", "driver_vehicle_type");
            tableMapping.ColumnMappings.Add("insurance_company_name", "insurance_company_name");
            tableMapping.ColumnMappings.Add("insurance_policy_no", "insurance_policy_no");
            tableMapping.ColumnMappings.Add("police_office", "police_office");
            tableMapping.ColumnMappings.Add("police_report_no", "police_report_no");
            tableMapping.ColumnMappings.Add("witnesses", "witnesses");
            tableMapping.ColumnMappings.Add("witness_comments", "witness_comments");
            tableMapping.ColumnMappings.Add("misc_notes", "misc_notes");
            tableMapping.ColumnMappings.Add("image_attached", "image_attached");
            tableMapping.ColumnMappings.Add("message_id", "message_id");
            tableMapping.ColumnMappings.Add("image_name", "image_name");
            tableMapping.ColumnMappings.Add("driver_name", "driver_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [AccidentReport] WHERE (([accident_id] = @Original_accident_id) AND (" +
                "(@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) " +
                "AND ((@IsNull_street = 1 AND [street] IS NULL) OR ([street] = @Original_street))" +
                " AND ((@IsNull_city = 1 AND [city] IS NULL) OR ([city] = @Original_city)) AND ((" +
                "@IsNull_state = 1 AND [state] IS NULL) OR ([state] = @Original_state)) AND ((@Is" +
                "Null_description = 1 AND [description] IS NULL) OR ([description] = @Original_de" +
                "scription)) AND ((@IsNull_driver_phone = 1 AND [driver_phone] IS NULL) OR ([driv" +
                "er_phone] = @Original_driver_phone)) AND ((@IsNull_driver_license_state_plate = " +
                "1 AND [driver_license_state_plate] IS NULL) OR ([driver_license_state_plate] = @" +
                "Original_driver_license_state_plate)) AND ((@IsNull_driver_license_no = 1 AND [d" +
                "river_license_no] IS NULL) OR ([driver_license_no] = @Original_driver_license_no" +
                ")) AND ((@IsNull_driver_vehicle_type = 1 AND [driver_vehicle_type] IS NULL) OR (" +
                "[driver_vehicle_type] = @Original_driver_vehicle_type)) AND ((@IsNull_insurance_" +
                "company_name = 1 AND [insurance_company_name] IS NULL) OR ([insurance_company_na" +
                "me] = @Original_insurance_company_name)) AND ((@IsNull_insurance_policy_no = 1 A" +
                "ND [insurance_policy_no] IS NULL) OR ([insurance_policy_no] = @Original_insuranc" +
                "e_policy_no)) AND ((@IsNull_police_office = 1 AND [police_office] IS NULL) OR ([" +
                "police_office] = @Original_police_office)) AND ((@IsNull_police_report_no = 1 AN" +
                "D [police_report_no] IS NULL) OR ([police_report_no] = @Original_police_report_n" +
                "o)) AND ((@IsNull_witnesses = 1 AND [witnesses] IS NULL) OR ([witnesses] = @Orig" +
                "inal_witnesses)) AND ((@IsNull_witness_comments = 1 AND [witness_comments] IS NU" +
                "LL) OR ([witness_comments] = @Original_witness_comments)) AND ((@IsNull_misc_not" +
                "es = 1 AND [misc_notes] IS NULL) OR ([misc_notes] = @Original_misc_notes)) AND (" +
                "(@IsNull_image_attached = 1 AND [image_attached] IS NULL) OR ([image_attached] =" +
                " @Original_image_attached)) AND ((@IsNull_message_id = 1 AND [message_id] IS NUL" +
                "L) OR ([message_id] = @Original_message_id)) AND ((@IsNull_image_name = 1 AND [i" +
                "mage_name] IS NULL) OR ([image_name] = @Original_image_name)) AND ((@IsNull_driv" +
                "er_name = 1 AND [driver_name] IS NULL) OR ([driver_name] = @Original_driver_name" +
                ")))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accident_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accident_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_street", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "street", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_street", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "street", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_license_state_plate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_state_plate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_license_state_plate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_state_plate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_license_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_no", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_license_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_vehicle_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_vehicle_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_vehicle_type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_vehicle_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_insurance_company_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_company_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_insurance_company_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_company_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_insurance_policy_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_policy_no", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_insurance_policy_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_policy_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_police_office", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_office", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_police_office", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_office", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_police_report_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_report_no", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_police_report_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_report_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_witnesses", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witnesses", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_witnesses", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witnesses", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_witness_comments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witness_comments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_witness_comments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witness_comments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_misc_notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "misc_notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_misc_notes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "misc_notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image_attached", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image_attached", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_message_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_message_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [AccidentReport] ([user_id], [street], [city], [state], [description], [driver_phone], [driver_license_state_plate], [driver_license_no], [driver_vehicle_type], [insurance_company_name], [insurance_policy_no], [police_office], [police_report_no], [witnesses], [witness_comments], [misc_notes], [image_attached], [message_id], [image_name], [driver_name]) VALUES (@user_id, @street, @city, @state, @description, @driver_phone, @driver_license_state_plate, @driver_license_no, @driver_vehicle_type, @insurance_company_name, @insurance_policy_no, @police_office, @police_report_no, @witnesses, @witness_comments, @misc_notes, @image_attached, @message_id, @image_name, @driver_name);
SELECT accident_id, user_id, street, city, state, description, driver_phone, driver_license_state_plate, driver_license_no, driver_vehicle_type, insurance_company_name, insurance_policy_no, police_office, police_report_no, witnesses, witness_comments, misc_notes, image_attached, message_id, image_name, driver_name FROM AccidentReport WHERE (accident_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@street", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "street", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_license_state_plate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_state_plate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_license_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_vehicle_type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_vehicle_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_company_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_company_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_policy_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_policy_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@police_office", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_office", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@police_report_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_report_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@witnesses", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witnesses", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@witness_comments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witness_comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@misc_notes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "misc_notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image_attached", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@message_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [AccidentReport] SET [user_id] = @user_id, [street] = @street, [city] = @c" +
                "ity, [state] = @state, [description] = @description, [driver_phone] = @driver_ph" +
                "one, [driver_license_state_plate] = @driver_license_state_plate, [driver_license" +
                "_no] = @driver_license_no, [driver_vehicle_type] = @driver_vehicle_type, [insura" +
                "nce_company_name] = @insurance_company_name, [insurance_policy_no] = @insurance_" +
                "policy_no, [police_office] = @police_office, [police_report_no] = @police_report" +
                "_no, [witnesses] = @witnesses, [witness_comments] = @witness_comments, [misc_not" +
                "es] = @misc_notes, [image_attached] = @image_attached, [message_id] = @message_i" +
                "d, [image_name] = @image_name, [driver_name] = @driver_name WHERE (([accident_id" +
                "] = @Original_accident_id) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR (" +
                "[user_id] = @Original_user_id)) AND ((@IsNull_street = 1 AND [street] IS NULL) O" +
                "R ([street] = @Original_street)) AND ((@IsNull_city = 1 AND [city] IS NULL) OR (" +
                "[city] = @Original_city)) AND ((@IsNull_state = 1 AND [state] IS NULL) OR ([stat" +
                "e] = @Original_state)) AND ((@IsNull_description = 1 AND [description] IS NULL) " +
                "OR ([description] = @Original_description)) AND ((@IsNull_driver_phone = 1 AND [" +
                "driver_phone] IS NULL) OR ([driver_phone] = @Original_driver_phone)) AND ((@IsNu" +
                "ll_driver_license_state_plate = 1 AND [driver_license_state_plate] IS NULL) OR (" +
                "[driver_license_state_plate] = @Original_driver_license_state_plate)) AND ((@IsN" +
                "ull_driver_license_no = 1 AND [driver_license_no] IS NULL) OR ([driver_license_n" +
                "o] = @Original_driver_license_no)) AND ((@IsNull_driver_vehicle_type = 1 AND [dr" +
                "iver_vehicle_type] IS NULL) OR ([driver_vehicle_type] = @Original_driver_vehicle" +
                "_type)) AND ((@IsNull_insurance_company_name = 1 AND [insurance_company_name] IS" +
                " NULL) OR ([insurance_company_name] = @Original_insurance_company_name)) AND ((@" +
                "IsNull_insurance_policy_no = 1 AND [insurance_policy_no] IS NULL) OR ([insurance" +
                "_policy_no] = @Original_insurance_policy_no)) AND ((@IsNull_police_office = 1 AN" +
                "D [police_office] IS NULL) OR ([police_office] = @Original_police_office)) AND (" +
                "(@IsNull_police_report_no = 1 AND [police_report_no] IS NULL) OR ([police_report" +
                "_no] = @Original_police_report_no)) AND ((@IsNull_witnesses = 1 AND [witnesses] " +
                "IS NULL) OR ([witnesses] = @Original_witnesses)) AND ((@IsNull_witness_comments " +
                "= 1 AND [witness_comments] IS NULL) OR ([witness_comments] = @Original_witness_c" +
                "omments)) AND ((@IsNull_misc_notes = 1 AND [misc_notes] IS NULL) OR ([misc_notes" +
                "] = @Original_misc_notes)) AND ((@IsNull_image_attached = 1 AND [image_attached]" +
                " IS NULL) OR ([image_attached] = @Original_image_attached)) AND ((@IsNull_messag" +
                "e_id = 1 AND [message_id] IS NULL) OR ([message_id] = @Original_message_id)) AND" +
                " ((@IsNull_image_name = 1 AND [image_name] IS NULL) OR ([image_name] = @Original" +
                "_image_name)) AND ((@IsNull_driver_name = 1 AND [driver_name] IS NULL) OR ([driv" +
                "er_name] = @Original_driver_name)));\r\nSELECT accident_id, user_id, street, city," +
                " state, description, driver_phone, driver_license_state_plate, driver_license_no" +
                ", driver_vehicle_type, insurance_company_name, insurance_policy_no, police_offic" +
                "e, police_report_no, witnesses, witness_comments, misc_notes, image_attached, me" +
                "ssage_id, image_name, driver_name FROM AccidentReport WHERE (accident_id = @acci" +
                "dent_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@street", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "street", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_license_state_plate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_state_plate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_license_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_vehicle_type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_vehicle_type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_company_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_company_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_policy_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_policy_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@police_office", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_office", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@police_report_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_report_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@witnesses", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witnesses", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@witness_comments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witness_comments", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@misc_notes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "misc_notes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image_attached", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@message_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@driver_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_accident_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "accident_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_street", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "street", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_street", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "street", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_description", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_description", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "description", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_license_state_plate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_state_plate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_license_state_plate", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_state_plate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_license_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_no", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_license_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_license_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_vehicle_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_vehicle_type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_vehicle_type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_vehicle_type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_insurance_company_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_company_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_insurance_company_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_company_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_insurance_policy_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_policy_no", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_insurance_policy_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_policy_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_police_office", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_office", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_police_office", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_office", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_police_report_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_report_no", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_police_report_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "police_report_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_witnesses", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witnesses", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_witnesses", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witnesses", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_witness_comments", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witness_comments", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_witness_comments", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "witness_comments", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_misc_notes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "misc_notes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_misc_notes", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "misc_notes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image_attached", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image_attached", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_message_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_message_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_driver_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_driver_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "driver_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@accident_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "accident_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     accident_id, user_id, street, city, state, description, driver_phone, driver_license_state_plate, driver_license_no, driver_vehicle_type, insurance_company_name, 
                      insurance_policy_no, police_office, police_report_no, witnesses, witness_comments, misc_notes, image_attached, message_id, image_name, driver_name
FROM         AccidentReport";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_AccidentReport_getDataByMessageId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iMessageId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.AccidentReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.AccidentReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.AccidentReportDataTable dataTable = new SummitDS.AccidentReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.AccidentReportDataTable GetDataByMassageId(global::System.Nullable<int> iMessageId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iMessageId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iMessageId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.AccidentReportDataTable dataTable = new SummitDS.AccidentReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.AccidentReportDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "AccidentReport");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_accident_id, 
                    global::System.Nullable<int> Original_user_id, 
                    string Original_street, 
                    string Original_city, 
                    string Original_state, 
                    string Original_description, 
                    string Original_driver_phone, 
                    string Original_driver_license_state_plate, 
                    string Original_driver_license_no, 
                    string Original_driver_vehicle_type, 
                    string Original_insurance_company_name, 
                    string Original_insurance_policy_no, 
                    string Original_police_office, 
                    string Original_police_report_no, 
                    string Original_witnesses, 
                    string Original_witness_comments, 
                    string Original_misc_notes, 
                    byte[] Original_image_attached, 
                    global::System.Nullable<int> Original_message_id, 
                    string Original_image_name, 
                    string Original_driver_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_accident_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_street == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_street));
            }
            if ((Original_city == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_city));
            }
            if ((Original_state == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_state));
            }
            if ((Original_description == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_description));
            }
            if ((Original_driver_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_driver_phone));
            }
            if ((Original_driver_license_state_plate == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_driver_license_state_plate));
            }
            if ((Original_driver_license_no == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_driver_license_no));
            }
            if ((Original_driver_vehicle_type == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_driver_vehicle_type));
            }
            if ((Original_insurance_company_name == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_insurance_company_name));
            }
            if ((Original_insurance_policy_no == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_insurance_policy_no));
            }
            if ((Original_police_office == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_police_office));
            }
            if ((Original_police_report_no == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_police_report_no));
            }
            if ((Original_witnesses == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_witnesses));
            }
            if ((Original_witness_comments == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_witness_comments));
            }
            if ((Original_misc_notes == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_misc_notes));
            }
            if ((Original_image_attached == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((byte[])(Original_image_attached));
            }
            if ((Original_message_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((int)(Original_message_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_image_name == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_image_name));
            }
            if ((Original_driver_name == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_driver_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<int> user_id, 
                    string street, 
                    string city, 
                    string state, 
                    string description, 
                    string driver_phone, 
                    string driver_license_state_plate, 
                    string driver_license_no, 
                    string driver_vehicle_type, 
                    string insurance_company_name, 
                    string insurance_policy_no, 
                    string police_office, 
                    string police_report_no, 
                    string witnesses, 
                    string witness_comments, 
                    string misc_notes, 
                    byte[] image_attached, 
                    global::System.Nullable<int> message_id, 
                    string image_name, 
                    string driver_name) {
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((street == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(street));
            }
            if ((city == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(city));
            }
            if ((state == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(state));
            }
            if ((description == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(description));
            }
            if ((driver_phone == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(driver_phone));
            }
            if ((driver_license_state_plate == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(driver_license_state_plate));
            }
            if ((driver_license_no == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(driver_license_no));
            }
            if ((driver_vehicle_type == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(driver_vehicle_type));
            }
            if ((insurance_company_name == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(insurance_company_name));
            }
            if ((insurance_policy_no == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(insurance_policy_no));
            }
            if ((police_office == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(police_office));
            }
            if ((police_report_no == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(police_report_no));
            }
            if ((witnesses == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(witnesses));
            }
            if ((witness_comments == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(witness_comments));
            }
            if ((misc_notes == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(misc_notes));
            }
            if ((image_attached == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((byte[])(image_attached));
            }
            if ((message_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((int)(message_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((image_name == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(image_name));
            }
            if ((driver_name == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(driver_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> user_id, 
                    string street, 
                    string city, 
                    string state, 
                    string description, 
                    string driver_phone, 
                    string driver_license_state_plate, 
                    string driver_license_no, 
                    string driver_vehicle_type, 
                    string insurance_company_name, 
                    string insurance_policy_no, 
                    string police_office, 
                    string police_report_no, 
                    string witnesses, 
                    string witness_comments, 
                    string misc_notes, 
                    byte[] image_attached, 
                    global::System.Nullable<int> message_id, 
                    string image_name, 
                    string driver_name, 
                    int Original_accident_id, 
                    global::System.Nullable<int> Original_user_id, 
                    string Original_street, 
                    string Original_city, 
                    string Original_state, 
                    string Original_description, 
                    string Original_driver_phone, 
                    string Original_driver_license_state_plate, 
                    string Original_driver_license_no, 
                    string Original_driver_vehicle_type, 
                    string Original_insurance_company_name, 
                    string Original_insurance_policy_no, 
                    string Original_police_office, 
                    string Original_police_report_no, 
                    string Original_witnesses, 
                    string Original_witness_comments, 
                    string Original_misc_notes, 
                    byte[] Original_image_attached, 
                    global::System.Nullable<int> Original_message_id, 
                    string Original_image_name, 
                    string Original_driver_name, 
                    int accident_id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((street == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(street));
            }
            if ((city == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(city));
            }
            if ((state == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(state));
            }
            if ((description == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(description));
            }
            if ((driver_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(driver_phone));
            }
            if ((driver_license_state_plate == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(driver_license_state_plate));
            }
            if ((driver_license_no == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(driver_license_no));
            }
            if ((driver_vehicle_type == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(driver_vehicle_type));
            }
            if ((insurance_company_name == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(insurance_company_name));
            }
            if ((insurance_policy_no == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(insurance_policy_no));
            }
            if ((police_office == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(police_office));
            }
            if ((police_report_no == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(police_report_no));
            }
            if ((witnesses == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(witnesses));
            }
            if ((witness_comments == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(witness_comments));
            }
            if ((misc_notes == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(misc_notes));
            }
            if ((image_attached == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((byte[])(image_attached));
            }
            if ((message_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(message_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((image_name == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(image_name));
            }
            if ((driver_name == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(driver_name));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_accident_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_street == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_street));
            }
            if ((Original_city == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_city));
            }
            if ((Original_state == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_state));
            }
            if ((Original_description == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_description));
            }
            if ((Original_driver_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_driver_phone));
            }
            if ((Original_driver_license_state_plate == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_driver_license_state_plate));
            }
            if ((Original_driver_license_no == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_driver_license_no));
            }
            if ((Original_driver_vehicle_type == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_driver_vehicle_type));
            }
            if ((Original_insurance_company_name == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_insurance_company_name));
            }
            if ((Original_insurance_policy_no == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_insurance_policy_no));
            }
            if ((Original_police_office == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_police_office));
            }
            if ((Original_police_report_no == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_police_report_no));
            }
            if ((Original_witnesses == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_witnesses));
            }
            if ((Original_witness_comments == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_witness_comments));
            }
            if ((Original_misc_notes == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_misc_notes));
            }
            if ((Original_image_attached == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((byte[])(Original_image_attached));
            }
            if ((Original_message_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((int)(Original_message_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_image_name == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_image_name));
            }
            if ((Original_driver_name == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_driver_name));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(accident_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> user_id, 
                    string street, 
                    string city, 
                    string state, 
                    string description, 
                    string driver_phone, 
                    string driver_license_state_plate, 
                    string driver_license_no, 
                    string driver_vehicle_type, 
                    string insurance_company_name, 
                    string insurance_policy_no, 
                    string police_office, 
                    string police_report_no, 
                    string witnesses, 
                    string witness_comments, 
                    string misc_notes, 
                    byte[] image_attached, 
                    global::System.Nullable<int> message_id, 
                    string image_name, 
                    string driver_name, 
                    int Original_accident_id, 
                    global::System.Nullable<int> Original_user_id, 
                    string Original_street, 
                    string Original_city, 
                    string Original_state, 
                    string Original_description, 
                    string Original_driver_phone, 
                    string Original_driver_license_state_plate, 
                    string Original_driver_license_no, 
                    string Original_driver_vehicle_type, 
                    string Original_insurance_company_name, 
                    string Original_insurance_policy_no, 
                    string Original_police_office, 
                    string Original_police_report_no, 
                    string Original_witnesses, 
                    string Original_witness_comments, 
                    string Original_misc_notes, 
                    byte[] Original_image_attached, 
                    global::System.Nullable<int> Original_message_id, 
                    string Original_image_name, 
                    string Original_driver_name) {
            return this.Update(user_id, street, city, state, description, driver_phone, driver_license_state_plate, driver_license_no, driver_vehicle_type, insurance_company_name, insurance_policy_no, police_office, police_report_no, witnesses, witness_comments, misc_notes, image_attached, message_id, image_name, driver_name, Original_accident_id, Original_user_id, Original_street, Original_city, Original_state, Original_description, Original_driver_phone, Original_driver_license_state_plate, Original_driver_license_no, Original_driver_vehicle_type, Original_insurance_company_name, Original_insurance_policy_no, Original_police_office, Original_police_report_no, Original_witnesses, Original_witness_comments, Original_misc_notes, Original_image_attached, Original_message_id, Original_image_name, Original_driver_name, Original_accident_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VehicleInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VehicleInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VehicleInfo";
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("model", "model");
            tableMapping.ColumnMappings.Add("make", "make");
            tableMapping.ColumnMappings.Add("year", "year");
            tableMapping.ColumnMappings.Add("other_info", "other_info");
            tableMapping.ColumnMappings.Add("is_using", "is_using");
            tableMapping.ColumnMappings.Add("style", "style");
            tableMapping.ColumnMappings.Add("color", "color");
            tableMapping.ColumnMappings.Add("paint_code", "paint_code");
            tableMapping.ColumnMappings.Add("vin", "vin");
            tableMapping.ColumnMappings.Add("license", "license");
            tableMapping.ColumnMappings.Add("production_date", "production_date");
            tableMapping.ColumnMappings.Add("estimate_file_identifier", "estimate_file_identifier");
            tableMapping.ColumnMappings.Add("estimator_name", "estimator_name");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [VehicleInfo] WHERE (([vehicle_id] = @Original_vehicle_id) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@IsNull_model = 1 AND [model] IS NULL) OR ([model] = @Original_model)) AND ((@IsNull_make = 1 AND [make] IS NULL) OR ([make] = @Original_make)) AND ((@IsNull_year = 1 AND [year] IS NULL) OR ([year] = @Original_year)) AND ((@IsNull_other_info = 1 AND [other_info] IS NULL) OR ([other_info] = @Original_other_info)) AND ((@IsNull_is_using = 1 AND [is_using] IS NULL) OR ([is_using] = @Original_is_using)) AND ((@IsNull_style = 1 AND [style] IS NULL) OR ([style] = @Original_style)) AND ((@IsNull_color = 1 AND [color] IS NULL) OR ([color] = @Original_color)) AND ((@IsNull_paint_code = 1 AND [paint_code] IS NULL) OR ([paint_code] = @Original_paint_code)) AND ((@IsNull_vin = 1 AND [vin] IS NULL) OR ([vin] = @Original_vin)) AND ((@IsNull_license = 1 AND [license] IS NULL) OR ([license] = @Original_license)) AND ((@IsNull_production_date = 1 AND [production_date] IS NULL) OR ([production_date] = @Original_production_date)) AND ((@IsNull_estimate_file_identifier = 1 AND [estimate_file_identifier] IS NULL) OR ([estimate_file_identifier] = @Original_estimate_file_identifier)) AND ((@IsNull_estimator_name = 1 AND [estimator_name] IS NULL) OR ([estimator_name] = @Original_estimator_name)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_model", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "model", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "model", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_make", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "make", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_make", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "make", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_year", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "year", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_year", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "year", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_other_info", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other_info", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_other_info", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other_info", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_using", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_using", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_using", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_using", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_style", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "style", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_style", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "style", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_paint_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paint_code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_paint_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paint_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_vin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_production_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "production_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_production_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "production_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_estimate_file_identifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimate_file_identifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_estimate_file_identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimate_file_identifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_estimator_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimator_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_estimator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimator_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [VehicleInfo] ([user_id], [model], [make], [year], [other_info], [is_using], [style], [color], [paint_code], [vin], [license], [production_date], [estimate_file_identifier], [estimator_name]) VALUES (@user_id, @model, @make, @year, @other_info, @is_using, @style, @color, @paint_code, @vin, @license, @production_date, @estimate_file_identifier, @estimator_name);
SELECT vehicle_id, user_id, model, make, year, other_info, is_using, style, color, paint_code, vin, license, production_date, estimate_file_identifier, estimator_name FROM VehicleInfo WHERE (vehicle_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "model", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@make", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "make", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@year", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@other_info", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other_info", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_using", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_using", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@style", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "style", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paint_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paint_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@production_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "production_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estimate_file_identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimate_file_identifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estimator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimator_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [VehicleInfo] SET [user_id] = @user_id, [model] = @model, [make] = @make, " +
                "[year] = @year, [other_info] = @other_info, [is_using] = @is_using, [style] = @s" +
                "tyle, [color] = @color, [paint_code] = @paint_code, [vin] = @vin, [license] = @l" +
                "icense, [production_date] = @production_date, [estimate_file_identifier] = @esti" +
                "mate_file_identifier, [estimator_name] = @estimator_name WHERE (([vehicle_id] = " +
                "@Original_vehicle_id) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user" +
                "_id] = @Original_user_id)) AND ((@IsNull_model = 1 AND [model] IS NULL) OR ([mod" +
                "el] = @Original_model)) AND ((@IsNull_make = 1 AND [make] IS NULL) OR ([make] = " +
                "@Original_make)) AND ((@IsNull_year = 1 AND [year] IS NULL) OR ([year] = @Origin" +
                "al_year)) AND ((@IsNull_other_info = 1 AND [other_info] IS NULL) OR ([other_info" +
                "] = @Original_other_info)) AND ((@IsNull_is_using = 1 AND [is_using] IS NULL) OR" +
                " ([is_using] = @Original_is_using)) AND ((@IsNull_style = 1 AND [style] IS NULL)" +
                " OR ([style] = @Original_style)) AND ((@IsNull_color = 1 AND [color] IS NULL) OR" +
                " ([color] = @Original_color)) AND ((@IsNull_paint_code = 1 AND [paint_code] IS N" +
                "ULL) OR ([paint_code] = @Original_paint_code)) AND ((@IsNull_vin = 1 AND [vin] I" +
                "S NULL) OR ([vin] = @Original_vin)) AND ((@IsNull_license = 1 AND [license] IS N" +
                "ULL) OR ([license] = @Original_license)) AND ((@IsNull_production_date = 1 AND [" +
                "production_date] IS NULL) OR ([production_date] = @Original_production_date)) AN" +
                "D ((@IsNull_estimate_file_identifier = 1 AND [estimate_file_identifier] IS NULL)" +
                " OR ([estimate_file_identifier] = @Original_estimate_file_identifier)) AND ((@Is" +
                "Null_estimator_name = 1 AND [estimator_name] IS NULL) OR ([estimator_name] = @Or" +
                "iginal_estimator_name)));\r\nSELECT vehicle_id, user_id, model, make, year, other_" +
                "info, is_using, style, color, paint_code, vin, license, production_date, estimat" +
                "e_file_identifier, estimator_name FROM VehicleInfo WHERE (vehicle_id = @vehicle_" +
                "id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "model", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@make", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "make", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@year", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "year", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@other_info", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other_info", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_using", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_using", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@style", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "style", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@paint_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paint_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@production_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "production_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estimate_file_identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimate_file_identifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@estimator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimator_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_model", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "model", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_model", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "model", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_make", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "make", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_make", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "make", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_year", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "year", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_year", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "year", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_other_info", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other_info", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_other_info", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "other_info", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_using", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_using", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_using", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_using", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_style", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "style", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_style", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "style", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_color", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_color", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "color", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_paint_code", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paint_code", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_paint_code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "paint_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_vin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_production_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "production_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_production_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "production_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_estimate_file_identifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimate_file_identifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_estimate_file_identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimate_file_identifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_estimator_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimator_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_estimator_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "estimator_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     vehicle_id, user_id, model, make, year, other_info, is_using, style, c" +
                "olor, paint_code, vin, license, production_date, estimate_file_identifier, estim" +
                "ator_name\r\nFROM         VehicleInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT color, estimate_file_identifier, estimator_name, is_using, license, make, " +
                "model, other_info, paint_code, production_date, style, user_id, vehicle_id, vin," +
                " year FROM VehicleInfo WHERE (vehicle_id = @Id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.Sp_VehicleInfo_getDataByUserId";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iUserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.VehicleInfoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.VehicleInfoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.VehicleInfoDataTable dataTable = new SummitDS.VehicleInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.VehicleInfoDataTable GetDataById(int Id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Id));
            SummitDS.VehicleInfoDataTable dataTable = new SummitDS.VehicleInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.VehicleInfoDataTable GetDataByUserId(global::System.Nullable<int> iUserId) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((iUserId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iUserId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.VehicleInfoDataTable dataTable = new SummitDS.VehicleInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.VehicleInfoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "VehicleInfo");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_vehicle_id, global::System.Nullable<int> Original_user_id, string Original_model, string Original_make, string Original_year, string Original_other_info, global::System.Nullable<bool> Original_is_using, string Original_style, string Original_color, string Original_paint_code, string Original_vin, string Original_license, global::System.Nullable<global::System.DateTime> Original_production_date, string Original_estimate_file_identifier, string Original_estimator_name) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_vehicle_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_model == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_model));
            }
            if ((Original_make == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_make));
            }
            if ((Original_year == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_year));
            }
            if ((Original_other_info == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_other_info));
            }
            if ((Original_is_using.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_is_using.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_style == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_style));
            }
            if ((Original_color == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_color));
            }
            if ((Original_paint_code == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_paint_code));
            }
            if ((Original_vin == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_vin));
            }
            if ((Original_license == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_license));
            }
            if ((Original_production_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_production_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_estimate_file_identifier == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_estimate_file_identifier));
            }
            if ((Original_estimator_name == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_estimator_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> user_id, string model, string make, string year, string other_info, global::System.Nullable<bool> is_using, string style, string color, string paint_code, string vin, string license, global::System.Nullable<global::System.DateTime> production_date, string estimate_file_identifier, string estimator_name) {
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((model == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(model));
            }
            if ((make == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(make));
            }
            if ((year == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(year));
            }
            if ((other_info == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(other_info));
            }
            if ((is_using.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(is_using.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((style == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(style));
            }
            if ((color == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(color));
            }
            if ((paint_code == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(paint_code));
            }
            if ((vin == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(vin));
            }
            if ((license == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(license));
            }
            if ((production_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(production_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((estimate_file_identifier == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(estimate_file_identifier));
            }
            if ((estimator_name == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(estimator_name));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> user_id, 
                    string model, 
                    string make, 
                    string year, 
                    string other_info, 
                    global::System.Nullable<bool> is_using, 
                    string style, 
                    string color, 
                    string paint_code, 
                    string vin, 
                    string license, 
                    global::System.Nullable<global::System.DateTime> production_date, 
                    string estimate_file_identifier, 
                    string estimator_name, 
                    int Original_vehicle_id, 
                    global::System.Nullable<int> Original_user_id, 
                    string Original_model, 
                    string Original_make, 
                    string Original_year, 
                    string Original_other_info, 
                    global::System.Nullable<bool> Original_is_using, 
                    string Original_style, 
                    string Original_color, 
                    string Original_paint_code, 
                    string Original_vin, 
                    string Original_license, 
                    global::System.Nullable<global::System.DateTime> Original_production_date, 
                    string Original_estimate_file_identifier, 
                    string Original_estimator_name, 
                    int vehicle_id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((model == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(model));
            }
            if ((make == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(make));
            }
            if ((year == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(year));
            }
            if ((other_info == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(other_info));
            }
            if ((is_using.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(is_using.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((style == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(style));
            }
            if ((color == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(color));
            }
            if ((paint_code == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(paint_code));
            }
            if ((vin == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(vin));
            }
            if ((license == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(license));
            }
            if ((production_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(production_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((estimate_file_identifier == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(estimate_file_identifier));
            }
            if ((estimator_name == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(estimator_name));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_vehicle_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_model == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_model));
            }
            if ((Original_make == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_make));
            }
            if ((Original_year == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_year));
            }
            if ((Original_other_info == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_other_info));
            }
            if ((Original_is_using.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(Original_is_using.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_style == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_style));
            }
            if ((Original_color == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_color));
            }
            if ((Original_paint_code == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_paint_code));
            }
            if ((Original_vin == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_vin));
            }
            if ((Original_license == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_license));
            }
            if ((Original_production_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((System.DateTime)(Original_production_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_estimate_file_identifier == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_estimate_file_identifier));
            }
            if ((Original_estimator_name == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_estimator_name));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(vehicle_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> user_id, 
                    string model, 
                    string make, 
                    string year, 
                    string other_info, 
                    global::System.Nullable<bool> is_using, 
                    string style, 
                    string color, 
                    string paint_code, 
                    string vin, 
                    string license, 
                    global::System.Nullable<global::System.DateTime> production_date, 
                    string estimate_file_identifier, 
                    string estimator_name, 
                    int Original_vehicle_id, 
                    global::System.Nullable<int> Original_user_id, 
                    string Original_model, 
                    string Original_make, 
                    string Original_year, 
                    string Original_other_info, 
                    global::System.Nullable<bool> Original_is_using, 
                    string Original_style, 
                    string Original_color, 
                    string Original_paint_code, 
                    string Original_vin, 
                    string Original_license, 
                    global::System.Nullable<global::System.DateTime> Original_production_date, 
                    string Original_estimate_file_identifier, 
                    string Original_estimator_name) {
            return this.Update(user_id, model, make, year, other_info, is_using, style, color, paint_code, vin, license, production_date, estimate_file_identifier, estimator_name, Original_vehicle_id, Original_user_id, Original_model, Original_make, Original_year, Original_other_info, Original_is_using, Original_style, Original_color, Original_paint_code, Original_vin, Original_license, Original_production_date, Original_estimate_file_identifier, Original_estimator_name, Original_vehicle_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class InsuranceInformationTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public InsuranceInformationTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "InsuranceInformation";
            tableMapping.ColumnMappings.Add("insurance_id", "insurance_id");
            tableMapping.ColumnMappings.Add("agent_name", "agent_name");
            tableMapping.ColumnMappings.Add("agent_phone", "agent_phone");
            tableMapping.ColumnMappings.Add("agent_cell_phone", "agent_cell_phone");
            tableMapping.ColumnMappings.Add("agent_website", "agent_website");
            tableMapping.ColumnMappings.Add("company_name", "company_name");
            tableMapping.ColumnMappings.Add("company_cell_phone", "company_cell_phone");
            tableMapping.ColumnMappings.Add("company_website", "company_website");
            tableMapping.ColumnMappings.Add("policy_no", "policy_no");
            tableMapping.ColumnMappings.Add("expiration_date", "expiration_date");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("company_fax", "company_fax");
            tableMapping.ColumnMappings.Add("company_address", "company_address");
            tableMapping.ColumnMappings.Add("company_city", "company_city");
            tableMapping.ColumnMappings.Add("company_state", "company_state");
            tableMapping.ColumnMappings.Add("company_zip", "company_zip");
            tableMapping.ColumnMappings.Add("date_of_loss", "date_of_loss");
            tableMapping.ColumnMappings.Add("deductible", "deductible");
            tableMapping.ColumnMappings.Add("claim_number", "claim_number");
            tableMapping.ColumnMappings.Add("net_total_amount", "net_total_amount");
            tableMapping.ColumnMappings.Add("repair_order_identifier", "repair_order_identifier");
            tableMapping.ColumnMappings.Add("total_ro_amount", "total_ro_amount");
            tableMapping.ColumnMappings.Add("company_email", "company_email");
            tableMapping.ColumnMappings.Add("agent_email", "agent_email");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [InsuranceInformation] WHERE (([insurance_id] = @Original_insurance_i" +
                "d) AND ((@IsNull_agent_name = 1 AND [agent_name] IS NULL) OR ([agent_name] = @Or" +
                "iginal_agent_name)) AND ((@IsNull_agent_phone = 1 AND [agent_phone] IS NULL) OR " +
                "([agent_phone] = @Original_agent_phone)) AND ((@IsNull_agent_cell_phone = 1 AND " +
                "[agent_cell_phone] IS NULL) OR ([agent_cell_phone] = @Original_agent_cell_phone)" +
                ") AND ((@IsNull_agent_website = 1 AND [agent_website] IS NULL) OR ([agent_websit" +
                "e] = @Original_agent_website)) AND ((@IsNull_company_name = 1 AND [company_name]" +
                " IS NULL) OR ([company_name] = @Original_company_name)) AND ((@IsNull_company_ce" +
                "ll_phone = 1 AND [company_cell_phone] IS NULL) OR ([company_cell_phone] = @Origi" +
                "nal_company_cell_phone)) AND ((@IsNull_company_website = 1 AND [company_website]" +
                " IS NULL) OR ([company_website] = @Original_company_website)) AND ((@IsNull_poli" +
                "cy_no = 1 AND [policy_no] IS NULL) OR ([policy_no] = @Original_policy_no)) AND (" +
                "(@IsNull_expiration_date = 1 AND [expiration_date] IS NULL) OR ([expiration_date" +
                "] = @Original_expiration_date)) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL)" +
                " OR ([user_id] = @Original_user_id)) AND ((@IsNull_company_fax = 1 AND [company_" +
                "fax] IS NULL) OR ([company_fax] = @Original_company_fax)) AND ((@IsNull_company_" +
                "address = 1 AND [company_address] IS NULL) OR ([company_address] = @Original_com" +
                "pany_address)) AND ((@IsNull_company_city = 1 AND [company_city] IS NULL) OR ([c" +
                "ompany_city] = @Original_company_city)) AND ((@IsNull_company_state = 1 AND [com" +
                "pany_state] IS NULL) OR ([company_state] = @Original_company_state)) AND ((@IsNu" +
                "ll_company_zip = 1 AND [company_zip] IS NULL) OR ([company_zip] = @Original_comp" +
                "any_zip)) AND ((@IsNull_date_of_loss = 1 AND [date_of_loss] IS NULL) OR ([date_o" +
                "f_loss] = @Original_date_of_loss)) AND ((@IsNull_deductible = 1 AND [deductible]" +
                " IS NULL) OR ([deductible] = @Original_deductible)) AND ((@IsNull_claim_number =" +
                " 1 AND [claim_number] IS NULL) OR ([claim_number] = @Original_claim_number)) AND" +
                " ((@IsNull_net_total_amount = 1 AND [net_total_amount] IS NULL) OR ([net_total_a" +
                "mount] = @Original_net_total_amount)) AND ((@IsNull_repair_order_identifier = 1 " +
                "AND [repair_order_identifier] IS NULL) OR ([repair_order_identifier] = @Original" +
                "_repair_order_identifier)) AND ((@IsNull_total_ro_amount = 1 AND [total_ro_amoun" +
                "t] IS NULL) OR ([total_ro_amount] = @Original_total_ro_amount)) AND ((@IsNull_co" +
                "mpany_email = 1 AND [company_email] IS NULL) OR ([company_email] = @Original_com" +
                "pany_email)) AND ((@IsNull_agent_email = 1 AND [agent_email] IS NULL) OR ([agent" +
                "_email] = @Original_agent_email)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_insurance_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_cell_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_cell_phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_cell_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_cell_phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_cell_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_cell_phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_cell_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_cell_phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_policy_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "policy_no", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_policy_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "policy_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_expiration_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiration_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_expiration_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiration_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_fax", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_fax", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_fax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_state", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_state", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_state", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_zip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_zip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date_of_loss", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_loss", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date_of_loss", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_loss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_deductible", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deductible", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_deductible", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "deductible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_claim_number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "claim_number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_claim_number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "claim_number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_net_total_amount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "net_total_amount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_net_total_amount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "net_total_amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_repair_order_identifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repair_order_identifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_repair_order_identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repair_order_identifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_total_ro_amount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "total_ro_amount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_total_ro_amount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "total_ro_amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [InsuranceInformation] ([agent_name], [agent_phone], [agent_cell_phone], [agent_website], [company_name], [company_cell_phone], [company_website], [policy_no], [expiration_date], [user_id], [company_fax], [company_address], [company_city], [company_state], [company_zip], [date_of_loss], [deductible], [claim_number], [net_total_amount], [repair_order_identifier], [total_ro_amount], [company_email], [agent_email]) VALUES (@agent_name, @agent_phone, @agent_cell_phone, @agent_website, @company_name, @company_cell_phone, @company_website, @policy_no, @expiration_date, @user_id, @company_fax, @company_address, @company_city, @company_state, @company_zip, @date_of_loss, @deductible, @claim_number, @net_total_amount, @repair_order_identifier, @total_ro_amount, @company_email, @agent_email);
SELECT insurance_id, agent_name, agent_phone, agent_cell_phone, agent_website, company_name, company_cell_phone, company_website, policy_no, expiration_date, user_id, company_fax, company_address, company_city, company_state, company_zip, date_of_loss, deductible, claim_number, net_total_amount, repair_order_identifier, total_ro_amount, company_email, agent_email FROM InsuranceInformation WHERE (insurance_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_cell_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_cell_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_cell_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_cell_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@policy_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "policy_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expiration_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiration_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date_of_loss", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_loss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deductible", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "deductible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@claim_number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "claim_number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@net_total_amount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "net_total_amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@repair_order_identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repair_order_identifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@total_ro_amount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "total_ro_amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [InsuranceInformation] SET [agent_name] = @agent_name, [agent_phone] = @ag" +
                "ent_phone, [agent_cell_phone] = @agent_cell_phone, [agent_website] = @agent_webs" +
                "ite, [company_name] = @company_name, [company_cell_phone] = @company_cell_phone," +
                " [company_website] = @company_website, [policy_no] = @policy_no, [expiration_dat" +
                "e] = @expiration_date, [user_id] = @user_id, [company_fax] = @company_fax, [comp" +
                "any_address] = @company_address, [company_city] = @company_city, [company_state]" +
                " = @company_state, [company_zip] = @company_zip, [date_of_loss] = @date_of_loss," +
                " [deductible] = @deductible, [claim_number] = @claim_number, [net_total_amount] " +
                "= @net_total_amount, [repair_order_identifier] = @repair_order_identifier, [tota" +
                "l_ro_amount] = @total_ro_amount, [company_email] = @company_email, [agent_email]" +
                " = @agent_email WHERE (([insurance_id] = @Original_insurance_id) AND ((@IsNull_a" +
                "gent_name = 1 AND [agent_name] IS NULL) OR ([agent_name] = @Original_agent_name)" +
                ") AND ((@IsNull_agent_phone = 1 AND [agent_phone] IS NULL) OR ([agent_phone] = @" +
                "Original_agent_phone)) AND ((@IsNull_agent_cell_phone = 1 AND [agent_cell_phone]" +
                " IS NULL) OR ([agent_cell_phone] = @Original_agent_cell_phone)) AND ((@IsNull_ag" +
                "ent_website = 1 AND [agent_website] IS NULL) OR ([agent_website] = @Original_age" +
                "nt_website)) AND ((@IsNull_company_name = 1 AND [company_name] IS NULL) OR ([com" +
                "pany_name] = @Original_company_name)) AND ((@IsNull_company_cell_phone = 1 AND [" +
                "company_cell_phone] IS NULL) OR ([company_cell_phone] = @Original_company_cell_p" +
                "hone)) AND ((@IsNull_company_website = 1 AND [company_website] IS NULL) OR ([com" +
                "pany_website] = @Original_company_website)) AND ((@IsNull_policy_no = 1 AND [pol" +
                "icy_no] IS NULL) OR ([policy_no] = @Original_policy_no)) AND ((@IsNull_expiratio" +
                "n_date = 1 AND [expiration_date] IS NULL) OR ([expiration_date] = @Original_expi" +
                "ration_date)) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @" +
                "Original_user_id)) AND ((@IsNull_company_fax = 1 AND [company_fax] IS NULL) OR (" +
                "[company_fax] = @Original_company_fax)) AND ((@IsNull_company_address = 1 AND [c" +
                "ompany_address] IS NULL) OR ([company_address] = @Original_company_address)) AND" +
                " ((@IsNull_company_city = 1 AND [company_city] IS NULL) OR ([company_city] = @Or" +
                "iginal_company_city)) AND ((@IsNull_company_state = 1 AND [company_state] IS NUL" +
                "L) OR ([company_state] = @Original_company_state)) AND ((@IsNull_company_zip = 1" +
                " AND [company_zip] IS NULL) OR ([company_zip] = @Original_company_zip)) AND ((@I" +
                "sNull_date_of_loss = 1 AND [date_of_loss] IS NULL) OR ([date_of_loss] = @Origina" +
                "l_date_of_loss)) AND ((@IsNull_deductible = 1 AND [deductible] IS NULL) OR ([ded" +
                "uctible] = @Original_deductible)) AND ((@IsNull_claim_number = 1 AND [claim_numb" +
                "er] IS NULL) OR ([claim_number] = @Original_claim_number)) AND ((@IsNull_net_tot" +
                "al_amount = 1 AND [net_total_amount] IS NULL) OR ([net_total_amount] = @Original" +
                "_net_total_amount)) AND ((@IsNull_repair_order_identifier = 1 AND [repair_order_" +
                "identifier] IS NULL) OR ([repair_order_identifier] = @Original_repair_order_iden" +
                "tifier)) AND ((@IsNull_total_ro_amount = 1 AND [total_ro_amount] IS NULL) OR ([t" +
                "otal_ro_amount] = @Original_total_ro_amount)) AND ((@IsNull_company_email = 1 AN" +
                "D [company_email] IS NULL) OR ([company_email] = @Original_company_email)) AND (" +
                "(@IsNull_agent_email = 1 AND [agent_email] IS NULL) OR ([agent_email] = @Origina" +
                "l_agent_email)));\r\nSELECT insurance_id, agent_name, agent_phone, agent_cell_phon" +
                "e, agent_website, company_name, company_cell_phone, company_website, policy_no, " +
                "expiration_date, user_id, company_fax, company_address, company_city, company_st" +
                "ate, company_zip, date_of_loss, deductible, claim_number, net_total_amount, repa" +
                "ir_order_identifier, total_ro_amount, company_email, agent_email FROM InsuranceI" +
                "nformation WHERE (insurance_id = @insurance_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_cell_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_cell_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_cell_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_cell_phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@policy_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "policy_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expiration_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiration_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date_of_loss", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_loss", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@deductible", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "deductible", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@claim_number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "claim_number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@net_total_amount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "net_total_amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@repair_order_identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repair_order_identifier", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@total_ro_amount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "total_ro_amount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@agent_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_insurance_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_cell_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_cell_phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_cell_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_cell_phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_cell_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_cell_phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_cell_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_cell_phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_policy_no", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "policy_no", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_policy_no", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "policy_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_expiration_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiration_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_expiration_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expiration_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_fax", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_fax", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_fax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_state", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_state", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_state", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_zip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_zip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date_of_loss", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_loss", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date_of_loss", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_loss", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_deductible", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "deductible", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_deductible", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 2, "deductible", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_claim_number", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "claim_number", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_claim_number", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "claim_number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_net_total_amount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "net_total_amount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_net_total_amount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "net_total_amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_repair_order_identifier", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repair_order_identifier", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_repair_order_identifier", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "repair_order_identifier", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_total_ro_amount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "total_ro_amount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_total_ro_amount", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "total_ro_amount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_agent_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_agent_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "agent_email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@insurance_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "insurance_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     insurance_id, agent_name, agent_phone, agent_cell_phone, agent_website, company_name, company_cell_phone, company_website, policy_no, expiration_date, 
                      user_id, company_fax, company_address, company_city, company_state, company_zip, date_of_loss, deductible, claim_number, net_total_amount, 
                      repair_order_identifier, total_ro_amount, company_email, agent_email
FROM         InsuranceInformation";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_InsuranceInfo_getDataByUserId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iUserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.InsuranceInformationDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.InsuranceInformationDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.InsuranceInformationDataTable dataTable = new SummitDS.InsuranceInformationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.InsuranceInformationDataTable GetDataByUserId(global::System.Nullable<int> iUserId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iUserId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iUserId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.InsuranceInformationDataTable dataTable = new SummitDS.InsuranceInformationDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.InsuranceInformationDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "InsuranceInformation");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_insurance_id, 
                    string Original_agent_name, 
                    string Original_agent_phone, 
                    string Original_agent_cell_phone, 
                    string Original_agent_website, 
                    string Original_company_name, 
                    string Original_company_cell_phone, 
                    string Original_company_website, 
                    string Original_policy_no, 
                    global::System.Nullable<global::System.DateTime> Original_expiration_date, 
                    global::System.Nullable<int> Original_user_id, 
                    string Original_company_fax, 
                    string Original_company_address, 
                    string Original_company_city, 
                    string Original_company_state, 
                    string Original_company_zip, 
                    global::System.Nullable<global::System.DateTime> Original_date_of_loss, 
                    global::System.Nullable<decimal> Original_deductible, 
                    string Original_claim_number, 
                    string Original_net_total_amount, 
                    string Original_repair_order_identifier, 
                    string Original_total_ro_amount, 
                    string Original_company_email, 
                    string Original_agent_email) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_insurance_id));
            if ((Original_agent_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_agent_name));
            }
            if ((Original_agent_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_agent_phone));
            }
            if ((Original_agent_cell_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_agent_cell_phone));
            }
            if ((Original_agent_website == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_agent_website));
            }
            if ((Original_company_name == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_company_name));
            }
            if ((Original_company_cell_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_company_cell_phone));
            }
            if ((Original_company_website == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_company_website));
            }
            if ((Original_policy_no == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_policy_no));
            }
            if ((Original_expiration_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_expiration_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_company_fax == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_company_fax));
            }
            if ((Original_company_address == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_company_address));
            }
            if ((Original_company_city == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_company_city));
            }
            if ((Original_company_state == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_company_state));
            }
            if ((Original_company_zip == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_company_zip));
            }
            if ((Original_date_of_loss.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((System.DateTime)(Original_date_of_loss.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_deductible.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_deductible.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_claim_number == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_claim_number));
            }
            if ((Original_net_total_amount == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_net_total_amount));
            }
            if ((Original_repair_order_identifier == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_repair_order_identifier));
            }
            if ((Original_total_ro_amount == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_total_ro_amount));
            }
            if ((Original_company_email == null)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_company_email));
            }
            if ((Original_agent_email == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_agent_email));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string agent_name, 
                    string agent_phone, 
                    string agent_cell_phone, 
                    string agent_website, 
                    string company_name, 
                    string company_cell_phone, 
                    string company_website, 
                    string policy_no, 
                    global::System.Nullable<global::System.DateTime> expiration_date, 
                    global::System.Nullable<int> user_id, 
                    string company_fax, 
                    string company_address, 
                    string company_city, 
                    string company_state, 
                    string company_zip, 
                    global::System.Nullable<global::System.DateTime> date_of_loss, 
                    global::System.Nullable<decimal> deductible, 
                    string claim_number, 
                    string net_total_amount, 
                    string repair_order_identifier, 
                    string total_ro_amount, 
                    string company_email, 
                    string agent_email) {
            if ((agent_name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(agent_name));
            }
            if ((agent_phone == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(agent_phone));
            }
            if ((agent_cell_phone == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(agent_cell_phone));
            }
            if ((agent_website == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(agent_website));
            }
            if ((company_name == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(company_name));
            }
            if ((company_cell_phone == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(company_cell_phone));
            }
            if ((company_website == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(company_website));
            }
            if ((policy_no == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(policy_no));
            }
            if ((expiration_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(expiration_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((company_fax == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(company_fax));
            }
            if ((company_address == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(company_address));
            }
            if ((company_city == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(company_city));
            }
            if ((company_state == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(company_state));
            }
            if ((company_zip == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(company_zip));
            }
            if ((date_of_loss.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(date_of_loss.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((deductible.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(deductible.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((claim_number == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(claim_number));
            }
            if ((net_total_amount == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(net_total_amount));
            }
            if ((repair_order_identifier == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(repair_order_identifier));
            }
            if ((total_ro_amount == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(total_ro_amount));
            }
            if ((company_email == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(company_email));
            }
            if ((agent_email == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(agent_email));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string agent_name, 
                    string agent_phone, 
                    string agent_cell_phone, 
                    string agent_website, 
                    string company_name, 
                    string company_cell_phone, 
                    string company_website, 
                    string policy_no, 
                    global::System.Nullable<global::System.DateTime> expiration_date, 
                    global::System.Nullable<int> user_id, 
                    string company_fax, 
                    string company_address, 
                    string company_city, 
                    string company_state, 
                    string company_zip, 
                    global::System.Nullable<global::System.DateTime> date_of_loss, 
                    global::System.Nullable<decimal> deductible, 
                    string claim_number, 
                    string net_total_amount, 
                    string repair_order_identifier, 
                    string total_ro_amount, 
                    string company_email, 
                    string agent_email, 
                    int Original_insurance_id, 
                    string Original_agent_name, 
                    string Original_agent_phone, 
                    string Original_agent_cell_phone, 
                    string Original_agent_website, 
                    string Original_company_name, 
                    string Original_company_cell_phone, 
                    string Original_company_website, 
                    string Original_policy_no, 
                    global::System.Nullable<global::System.DateTime> Original_expiration_date, 
                    global::System.Nullable<int> Original_user_id, 
                    string Original_company_fax, 
                    string Original_company_address, 
                    string Original_company_city, 
                    string Original_company_state, 
                    string Original_company_zip, 
                    global::System.Nullable<global::System.DateTime> Original_date_of_loss, 
                    global::System.Nullable<decimal> Original_deductible, 
                    string Original_claim_number, 
                    string Original_net_total_amount, 
                    string Original_repair_order_identifier, 
                    string Original_total_ro_amount, 
                    string Original_company_email, 
                    string Original_agent_email, 
                    int insurance_id) {
            if ((agent_name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(agent_name));
            }
            if ((agent_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(agent_phone));
            }
            if ((agent_cell_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(agent_cell_phone));
            }
            if ((agent_website == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(agent_website));
            }
            if ((company_name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(company_name));
            }
            if ((company_cell_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(company_cell_phone));
            }
            if ((company_website == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(company_website));
            }
            if ((policy_no == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(policy_no));
            }
            if ((expiration_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(expiration_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((company_fax == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(company_fax));
            }
            if ((company_address == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(company_address));
            }
            if ((company_city == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(company_city));
            }
            if ((company_state == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(company_state));
            }
            if ((company_zip == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(company_zip));
            }
            if ((date_of_loss.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(date_of_loss.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((deductible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(deductible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((claim_number == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(claim_number));
            }
            if ((net_total_amount == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(net_total_amount));
            }
            if ((repair_order_identifier == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(repair_order_identifier));
            }
            if ((total_ro_amount == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(total_ro_amount));
            }
            if ((company_email == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(company_email));
            }
            if ((agent_email == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(agent_email));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_insurance_id));
            if ((Original_agent_name == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_agent_name));
            }
            if ((Original_agent_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_agent_phone));
            }
            if ((Original_agent_cell_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_agent_cell_phone));
            }
            if ((Original_agent_website == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_agent_website));
            }
            if ((Original_company_name == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_company_name));
            }
            if ((Original_company_cell_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_company_cell_phone));
            }
            if ((Original_company_website == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_company_website));
            }
            if ((Original_policy_no == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_policy_no));
            }
            if ((Original_expiration_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((System.DateTime)(Original_expiration_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_company_fax == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_company_fax));
            }
            if ((Original_company_address == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_company_address));
            }
            if ((Original_company_city == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_company_city));
            }
            if ((Original_company_state == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_company_state));
            }
            if ((Original_company_zip == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_company_zip));
            }
            if ((Original_date_of_loss.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(Original_date_of_loss.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_deductible.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(Original_deductible.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_claim_number == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_claim_number));
            }
            if ((Original_net_total_amount == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_net_total_amount));
            }
            if ((Original_repair_order_identifier == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_repair_order_identifier));
            }
            if ((Original_total_ro_amount == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(Original_total_ro_amount));
            }
            if ((Original_company_email == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(Original_company_email));
            }
            if ((Original_agent_email == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(Original_agent_email));
            }
            this.Adapter.UpdateCommand.Parameters[70].Value = ((int)(insurance_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string agent_name, 
                    string agent_phone, 
                    string agent_cell_phone, 
                    string agent_website, 
                    string company_name, 
                    string company_cell_phone, 
                    string company_website, 
                    string policy_no, 
                    global::System.Nullable<global::System.DateTime> expiration_date, 
                    global::System.Nullable<int> user_id, 
                    string company_fax, 
                    string company_address, 
                    string company_city, 
                    string company_state, 
                    string company_zip, 
                    global::System.Nullable<global::System.DateTime> date_of_loss, 
                    global::System.Nullable<decimal> deductible, 
                    string claim_number, 
                    string net_total_amount, 
                    string repair_order_identifier, 
                    string total_ro_amount, 
                    string company_email, 
                    string agent_email, 
                    int Original_insurance_id, 
                    string Original_agent_name, 
                    string Original_agent_phone, 
                    string Original_agent_cell_phone, 
                    string Original_agent_website, 
                    string Original_company_name, 
                    string Original_company_cell_phone, 
                    string Original_company_website, 
                    string Original_policy_no, 
                    global::System.Nullable<global::System.DateTime> Original_expiration_date, 
                    global::System.Nullable<int> Original_user_id, 
                    string Original_company_fax, 
                    string Original_company_address, 
                    string Original_company_city, 
                    string Original_company_state, 
                    string Original_company_zip, 
                    global::System.Nullable<global::System.DateTime> Original_date_of_loss, 
                    global::System.Nullable<decimal> Original_deductible, 
                    string Original_claim_number, 
                    string Original_net_total_amount, 
                    string Original_repair_order_identifier, 
                    string Original_total_ro_amount, 
                    string Original_company_email, 
                    string Original_agent_email) {
            return this.Update(agent_name, agent_phone, agent_cell_phone, agent_website, company_name, company_cell_phone, company_website, policy_no, expiration_date, user_id, company_fax, company_address, company_city, company_state, company_zip, date_of_loss, deductible, claim_number, net_total_amount, repair_order_identifier, total_ro_amount, company_email, agent_email, Original_insurance_id, Original_agent_name, Original_agent_phone, Original_agent_cell_phone, Original_agent_website, Original_company_name, Original_company_cell_phone, Original_company_website, Original_policy_no, Original_expiration_date, Original_user_id, Original_company_fax, Original_company_address, Original_company_city, Original_company_state, Original_company_zip, Original_date_of_loss, Original_deductible, Original_claim_number, Original_net_total_amount, Original_repair_order_identifier, Original_total_ro_amount, Original_company_email, Original_agent_email, Original_insurance_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MessageTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MessageTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Message";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("messageTime", "messageTime");
            tableMapping.ColumnMappings.Add("message", "message");
            tableMapping.ColumnMappings.Add("attachemet", "attachemet");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("phoneUser_id", "phoneUser_id");
            tableMapping.ColumnMappings.Add("locationLink", "locationLink");
            tableMapping.ColumnMappings.Add("is_read", "is_read");
            tableMapping.ColumnMappings.Add("latitude", "latitude");
            tableMapping.ColumnMappings.Add("longitude", "longitude");
            tableMapping.ColumnMappings.Add("private_label_id", "private_label_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Message] WHERE (([ID] = @Original_ID) AND ((@IsNull_messageTime = 1 AND [messageTime] IS NULL) OR ([messageTime] = @Original_messageTime)) AND ((@IsNull_message = 1 AND [message] IS NULL) OR ([message] = @Original_message)) AND ((@IsNull_attachemet = 1 AND [attachemet] IS NULL) OR ([attachemet] = @Original_attachemet)) AND ((@IsNull_type = 1 AND [type] IS NULL) OR ([type] = @Original_type)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_phoneUser_id = 1 AND [phoneUser_id] IS NULL) OR ([phoneUser_id] = @Original_phoneUser_id)) AND ((@IsNull_locationLink = 1 AND [locationLink] IS NULL) OR ([locationLink] = @Original_locationLink)) AND ((@IsNull_is_read = 1 AND [is_read] IS NULL) OR ([is_read] = @Original_is_read)) AND ((@IsNull_latitude = 1 AND [latitude] IS NULL) OR ([latitude] = @Original_latitude)) AND ((@IsNull_longitude = 1 AND [longitude] IS NULL) OR ([longitude] = @Original_longitude)) AND ((@IsNull_private_label_id = 1 AND [private_label_id] IS NULL) OR ([private_label_id] = @Original_private_label_id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_messageTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_messageTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_attachemet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attachemet", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_attachemet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attachemet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phoneUser_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phoneUser_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phoneUser_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phoneUser_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_locationLink", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationLink", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_locationLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationLink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_read", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_read", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_latitude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_longitude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_private_label_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "private_label_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_private_label_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "private_label_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Message] ([messageTime], [message], [attachemet], [type], [shop_id], [phoneUser_id], [locationLink], [is_read], [latitude], [longitude], [private_label_id]) VALUES (@messageTime, @message, @attachemet, @type, @shop_id, @phoneUser_id, @locationLink, @is_read, @latitude, @longitude, @private_label_id);
SELECT ID, messageTime, message, attachemet, type, shop_id, phoneUser_id, locationLink, is_read, latitude, longitude, private_label_id FROM Message WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@messageTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attachemet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attachemet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phoneUser_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phoneUser_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@locationLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_read", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@private_label_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "private_label_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Message] SET [messageTime] = @messageTime, [message] = @message, [a" +
                "ttachemet] = @attachemet, [type] = @type, [shop_id] = @shop_id, [phoneUser_id] =" +
                " @phoneUser_id, [locationLink] = @locationLink, [is_read] = @is_read, [latitude]" +
                " = @latitude, [longitude] = @longitude, [private_label_id] = @private_label_id W" +
                "HERE (([ID] = @Original_ID) AND ((@IsNull_messageTime = 1 AND [messageTime] IS N" +
                "ULL) OR ([messageTime] = @Original_messageTime)) AND ((@IsNull_message = 1 AND [" +
                "message] IS NULL) OR ([message] = @Original_message)) AND ((@IsNull_attachemet =" +
                " 1 AND [attachemet] IS NULL) OR ([attachemet] = @Original_attachemet)) AND ((@Is" +
                "Null_type = 1 AND [type] IS NULL) OR ([type] = @Original_type)) AND ((@IsNull_sh" +
                "op_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNu" +
                "ll_phoneUser_id = 1 AND [phoneUser_id] IS NULL) OR ([phoneUser_id] = @Original_p" +
                "honeUser_id)) AND ((@IsNull_locationLink = 1 AND [locationLink] IS NULL) OR ([lo" +
                "cationLink] = @Original_locationLink)) AND ((@IsNull_is_read = 1 AND [is_read] I" +
                "S NULL) OR ([is_read] = @Original_is_read)) AND ((@IsNull_latitude = 1 AND [lati" +
                "tude] IS NULL) OR ([latitude] = @Original_latitude)) AND ((@IsNull_longitude = 1" +
                " AND [longitude] IS NULL) OR ([longitude] = @Original_longitude)) AND ((@IsNull_" +
                "private_label_id = 1 AND [private_label_id] IS NULL) OR ([private_label_id] = @O" +
                "riginal_private_label_id)));\r\nSELECT ID, messageTime, message, attachemet, type," +
                " shop_id, phoneUser_id, locationLink, is_read, latitude, longitude, private_labe" +
                "l_id FROM Message WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@messageTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@attachemet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attachemet", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phoneUser_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phoneUser_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@locationLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_read", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@private_label_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "private_label_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_messageTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_messageTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_attachemet", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attachemet", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_attachemet", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "attachemet", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phoneUser_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phoneUser_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phoneUser_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phoneUser_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_locationLink", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationLink", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_locationLink", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationLink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_read", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_read", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_read", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_latitude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_longitude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_private_label_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "private_label_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_private_label_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "private_label_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM dbo.Message";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_Message_getDataById";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ID, attachemet, is_read, latitude, locationLink, longitude, message, messa" +
                "geTime, phoneUser_id, private_label_id, shop_id, type FROM Message WHERE (phoneU" +
                "ser_id = @userId) AND (type = @type)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "phoneUser_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT ID, attachemet, is_read, latitude, locationLink, longitude, message, messa" +
                "geTime, phoneUser_id, private_label_id, shop_id, type FROM Message WHERE (phoneU" +
                "ser_id = @userId) AND (shop_id = @shopId) AND (type = @type)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "phoneUser_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.Sp_Unread_Messages";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@messageType", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.MessageDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.MessageDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.MessageDataTable dataTable = new SummitDS.MessageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.MessageDataTable GetDataById(global::System.Nullable<int> iId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.MessageDataTable dataTable = new SummitDS.MessageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.MessageDataTable GetDataByUserIdAndType(global::System.Nullable<int> userId, global::System.Nullable<int> type) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((userId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(userId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.MessageDataTable dataTable = new SummitDS.MessageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.MessageDataTable GetDataByUserShopIdAndType(global::System.Nullable<int> userId, global::System.Nullable<int> shopId, global::System.Nullable<int> type) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((userId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(userId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            SummitDS.MessageDataTable dataTable = new SummitDS.MessageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.MessageDataTable GetUnreadMessages(global::System.Nullable<int> shopID, global::System.Nullable<int> messageType) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((shopID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shopID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((messageType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(messageType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            SummitDS.MessageDataTable dataTable = new SummitDS.MessageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.MessageDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "Message");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, global::System.Nullable<global::System.DateTime> Original_messageTime, string Original_message, string Original_attachemet, global::System.Nullable<int> Original_type, global::System.Nullable<int> Original_shop_id, global::System.Nullable<int> Original_phoneUser_id, string Original_locationLink, global::System.Nullable<bool> Original_is_read, global::System.Nullable<double> Original_latitude, global::System.Nullable<double> Original_longitude, global::System.Nullable<int> Original_private_label_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_messageTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_messageTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_message == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_message));
            }
            if ((Original_attachemet == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_attachemet));
            }
            if ((Original_type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_phoneUser_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_phoneUser_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_locationLink == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_locationLink));
            }
            if ((Original_is_read.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_is_read.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_latitude.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_latitude.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_longitude.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_longitude.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_private_label_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_private_label_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> messageTime, string message, string attachemet, global::System.Nullable<int> type, global::System.Nullable<int> shop_id, global::System.Nullable<int> phoneUser_id, string locationLink, global::System.Nullable<bool> is_read, global::System.Nullable<double> latitude, global::System.Nullable<double> longitude, global::System.Nullable<int> private_label_id) {
            if ((messageTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(messageTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((message == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(message));
            }
            if ((attachemet == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(attachemet));
            }
            if ((type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((phoneUser_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(phoneUser_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((locationLink == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(locationLink));
            }
            if ((is_read.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(is_read.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((latitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(latitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((longitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(longitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((private_label_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(private_label_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> messageTime, 
                    string message, 
                    string attachemet, 
                    global::System.Nullable<int> type, 
                    global::System.Nullable<int> shop_id, 
                    global::System.Nullable<int> phoneUser_id, 
                    string locationLink, 
                    global::System.Nullable<bool> is_read, 
                    global::System.Nullable<double> latitude, 
                    global::System.Nullable<double> longitude, 
                    global::System.Nullable<int> private_label_id, 
                    int Original_ID, 
                    global::System.Nullable<global::System.DateTime> Original_messageTime, 
                    string Original_message, 
                    string Original_attachemet, 
                    global::System.Nullable<int> Original_type, 
                    global::System.Nullable<int> Original_shop_id, 
                    global::System.Nullable<int> Original_phoneUser_id, 
                    string Original_locationLink, 
                    global::System.Nullable<bool> Original_is_read, 
                    global::System.Nullable<double> Original_latitude, 
                    global::System.Nullable<double> Original_longitude, 
                    global::System.Nullable<int> Original_private_label_id, 
                    int ID) {
            if ((messageTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(messageTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((message == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(message));
            }
            if ((attachemet == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(attachemet));
            }
            if ((type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((phoneUser_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(phoneUser_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((locationLink == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(locationLink));
            }
            if ((is_read.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(is_read.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((latitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(latitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((longitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(longitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((private_label_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(private_label_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID));
            if ((Original_messageTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_messageTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_message == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_message));
            }
            if ((Original_attachemet == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_attachemet));
            }
            if ((Original_type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(Original_type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_phoneUser_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_phoneUser_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_locationLink == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_locationLink));
            }
            if ((Original_is_read.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(Original_is_read.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_latitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_latitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_longitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_longitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_private_label_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((int)(Original_private_label_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> messageTime, 
                    string message, 
                    string attachemet, 
                    global::System.Nullable<int> type, 
                    global::System.Nullable<int> shop_id, 
                    global::System.Nullable<int> phoneUser_id, 
                    string locationLink, 
                    global::System.Nullable<bool> is_read, 
                    global::System.Nullable<double> latitude, 
                    global::System.Nullable<double> longitude, 
                    global::System.Nullable<int> private_label_id, 
                    int Original_ID, 
                    global::System.Nullable<global::System.DateTime> Original_messageTime, 
                    string Original_message, 
                    string Original_attachemet, 
                    global::System.Nullable<int> Original_type, 
                    global::System.Nullable<int> Original_shop_id, 
                    global::System.Nullable<int> Original_phoneUser_id, 
                    string Original_locationLink, 
                    global::System.Nullable<bool> Original_is_read, 
                    global::System.Nullable<double> Original_latitude, 
                    global::System.Nullable<double> Original_longitude, 
                    global::System.Nullable<int> Original_private_label_id) {
            return this.Update(messageTime, message, attachemet, type, shop_id, phoneUser_id, locationLink, is_read, latitude, longitude, private_label_id, Original_ID, Original_messageTime, Original_message, Original_attachemet, Original_type, Original_shop_id, Original_phoneUser_id, Original_locationLink, Original_is_read, Original_latitude, Original_longitude, Original_private_label_id, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UserTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "User";
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("first_name", "first_name");
            tableMapping.ColumnMappings.Add("last_name", "last_name");
            tableMapping.ColumnMappings.Add("date_of_birth", "date_of_birth");
            tableMapping.ColumnMappings.Add("city", "city");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("password", "password");
            tableMapping.ColumnMappings.Add("phone_id", "phone_id");
            tableMapping.ColumnMappings.Add("zip", "zip");
            tableMapping.ColumnMappings.Add("appDownLoadDate", "appDownLoadDate");
            tableMapping.ColumnMappings.Add("isRegistred", "isRegistred");
            tableMapping.ColumnMappings.Add("isNew", "isNew");
            tableMapping.ColumnMappings.Add("isRegistred_Shop", "isRegistred_Shop");
            tableMapping.ColumnMappings.Add("isShow", "isShow");
            tableMapping.ColumnMappings.Add("isShowEmailMarketing", "isShowEmailMarketing");
            tableMapping.ColumnMappings.Add("isShowTextMarketing", "isShowTextMarketing");
            tableMapping.ColumnMappings.Add("updatedEntryTime", "updatedEntryTime");
            tableMapping.ColumnMappings.Add("username_id", "username_id");
            tableMapping.ColumnMappings.Add("phone2", "phone2");
            tableMapping.ColumnMappings.Add("isOptOutNotificationSent", "isOptOutNotificationSent");
            tableMapping.ColumnMappings.Add("isOptedOutForMobileMessage", "isOptedOutForMobileMessage");
            tableMapping.ColumnMappings.Add("Device_Type", "Device_Type");
            tableMapping.ColumnMappings.Add("push_notification_device_id", "push_notification_device_id");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("address1", "address1");
            tableMapping.ColumnMappings.Add("address2", "address2");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [User] WHERE (([user_id] = @Original_user_id) AND ((@IsNull_first_nam" +
                "e = 1 AND [first_name] IS NULL) OR ([first_name] = @Original_first_name)) AND ((" +
                "@IsNull_last_name = 1 AND [last_name] IS NULL) OR ([last_name] = @Original_last_" +
                "name)) AND ((@IsNull_date_of_birth = 1 AND [date_of_birth] IS NULL) OR ([date_of" +
                "_birth] = @Original_date_of_birth)) AND ((@IsNull_city = 1 AND [city] IS NULL) O" +
                "R ([city] = @Original_city)) AND ((@IsNull_state = 1 AND [state] IS NULL) OR ([s" +
                "tate] = @Original_state)) AND ((@IsNull_gender = 1 AND [gender] IS NULL) OR ([ge" +
                "nder] = @Original_gender)) AND ((@IsNull_phone = 1 AND [phone] IS NULL) OR ([pho" +
                "ne] = @Original_phone)) AND ((@IsNull_username = 1 AND [username] IS NULL) OR ([" +
                "username] = @Original_username)) AND ((@IsNull_password = 1 AND [password] IS NU" +
                "LL) OR ([password] = @Original_password)) AND ((@IsNull_phone_id = 1 AND [phone_" +
                "id] IS NULL) OR ([phone_id] = @Original_phone_id)) AND ((@IsNull_zip = 1 AND [zi" +
                "p] IS NULL) OR ([zip] = @Original_zip)) AND ((@IsNull_appDownLoadDate = 1 AND [a" +
                "ppDownLoadDate] IS NULL) OR ([appDownLoadDate] = @Original_appDownLoadDate)) AND" +
                " ((@IsNull_isRegistred = 1 AND [isRegistred] IS NULL) OR ([isRegistred] = @Origi" +
                "nal_isRegistred)) AND ((@IsNull_isNew = 1 AND [isNew] IS NULL) OR ([isNew] = @Or" +
                "iginal_isNew)) AND ((@IsNull_isRegistred_Shop = 1 AND [isRegistred_Shop] IS NULL" +
                ") OR ([isRegistred_Shop] = @Original_isRegistred_Shop)) AND ((@IsNull_isShow = 1" +
                " AND [isShow] IS NULL) OR ([isShow] = @Original_isShow)) AND ((@IsNull_isShowEma" +
                "ilMarketing = 1 AND [isShowEmailMarketing] IS NULL) OR ([isShowEmailMarketing] =" +
                " @Original_isShowEmailMarketing)) AND ((@IsNull_isShowTextMarketing = 1 AND [isS" +
                "howTextMarketing] IS NULL) OR ([isShowTextMarketing] = @Original_isShowTextMarke" +
                "ting)) AND ((@IsNull_updatedEntryTime = 1 AND [updatedEntryTime] IS NULL) OR ([u" +
                "pdatedEntryTime] = @Original_updatedEntryTime)) AND ((@IsNull_username_id = 1 AN" +
                "D [username_id] IS NULL) OR ([username_id] = @Original_username_id)) AND ((@IsNu" +
                "ll_phone2 = 1 AND [phone2] IS NULL) OR ([phone2] = @Original_phone2)) AND ((@IsN" +
                "ull_isOptOutNotificationSent = 1 AND [isOptOutNotificationSent] IS NULL) OR ([is" +
                "OptOutNotificationSent] = @Original_isOptOutNotificationSent)) AND ((@IsNull_isO" +
                "ptedOutForMobileMessage = 1 AND [isOptedOutForMobileMessage] IS NULL) OR ([isOpt" +
                "edOutForMobileMessage] = @Original_isOptedOutForMobileMessage)) AND ((@IsNull_De" +
                "vice_Type = 1 AND [Device_Type] IS NULL) OR ([Device_Type] = @Original_Device_Ty" +
                "pe)) AND ((@IsNull_push_notification_device_id = 1 AND [push_notification_device" +
                "_id] IS NULL) OR ([push_notification_device_id] = @Original_push_notification_de" +
                "vice_id)) AND ((@IsNull_email = 1 AND [email] IS NULL) OR ([email] = @Original_e" +
                "mail)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_first_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_first_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_last_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date_of_birth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_birth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date_of_birth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_birth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_username", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_zip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_appDownLoadDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appDownLoadDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_appDownLoadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appDownLoadDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isRegistred", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isRegistred", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isNew", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isNew", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isNew", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isNew", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isRegistred_Shop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred_Shop", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isRegistred_Shop", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred_Shop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShowEmailMarketing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowEmailMarketing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShowEmailMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowEmailMarketing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShowTextMarketing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowTextMarketing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShowTextMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowTextMarketing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_updatedEntryTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "updatedEntryTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_updatedEntryTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "updatedEntryTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_username_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_username_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isOptOutNotificationSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptOutNotificationSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isOptOutNotificationSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptOutNotificationSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isOptedOutForMobileMessage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptedOutForMobileMessage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isOptedOutForMobileMessage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptedOutForMobileMessage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Device_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Device_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Device_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Device_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_push_notification_device_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "push_notification_device_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_push_notification_device_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "push_notification_device_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [User] ([first_name], [last_name], [date_of_birth], [city], [state], [gender], [phone], [username], [password], [phone_id], [zip], [appDownLoadDate], [isRegistred], [isNew], [isRegistred_Shop], [isShow], [isShowEmailMarketing], [isShowTextMarketing], [updatedEntryTime], [username_id], [phone2], [isOptOutNotificationSent], [isOptedOutForMobileMessage], [Device_Type], [push_notification_device_id], [email], [address1], [address2]) VALUES (@first_name, @last_name, @date_of_birth, @city, @state, @gender, @phone, @username, @password, @phone_id, @zip, @appDownLoadDate, @isRegistred, @isNew, @isRegistred_Shop, @isShow, @isShowEmailMarketing, @isShowTextMarketing, @updatedEntryTime, @username_id, @phone2, @isOptOutNotificationSent, @isOptedOutForMobileMessage, @Device_Type, @push_notification_device_id, @email, @address1, @address2);
SELECT user_id, first_name, last_name, date_of_birth, city, state, gender, phone, username, password, phone_id, zip, appDownLoadDate, isRegistred, isNew, isRegistred_Shop, isShow, isShowEmailMarketing, isShowTextMarketing, updatedEntryTime, username_id, phone2, isOptOutNotificationSent, isOptedOutForMobileMessage, Device_Type, push_notification_device_id, email, address1, address2 FROM [User] WHERE (user_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@first_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date_of_birth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_birth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@appDownLoadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appDownLoadDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isRegistred", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isNew", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isNew", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isRegistred_Shop", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred_Shop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShowEmailMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowEmailMarketing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShowTextMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowTextMarketing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@updatedEntryTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "updatedEntryTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@username_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isOptOutNotificationSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptOutNotificationSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isOptedOutForMobileMessage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptedOutForMobileMessage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Device_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Device_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@push_notification_device_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "push_notification_device_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [User] SET [first_name] = @first_name, [last_name] = @last_name, [date_of_" +
                "birth] = @date_of_birth, [city] = @city, [state] = @state, [gender] = @gender, [" +
                "phone] = @phone, [username] = @username, [password] = @password, [phone_id] = @p" +
                "hone_id, [zip] = @zip, [appDownLoadDate] = @appDownLoadDate, [isRegistred] = @is" +
                "Registred, [isNew] = @isNew, [isRegistred_Shop] = @isRegistred_Shop, [isShow] = " +
                "@isShow, [isShowEmailMarketing] = @isShowEmailMarketing, [isShowTextMarketing] =" +
                " @isShowTextMarketing, [updatedEntryTime] = @updatedEntryTime, [username_id] = @" +
                "username_id, [phone2] = @phone2, [isOptOutNotificationSent] = @isOptOutNotificat" +
                "ionSent, [isOptedOutForMobileMessage] = @isOptedOutForMobileMessage, [Device_Typ" +
                "e] = @Device_Type, [push_notification_device_id] = @push_notification_device_id," +
                " [email] = @email, [address1] = @address1, [address2] = @address2 WHERE (([user_" +
                "id] = @Original_user_id) AND ((@IsNull_first_name = 1 AND [first_name] IS NULL) " +
                "OR ([first_name] = @Original_first_name)) AND ((@IsNull_last_name = 1 AND [last_" +
                "name] IS NULL) OR ([last_name] = @Original_last_name)) AND ((@IsNull_date_of_bir" +
                "th = 1 AND [date_of_birth] IS NULL) OR ([date_of_birth] = @Original_date_of_birt" +
                "h)) AND ((@IsNull_city = 1 AND [city] IS NULL) OR ([city] = @Original_city)) AND" +
                " ((@IsNull_state = 1 AND [state] IS NULL) OR ([state] = @Original_state)) AND ((" +
                "@IsNull_gender = 1 AND [gender] IS NULL) OR ([gender] = @Original_gender)) AND (" +
                "(@IsNull_phone = 1 AND [phone] IS NULL) OR ([phone] = @Original_phone)) AND ((@I" +
                "sNull_username = 1 AND [username] IS NULL) OR ([username] = @Original_username))" +
                " AND ((@IsNull_password = 1 AND [password] IS NULL) OR ([password] = @Original_p" +
                "assword)) AND ((@IsNull_phone_id = 1 AND [phone_id] IS NULL) OR ([phone_id] = @O" +
                "riginal_phone_id)) AND ((@IsNull_zip = 1 AND [zip] IS NULL) OR ([zip] = @Origina" +
                "l_zip)) AND ((@IsNull_appDownLoadDate = 1 AND [appDownLoadDate] IS NULL) OR ([ap" +
                "pDownLoadDate] = @Original_appDownLoadDate)) AND ((@IsNull_isRegistred = 1 AND [" +
                "isRegistred] IS NULL) OR ([isRegistred] = @Original_isRegistred)) AND ((@IsNull_" +
                "isNew = 1 AND [isNew] IS NULL) OR ([isNew] = @Original_isNew)) AND ((@IsNull_isR" +
                "egistred_Shop = 1 AND [isRegistred_Shop] IS NULL) OR ([isRegistred_Shop] = @Orig" +
                "inal_isRegistred_Shop)) AND ((@IsNull_isShow = 1 AND [isShow] IS NULL) OR ([isSh" +
                "ow] = @Original_isShow)) AND ((@IsNull_isShowEmailMarketing = 1 AND [isShowEmail" +
                "Marketing] IS NULL) OR ([isShowEmailMarketing] = @Original_isShowEmailMarketing)" +
                ") AND ((@IsNull_isShowTextMarketing = 1 AND [isShowTextMarketing] IS NULL) OR ([" +
                "isShowTextMarketing] = @Original_isShowTextMarketing)) AND ((@IsNull_updatedEntr" +
                "yTime = 1 AND [updatedEntryTime] IS NULL) OR ([updatedEntryTime] = @Original_upd" +
                "atedEntryTime)) AND ((@IsNull_username_id = 1 AND [username_id] IS NULL) OR ([us" +
                "ername_id] = @Original_username_id)) AND ((@IsNull_phone2 = 1 AND [phone2] IS NU" +
                "LL) OR ([phone2] = @Original_phone2)) AND ((@IsNull_isOptOutNotificationSent = 1" +
                " AND [isOptOutNotificationSent] IS NULL) OR ([isOptOutNotificationSent] = @Origi" +
                "nal_isOptOutNotificationSent)) AND ((@IsNull_isOptedOutForMobileMessage = 1 AND " +
                "[isOptedOutForMobileMessage] IS NULL) OR ([isOptedOutForMobileMessage] = @Origin" +
                "al_isOptedOutForMobileMessage)) AND ((@IsNull_Device_Type = 1 AND [Device_Type] " +
                "IS NULL) OR ([Device_Type] = @Original_Device_Type)) AND ((@IsNull_push_notifica" +
                "tion_device_id = 1 AND [push_notification_device_id] IS NULL) OR ([push_notifica" +
                "tion_device_id] = @Original_push_notification_device_id)) AND ((@IsNull_email = " +
                "1 AND [email] IS NULL) OR ([email] = @Original_email)));\r\nSELECT user_id, first_" +
                "name, last_name, date_of_birth, city, state, gender, phone, username, password, " +
                "phone_id, zip, appDownLoadDate, isRegistred, isNew, isRegistred_Shop, isShow, is" +
                "ShowEmailMarketing, isShowTextMarketing, updatedEntryTime, username_id, phone2, " +
                "isOptOutNotificationSent, isOptedOutForMobileMessage, Device_Type, push_notifica" +
                "tion_device_id, email, address1, address2 FROM [User] WHERE (user_id = @user_id)" +
                "";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@first_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date_of_birth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_birth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@gender", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@appDownLoadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appDownLoadDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isRegistred", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isNew", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isNew", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isRegistred_Shop", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred_Shop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShowEmailMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowEmailMarketing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShowTextMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowTextMarketing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@updatedEntryTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "updatedEntryTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@username_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isOptOutNotificationSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptOutNotificationSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isOptedOutForMobileMessage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptedOutForMobileMessage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Device_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Device_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@push_notification_device_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "push_notification_device_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_first_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_first_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "first_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_last_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_date_of_birth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_birth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_date_of_birth", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "date_of_birth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_gender", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_gender", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "gender", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_username", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_username", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_zip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_appDownLoadDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appDownLoadDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_appDownLoadDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "appDownLoadDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isRegistred", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isRegistred", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isNew", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isNew", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isNew", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isNew", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isRegistred_Shop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred_Shop", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isRegistred_Shop", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRegistred_Shop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShowEmailMarketing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowEmailMarketing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShowEmailMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowEmailMarketing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShowTextMarketing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowTextMarketing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShowTextMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowTextMarketing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_updatedEntryTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "updatedEntryTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_updatedEntryTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "updatedEntryTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_username_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_username_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "username_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isOptOutNotificationSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptOutNotificationSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isOptOutNotificationSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptOutNotificationSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isOptedOutForMobileMessage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptedOutForMobileMessage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isOptedOutForMobileMessage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isOptedOutForMobileMessage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Device_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Device_Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Device_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Device_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_push_notification_device_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "push_notification_device_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_push_notification_device_id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "push_notification_device_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[8];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     user_id, first_name, last_name, date_of_birth, city, state, gender, phone, username, password, phone_id, zip, appDownLoadDate, isRegistred, isNew, 
                      isRegistred_Shop, isShow, isShowEmailMarketing, isShowTextMarketing, updatedEntryTime, username_id, phone2, isOptOutNotificationSent, 
                      isOptedOutForMobileMessage, Device_Type, push_notification_device_id, email, address1, address2
FROM         [User]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.user_getDataById";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.SP_User_NewProspects";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zip", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.Sp_User_getDataByPhoneId";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phoneId", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT     user_id, first_name, last_name, date_of_birth, city, state, gender, phone, username, password, phone_id, zip, appDownLoadDate, isRegistred, isNew, 
                      isRegistred_Shop, isShow, isShowEmailMarketing, isShowTextMarketing, updatedEntryTime, username_id, phone2, isOptOutNotificationSent, 
                      isOptedOutForMobileMessage, Device_Type, push_notification_device_id, email, address1, address2
FROM         [User]
WHERE     (phone = @phone)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.Sp_User_getUsersByShopId";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "dbo.GetDataByUserPhoneAndNotificationSent";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "dbo.UpdateUsersForOptOutNotificationSentByPhone";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PhoneNumber", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.UserDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.UserDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.UserDataTable dataTable = new SummitDS.UserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UserDataTable GetDataById(global::System.Nullable<int> iId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.UserDataTable dataTable = new SummitDS.UserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UserDataTable GetDataByNewProspects(string zip) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((zip == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(zip));
            }
            SummitDS.UserDataTable dataTable = new SummitDS.UserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UserDataTable GetDataByPhoneId(string phoneId) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((phoneId == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(phoneId));
            }
            SummitDS.UserDataTable dataTable = new SummitDS.UserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UserDataTable GetDataByPhoneNumber(string phone) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((phone == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(phone));
            }
            SummitDS.UserDataTable dataTable = new SummitDS.UserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UserDataTable GetDataByShopId(global::System.Nullable<int> iShopId) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((iShopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iShopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.UserDataTable dataTable = new SummitDS.UserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.UserDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "User");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_user_id, 
                    string Original_first_name, 
                    string Original_last_name, 
                    global::System.Nullable<global::System.DateTime> Original_date_of_birth, 
                    string Original_city, 
                    string Original_state, 
                    global::System.Nullable<bool> Original_gender, 
                    string Original_phone, 
                    string Original_username, 
                    string Original_password, 
                    string Original_phone_id, 
                    string Original_zip, 
                    global::System.Nullable<global::System.DateTime> Original_appDownLoadDate, 
                    global::System.Nullable<bool> Original_isRegistred, 
                    global::System.Nullable<bool> Original_isNew, 
                    global::System.Nullable<bool> Original_isRegistred_Shop, 
                    global::System.Nullable<bool> Original_isShow, 
                    global::System.Nullable<bool> Original_isShowEmailMarketing, 
                    global::System.Nullable<bool> Original_isShowTextMarketing, 
                    global::System.Nullable<global::System.DateTime> Original_updatedEntryTime, 
                    string Original_username_id, 
                    string Original_phone2, 
                    global::System.Nullable<bool> Original_isOptOutNotificationSent, 
                    global::System.Nullable<bool> Original_isOptedOutForMobileMessage, 
                    global::System.Nullable<int> Original_Device_Type, 
                    string Original_push_notification_device_id, 
                    string Original_email) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_user_id));
            if ((Original_first_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_first_name));
            }
            if ((Original_last_name == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_last_name));
            }
            if ((Original_date_of_birth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_date_of_birth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_city == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_city));
            }
            if ((Original_state == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_state));
            }
            if ((Original_gender.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_gender.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_phone));
            }
            if ((Original_username == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_username));
            }
            if ((Original_password == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_password));
            }
            if ((Original_phone_id == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_phone_id));
            }
            if ((Original_zip == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_zip));
            }
            if ((Original_appDownLoadDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_appDownLoadDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_isRegistred.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_isRegistred.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_isNew.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_isNew.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_isRegistred_Shop.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_isRegistred_Shop.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_isShow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_isShow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_isShowEmailMarketing.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((bool)(Original_isShowEmailMarketing.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_isShowTextMarketing.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_isShowTextMarketing.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_updatedEntryTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_updatedEntryTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_username_id == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_username_id));
            }
            if ((Original_phone2 == null)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_phone2));
            }
            if ((Original_isOptOutNotificationSent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_isOptOutNotificationSent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_isOptedOutForMobileMessage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_isOptedOutForMobileMessage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Device_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_Device_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_push_notification_device_id == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_push_notification_device_id));
            }
            if ((Original_email == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_email));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string first_name, 
                    string last_name, 
                    global::System.Nullable<global::System.DateTime> date_of_birth, 
                    string city, 
                    string state, 
                    global::System.Nullable<bool> gender, 
                    string phone, 
                    string username, 
                    string password, 
                    string phone_id, 
                    string zip, 
                    global::System.Nullable<global::System.DateTime> appDownLoadDate, 
                    global::System.Nullable<bool> isRegistred, 
                    global::System.Nullable<bool> isNew, 
                    global::System.Nullable<bool> isRegistred_Shop, 
                    global::System.Nullable<bool> isShow, 
                    global::System.Nullable<bool> isShowEmailMarketing, 
                    global::System.Nullable<bool> isShowTextMarketing, 
                    global::System.Nullable<global::System.DateTime> updatedEntryTime, 
                    string username_id, 
                    string phone2, 
                    global::System.Nullable<bool> isOptOutNotificationSent, 
                    global::System.Nullable<bool> isOptedOutForMobileMessage, 
                    global::System.Nullable<int> Device_Type, 
                    string push_notification_device_id, 
                    string email, 
                    string address1, 
                    string address2) {
            if ((first_name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(first_name));
            }
            if ((last_name == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(last_name));
            }
            if ((date_of_birth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(date_of_birth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((city == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(city));
            }
            if ((state == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(state));
            }
            if ((gender.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(gender.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((phone == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(phone));
            }
            if ((username == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(username));
            }
            if ((password == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(password));
            }
            if ((phone_id == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(phone_id));
            }
            if ((zip == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(zip));
            }
            if ((appDownLoadDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(appDownLoadDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((isRegistred.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(isRegistred.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((isNew.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(isNew.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((isRegistred_Shop.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(isRegistred_Shop.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((isShow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(isShow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((isShowEmailMarketing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(isShowEmailMarketing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((isShowTextMarketing.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(isShowTextMarketing.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((updatedEntryTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(updatedEntryTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((username_id == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(username_id));
            }
            if ((phone2 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(phone2));
            }
            if ((isOptOutNotificationSent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(isOptOutNotificationSent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((isOptedOutForMobileMessage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(isOptedOutForMobileMessage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Device_Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(Device_Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((push_notification_device_id == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(push_notification_device_id));
            }
            if ((email == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(email));
            }
            if ((address1 == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(address1));
            }
            if ((address2 == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(address2));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string first_name, 
                    string last_name, 
                    global::System.Nullable<global::System.DateTime> date_of_birth, 
                    string city, 
                    string state, 
                    global::System.Nullable<bool> gender, 
                    string phone, 
                    string username, 
                    string password, 
                    string phone_id, 
                    string zip, 
                    global::System.Nullable<global::System.DateTime> appDownLoadDate, 
                    global::System.Nullable<bool> isRegistred, 
                    global::System.Nullable<bool> isNew, 
                    global::System.Nullable<bool> isRegistred_Shop, 
                    global::System.Nullable<bool> isShow, 
                    global::System.Nullable<bool> isShowEmailMarketing, 
                    global::System.Nullable<bool> isShowTextMarketing, 
                    global::System.Nullable<global::System.DateTime> updatedEntryTime, 
                    string username_id, 
                    string phone2, 
                    global::System.Nullable<bool> isOptOutNotificationSent, 
                    global::System.Nullable<bool> isOptedOutForMobileMessage, 
                    global::System.Nullable<int> Device_Type, 
                    string push_notification_device_id, 
                    string email, 
                    string address1, 
                    string address2, 
                    int Original_user_id, 
                    string Original_first_name, 
                    string Original_last_name, 
                    global::System.Nullable<global::System.DateTime> Original_date_of_birth, 
                    string Original_city, 
                    string Original_state, 
                    global::System.Nullable<bool> Original_gender, 
                    string Original_phone, 
                    string Original_username, 
                    string Original_password, 
                    string Original_phone_id, 
                    string Original_zip, 
                    global::System.Nullable<global::System.DateTime> Original_appDownLoadDate, 
                    global::System.Nullable<bool> Original_isRegistred, 
                    global::System.Nullable<bool> Original_isNew, 
                    global::System.Nullable<bool> Original_isRegistred_Shop, 
                    global::System.Nullable<bool> Original_isShow, 
                    global::System.Nullable<bool> Original_isShowEmailMarketing, 
                    global::System.Nullable<bool> Original_isShowTextMarketing, 
                    global::System.Nullable<global::System.DateTime> Original_updatedEntryTime, 
                    string Original_username_id, 
                    string Original_phone2, 
                    global::System.Nullable<bool> Original_isOptOutNotificationSent, 
                    global::System.Nullable<bool> Original_isOptedOutForMobileMessage, 
                    global::System.Nullable<int> Original_Device_Type, 
                    string Original_push_notification_device_id, 
                    string Original_email, 
                    int user_id) {
            if ((first_name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(first_name));
            }
            if ((last_name == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(last_name));
            }
            if ((date_of_birth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(date_of_birth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((city == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(city));
            }
            if ((state == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(state));
            }
            if ((gender.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(gender.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((phone == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(phone));
            }
            if ((username == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(username));
            }
            if ((password == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(password));
            }
            if ((phone_id == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(phone_id));
            }
            if ((zip == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(zip));
            }
            if ((appDownLoadDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(appDownLoadDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((isRegistred.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(isRegistred.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((isNew.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(isNew.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((isRegistred_Shop.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(isRegistred_Shop.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((isShow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(isShow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((isShowEmailMarketing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(isShowEmailMarketing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((isShowTextMarketing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(isShowTextMarketing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((updatedEntryTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(updatedEntryTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((username_id == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(username_id));
            }
            if ((phone2 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(phone2));
            }
            if ((isOptOutNotificationSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(isOptOutNotificationSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((isOptedOutForMobileMessage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(isOptedOutForMobileMessage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Device_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Device_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((push_notification_device_id == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(push_notification_device_id));
            }
            if ((email == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(email));
            }
            if ((address1 == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(address1));
            }
            if ((address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(address2));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_user_id));
            if ((Original_first_name == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_first_name));
            }
            if ((Original_last_name == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_last_name));
            }
            if ((Original_date_of_birth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_date_of_birth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_city == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_city));
            }
            if ((Original_state == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_state));
            }
            if ((Original_gender.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(Original_gender.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_phone));
            }
            if ((Original_username == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_username));
            }
            if ((Original_password == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_password));
            }
            if ((Original_phone_id == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_phone_id));
            }
            if ((Original_zip == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_zip));
            }
            if ((Original_appDownLoadDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((System.DateTime)(Original_appDownLoadDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_isRegistred.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(Original_isRegistred.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_isNew.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_isNew.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_isRegistred_Shop.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_isRegistred_Shop.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_isShow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(Original_isShow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_isShowEmailMarketing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_isShowEmailMarketing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_isShowTextMarketing.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_isShowTextMarketing.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_updatedEntryTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((System.DateTime)(Original_updatedEntryTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_username_id == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_username_id));
            }
            if ((Original_phone2 == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_phone2));
            }
            if ((Original_isOptOutNotificationSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((bool)(Original_isOptOutNotificationSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_isOptedOutForMobileMessage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((bool)(Original_isOptedOutForMobileMessage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_Device_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(Original_Device_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_push_notification_device_id == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_push_notification_device_id));
            }
            if ((Original_email == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(Original_email));
            }
            this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(user_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string first_name, 
                    string last_name, 
                    global::System.Nullable<global::System.DateTime> date_of_birth, 
                    string city, 
                    string state, 
                    global::System.Nullable<bool> gender, 
                    string phone, 
                    string username, 
                    string password, 
                    string phone_id, 
                    string zip, 
                    global::System.Nullable<global::System.DateTime> appDownLoadDate, 
                    global::System.Nullable<bool> isRegistred, 
                    global::System.Nullable<bool> isNew, 
                    global::System.Nullable<bool> isRegistred_Shop, 
                    global::System.Nullable<bool> isShow, 
                    global::System.Nullable<bool> isShowEmailMarketing, 
                    global::System.Nullable<bool> isShowTextMarketing, 
                    global::System.Nullable<global::System.DateTime> updatedEntryTime, 
                    string username_id, 
                    string phone2, 
                    global::System.Nullable<bool> isOptOutNotificationSent, 
                    global::System.Nullable<bool> isOptedOutForMobileMessage, 
                    global::System.Nullable<int> Device_Type, 
                    string push_notification_device_id, 
                    string email, 
                    string address1, 
                    string address2, 
                    int Original_user_id, 
                    string Original_first_name, 
                    string Original_last_name, 
                    global::System.Nullable<global::System.DateTime> Original_date_of_birth, 
                    string Original_city, 
                    string Original_state, 
                    global::System.Nullable<bool> Original_gender, 
                    string Original_phone, 
                    string Original_username, 
                    string Original_password, 
                    string Original_phone_id, 
                    string Original_zip, 
                    global::System.Nullable<global::System.DateTime> Original_appDownLoadDate, 
                    global::System.Nullable<bool> Original_isRegistred, 
                    global::System.Nullable<bool> Original_isNew, 
                    global::System.Nullable<bool> Original_isRegistred_Shop, 
                    global::System.Nullable<bool> Original_isShow, 
                    global::System.Nullable<bool> Original_isShowEmailMarketing, 
                    global::System.Nullable<bool> Original_isShowTextMarketing, 
                    global::System.Nullable<global::System.DateTime> Original_updatedEntryTime, 
                    string Original_username_id, 
                    string Original_phone2, 
                    global::System.Nullable<bool> Original_isOptOutNotificationSent, 
                    global::System.Nullable<bool> Original_isOptedOutForMobileMessage, 
                    global::System.Nullable<int> Original_Device_Type, 
                    string Original_push_notification_device_id, 
                    string Original_email) {
            return this.Update(first_name, last_name, date_of_birth, city, state, gender, phone, username, password, phone_id, zip, appDownLoadDate, isRegistred, isNew, isRegistred_Shop, isShow, isShowEmailMarketing, isShowTextMarketing, updatedEntryTime, username_id, phone2, isOptOutNotificationSent, isOptedOutForMobileMessage, Device_Type, push_notification_device_id, email, address1, address2, Original_user_id, Original_first_name, Original_last_name, Original_date_of_birth, Original_city, Original_state, Original_gender, Original_phone, Original_username, Original_password, Original_phone_id, Original_zip, Original_appDownLoadDate, Original_isRegistred, Original_isNew, Original_isRegistred_Shop, Original_isShow, Original_isShowEmailMarketing, Original_isShowTextMarketing, Original_updatedEntryTime, Original_username_id, Original_phone2, Original_isOptOutNotificationSent, Original_isOptedOutForMobileMessage, Original_Device_Type, Original_push_notification_device_id, Original_email, Original_user_id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetDataByUserPhoneAndNotificationSent(string PhoneNumber) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[6];
            if ((PhoneNumber == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(PhoneNumber));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object UpdateUsersForOptOutNotificationSentByPhone(string PhoneNumber) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[7];
            if ((PhoneNumber == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(PhoneNumber));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class User_PreferredShopTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public User_PreferredShopTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "User_PreferredShop";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[User_PreferredShop] WHERE (([ID] = @Original_ID) AND ((@IsNull" +
                "_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@I" +
                "sNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[User_PreferredShop] ([user_id], [shop_id]) VALUES (@user_id, @" +
                "shop_id);\r\nSELECT ID, user_id, shop_id FROM User_PreferredShop WHERE (ID = SCOPE" +
                "_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[User_PreferredShop] SET [user_id] = @user_id, [shop_id] = @shop_id WHERE (([ID] = @Original_ID) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)));
SELECT ID, user_id, shop_id FROM User_PreferredShop WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, user_id, shop_id FROM dbo.User_PreferredShop";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_PreferredShop_getDataByUserId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iUserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.User_PreferredShopDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.User_PreferredShopDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.User_PreferredShopDataTable dataTable = new SummitDS.User_PreferredShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.User_PreferredShopDataTable GetDataByUserId(global::System.Nullable<int> iUserId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iUserId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iUserId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.User_PreferredShopDataTable dataTable = new SummitDS.User_PreferredShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.User_PreferredShopDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "User_PreferredShop");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id, int Original_ID, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id, int ID) {
            if ((user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id, int Original_ID, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id) {
            return this.Update(user_id, shop_id, Original_ID, Original_user_id, Original_shop_id, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ZipCodeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ZipCodeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ZipCode";
            tableMapping.ColumnMappings.Add("Code_id", "Code_id");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            tableMapping.ColumnMappings.Add("Login_id", "Login_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ZipCode] WHERE (([Code_id] = @Original_Code_id) AND ([Zip] = @" +
                "Original_Zip) AND ([Login_id] = @Original_Login_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Login_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ZipCode] ([Zip], [Login_id]) VALUES (@Zip, @Login_id);\r\nSELECT" +
                " Code_id, Zip, Login_id FROM ZipCode WHERE (Code_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Login_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ZipCode] SET [Zip] = @Zip, [Login_id] = @Login_id WHERE (([Code_id]" +
                " = @Original_Code_id) AND ([Zip] = @Original_Zip) AND ([Login_id] = @Original_Lo" +
                "gin_id));\r\nSELECT Code_id, Zip, Login_id FROM ZipCode WHERE (Code_id = @Code_id)" +
                "";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Login_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Code_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Code_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Login_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Login_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Code_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Code_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Code_id, Zip, Login_id FROM dbo.ZipCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_ZipCode_getDataById";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.Sp_ZipCode_getDataByLoginId";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iLoginId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.ZipCodeDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.ZipCodeDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.ZipCodeDataTable dataTable = new SummitDS.ZipCodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ZipCodeDataTable GetDataById(global::System.Nullable<int> iId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.ZipCodeDataTable dataTable = new SummitDS.ZipCodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ZipCodeDataTable GetDataByLoginId(global::System.Nullable<int> iLoginId) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((iLoginId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iLoginId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.ZipCodeDataTable dataTable = new SummitDS.ZipCodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.ZipCodeDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "ZipCode");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Code_id, string Original_Zip, int Original_Login_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Code_id));
            if ((Original_Zip == null)) {
                throw new global::System.ArgumentNullException("Original_Zip");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Zip));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Login_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Zip, int Login_id) {
            if ((Zip == null)) {
                throw new global::System.ArgumentNullException("Zip");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Zip));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Login_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Zip, int Login_id, int Original_Code_id, string Original_Zip, int Original_Login_id, int Code_id) {
            if ((Zip == null)) {
                throw new global::System.ArgumentNullException("Zip");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Zip));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Login_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Code_id));
            if ((Original_Zip == null)) {
                throw new global::System.ArgumentNullException("Original_Zip");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Zip));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Login_id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Code_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Zip, int Login_id, int Original_Code_id, string Original_Zip, int Original_Login_id) {
            return this.Update(Zip, Login_id, Original_Code_id, Original_Zip, Original_Login_id, Original_Code_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UnreadUsersFromRepairProspectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UnreadUsersFromRepairProspectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UnreadUsersFromRepairProspect";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[UnreadUsersFromRepairProspect] WHERE (([id] = @Original_id) AN" +
                "D ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id" +
                ")) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_sh" +
                "op_id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[UnreadUsersFromRepairProspect] ([user_id], [shop_id]) VALUES (" +
                "@user_id, @shop_id);\r\nSELECT id, user_id, shop_id FROM UnreadUsersFromRepairPros" +
                "pect WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[UnreadUsersFromRepairProspect] SET [user_id] = @user_id, [shop_id] = @shop_id WHERE (([id] = @Original_id) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)));
SELECT id, user_id, shop_id FROM UnreadUsersFromRepairProspect WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, user_id, shop_id FROM dbo.UnreadUsersFromRepairProspect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_UnreadUsersFromRepairProspect_getDataById";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iUserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.SP_Search_UnReadRepairProspects";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zip", global::System.Data.SqlDbType.VarChar, 250, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.sp_search_UnReadUserByUserId";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.UnreadUsersFromRepairProspectDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.UnreadUsersFromRepairProspectDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.UnreadUsersFromRepairProspectDataTable dataTable = new SummitDS.UnreadUsersFromRepairProspectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UnreadUsersFromRepairProspectDataTable GetDataByShopIdAndUserId(global::System.Nullable<int> iShopId, global::System.Nullable<int> iUserId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iShopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iShopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((iUserId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(iUserId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            SummitDS.UnreadUsersFromRepairProspectDataTable dataTable = new SummitDS.UnreadUsersFromRepairProspectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UnreadUsersFromRepairProspectDataTable GetUnReadRepairProspects(string zip, global::System.Nullable<int> userId) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((zip == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(zip));
            }
            if ((userId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(userId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            SummitDS.UnreadUsersFromRepairProspectDataTable dataTable = new SummitDS.UnreadUsersFromRepairProspectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UnreadUsersFromRepairProspectDataTable GetUnreadUserByUserId(global::System.Nullable<int> userId) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((userId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(userId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.UnreadUsersFromRepairProspectDataTable dataTable = new SummitDS.UnreadUsersFromRepairProspectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.UnreadUsersFromRepairProspectDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "UnreadUsersFromRepairProspect");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id, int Original_id, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id, int id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id, int Original_id, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id) {
            return this.Update(user_id, shop_id, Original_id, Original_user_id, Original_shop_id, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DeletedUsersFromRepairProspectTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DeletedUsersFromRepairProspectTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DeletedUsersFromRepairProspect";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[DeletedUsersFromRepairProspect] WHERE (([ID] = @Original_ID) A" +
                "ND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_i" +
                "d)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_s" +
                "hop_id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DeletedUsersFromRepairProspect] ([user_id], [shop_id]) VALUES " +
                "(@user_id, @shop_id);\r\nSELECT ID, user_id, shop_id FROM DeletedUsersFromRepairPr" +
                "ospect WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[DeletedUsersFromRepairProspect] SET [user_id] = @user_id, [shop_id] = @shop_id WHERE (([ID] = @Original_ID) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)));
SELECT ID, user_id, shop_id FROM DeletedUsersFromRepairProspect WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, user_id, shop_id FROM dbo.DeletedUsersFromRepairProspect";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_DeleteAll_DeletedUsersFromRepairProspect_ByUserId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.Sp_DeletedUsersFromRepairProspect_getDataById";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iUserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.DeletedUsersFromRepairProspectDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.DeletedUsersFromRepairProspectDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.DeletedUsersFromRepairProspectDataTable dataTable = new SummitDS.DeletedUsersFromRepairProspectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.DeletedUsersFromRepairProspectDataTable GetDataByShopIdAndUserId(global::System.Nullable<int> iShopId, global::System.Nullable<int> iUserId) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((iShopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iShopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((iUserId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(iUserId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            SummitDS.DeletedUsersFromRepairProspectDataTable dataTable = new SummitDS.DeletedUsersFromRepairProspectDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.DeletedUsersFromRepairProspectDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "DeletedUsersFromRepairProspect");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id, int Original_ID, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id, int ID) {
            if ((user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> user_id, global::System.Nullable<int> shop_id, int Original_ID, global::System.Nullable<int> Original_user_id, global::System.Nullable<int> Original_shop_id) {
            return this.Update(user_id, shop_id, Original_ID, Original_user_id, Original_shop_id, Original_ID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object DeleteAllByUserId(global::System.Nullable<int> UserId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((UserId.HasValue == true)) {
                command.Parameters[1].Value = ((int)(UserId.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MarketingUsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MarketingUsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MarketingUsers";
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("isShowInProcess", "isShowInProcess");
            tableMapping.ColumnMappings.Add("contactMethod", "contactMethod");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[MarketingUsers] WHERE (([shop_id] = @Original_shop_id) AND ([user_id] = @Original_user_id) AND ((@IsNull_isShowInProcess = 1 AND [isShowInProcess] IS NULL) OR ([isShowInProcess] = @Original_isShowInProcess)) AND ((@IsNull_contactMethod = 1 AND [contactMethod] IS NULL) OR ([contactMethod] = @Original_contactMethod)) AND ([vehicle_id] = @Original_vehicle_id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShowInProcess", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowInProcess", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShowInProcess", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowInProcess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_contactMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contactMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_contactMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contactMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[MarketingUsers] ([shop_id], [user_id], [isShowInProcess], [contactMethod], [vehicle_id]) VALUES (@shop_id, @user_id, @isShowInProcess, @contactMethod, @vehicle_id);
SELECT shop_id, user_id, isShowInProcess, contactMethod, vehicle_id FROM MarketingUsers WHERE (shop_id = @shop_id) AND (user_id = @user_id) AND (vehicle_id = @vehicle_id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShowInProcess", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowInProcess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contactMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contactMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[MarketingUsers] SET [shop_id] = @shop_id, [user_id] = @user_id, [isShowInProcess] = @isShowInProcess, [contactMethod] = @contactMethod, [vehicle_id] = @vehicle_id WHERE (([shop_id] = @Original_shop_id) AND ([user_id] = @Original_user_id) AND ((@IsNull_isShowInProcess = 1 AND [isShowInProcess] IS NULL) OR ([isShowInProcess] = @Original_isShowInProcess)) AND ((@IsNull_contactMethod = 1 AND [contactMethod] IS NULL) OR ([contactMethod] = @Original_contactMethod)) AND ([vehicle_id] = @Original_vehicle_id));
SELECT shop_id, user_id, isShowInProcess, contactMethod, vehicle_id FROM MarketingUsers WHERE (shop_id = @shop_id) AND (user_id = @user_id) AND (vehicle_id = @vehicle_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShowInProcess", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowInProcess", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@contactMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contactMethod", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShowInProcess", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowInProcess", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShowInProcess", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShowInProcess", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_contactMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contactMethod", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_contactMethod", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "contactMethod", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT shop_id, user_id, isShowInProcess, contactMethod, vehicle_id FROM dbo.Mark" +
                "etingUsers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT contactMethod, isShowInProcess, shop_id, user_id, vehicle_id FROM Marketin" +
                "gUsers WHERE (shop_id = @shopId) AND (user_id = @userId)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT contactMethod, isShowInProcess, shop_id, user_id, vehicle_id FROM Marketin" +
                "gUsers WHERE (shop_id = @shopId)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT contactMethod, isShowInProcess, shop_id, user_id, vehicle_id FROM Marketin" +
                "gUsers WHERE (shop_id = @shopId) AND (user_id = @userId) AND (vehicle_id = @vehi" +
                "cleId)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicleId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.MarketingUsersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.MarketingUsersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.MarketingUsersDataTable dataTable = new SummitDS.MarketingUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.MarketingUsersDataTable GetDataByShopAndUserId(int shopId, int userId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shopId));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(userId));
            SummitDS.MarketingUsersDataTable dataTable = new SummitDS.MarketingUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.MarketingUsersDataTable GetDataByShopId(int shopId) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shopId));
            SummitDS.MarketingUsersDataTable dataTable = new SummitDS.MarketingUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.MarketingUsersDataTable GetDataByShopUserAndVehicleId(int shopId, int userId, int vehicleId) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shopId));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(userId));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(vehicleId));
            SummitDS.MarketingUsersDataTable dataTable = new SummitDS.MarketingUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.MarketingUsersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "MarketingUsers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_shop_id, int Original_user_id, global::System.Nullable<bool> Original_isShowInProcess, global::System.Nullable<int> Original_contactMethod, int Original_vehicle_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_shop_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_user_id));
            if ((Original_isShowInProcess.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_isShowInProcess.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_contactMethod.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_contactMethod.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_vehicle_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int shop_id, int user_id, global::System.Nullable<bool> isShowInProcess, global::System.Nullable<int> contactMethod, int vehicle_id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(shop_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(user_id));
            if ((isShowInProcess.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(isShowInProcess.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((contactMethod.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(contactMethod.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(vehicle_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int shop_id, int user_id, global::System.Nullable<bool> isShowInProcess, global::System.Nullable<int> contactMethod, int vehicle_id, int Original_shop_id, int Original_user_id, global::System.Nullable<bool> Original_isShowInProcess, global::System.Nullable<int> Original_contactMethod, int Original_vehicle_id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(shop_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(user_id));
            if ((isShowInProcess.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(isShowInProcess.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((contactMethod.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(contactMethod.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(vehicle_id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_shop_id));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_user_id));
            if ((Original_isShowInProcess.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_isShowInProcess.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_contactMethod.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_contactMethod.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_vehicle_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<bool> isShowInProcess, global::System.Nullable<int> contactMethod, int Original_shop_id, int Original_user_id, global::System.Nullable<bool> Original_isShowInProcess, global::System.Nullable<int> Original_contactMethod, int Original_vehicle_id) {
            return this.Update(Original_shop_id, Original_user_id, isShowInProcess, contactMethod, Original_vehicle_id, Original_shop_id, Original_user_id, Original_isShowInProcess, Original_contactMethod, Original_vehicle_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_Search_InProcessUsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SP_Search_InProcessUsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_Search_InProcessUsers";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("shop_name", "shop_name");
            tableMapping.ColumnMappings.Add("userVehicleStatusId", "userVehicleStatusId");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("dateIn", "dateIn");
            tableMapping.ColumnMappings.Add("dateOut", "dateOut");
            tableMapping.ColumnMappings.Add("year", "year");
            tableMapping.ColumnMappings.Add("make", "make");
            tableMapping.ColumnMappings.Add("model", "model");
            tableMapping.ColumnMappings.Add("vehicleStatus", "vehicleStatus");
            tableMapping.ColumnMappings.Add("contactMethod", "contactMethod");
            tableMapping.ColumnMappings.Add("claim_number", "claim_number");
            tableMapping.ColumnMappings.Add("ro_Identifier", "ro_Identifier");
            tableMapping.ColumnMappings.Add("agent_name", "agent_name");
            tableMapping.ColumnMappings.Add("company_name", "company_name");
            tableMapping.ColumnMappings.Add("net_ Total_Amount", "net_ Total_Amount");
            tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
            tableMapping.ColumnMappings.Add("updatedDate", "updatedDate");
            tableMapping.ColumnMappings.Add("estimate_file_identifier", "estimate_file_identifier");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_Search_InProcessUsers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.GetDeletedInProcessUsers";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.GetDeletedUsers";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.SP_Search_InProcessUsersDataTable dataTable, global::System.Nullable<int> shop_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((shop_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.SP_Search_InProcessUsersDataTable GetData(global::System.Nullable<int> shop_id) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((shop_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.SP_Search_InProcessUsersDataTable dataTable = new SummitDS.SP_Search_InProcessUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.SP_Search_InProcessUsersDataTable GetDeletedInProcessUsers(global::System.Nullable<int> shop_id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((shop_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.SP_Search_InProcessUsersDataTable dataTable = new SummitDS.SP_Search_InProcessUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.SP_Search_InProcessUsersDataTable GetDeletedUsers(global::System.Nullable<int> shop_id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((shop_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.SP_Search_InProcessUsersDataTable dataTable = new SummitDS.SP_Search_InProcessUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SP_Search_EmailTextMarketingCentersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SP_Search_EmailTextMarketingCentersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SP_Search_EmailTextMarketingCenters";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("userName", "userName");
            tableMapping.ColumnMappings.Add("zip", "zip");
            tableMapping.ColumnMappings.Add("appDownLoadDate", "appDownLoadDate");
            tableMapping.ColumnMappings.Add("model", "model");
            tableMapping.ColumnMappings.Add("make", "make");
            tableMapping.ColumnMappings.Add("year", "year");
            tableMapping.ColumnMappings.Add("updatedEntryTime", "updatedEntryTime");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("claim_number", "claim_number");
            tableMapping.ColumnMappings.Add("ro_Identifier", "ro_Identifier");
            tableMapping.ColumnMappings.Add("agent_name", "agent_name");
            tableMapping.ColumnMappings.Add("company_name", "company_name");
            tableMapping.ColumnMappings.Add("net_ Total_Amount", "net_ Total_Amount");
            tableMapping.ColumnMappings.Add("deliverydate", "deliverydate");
            tableMapping.ColumnMappings.Add("isShowEmailMarketing", "isShowEmailMarketing");
            tableMapping.ColumnMappings.Add("isShowTextMarketing", "isShowTextMarketing");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.SP_Search_EmailTextMarketingCenters";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.SP_Search_EmailTextMarketingCentersDataTable dataTable, global::System.Nullable<int> shopId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.SP_Search_EmailTextMarketingCentersDataTable GetData(global::System.Nullable<int> shopId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.SP_Search_EmailTextMarketingCentersDataTable dataTable = new SummitDS.SP_Search_EmailTextMarketingCentersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BodyShop_PrivateLabelTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BodyShop_PrivateLabelTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BodyShop_PrivateLabel";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("private_label_id", "private_label_id");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("page_logo_path", "page_logo_path");
            tableMapping.ColumnMappings.Add("btn_logo_path", "btn_logo_path");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BodyShop_PrivateLabel.id, private_label_id, shop_id, PrivateLabel.page_log" +
                "o_path, PrivateLabel.btn_logo_path FROM dbo.BodyShop_PrivateLabel\r\n\t left join d" +
                "bo.PrivateLabel \r\non BodyShop_PrivateLabel.private_label_id = PrivateLabel.id";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT BodyShop_PrivateLabel.id, private_label_id, shop_id, PrivateLabel.page_logo_path, PrivateLabel.btn_logo_path FROM dbo.BodyShop_PrivateLabel
	 left join dbo.PrivateLabel 
on BodyShop_PrivateLabel.private_label_id = PrivateLabel.id
Where private_label_id = @PrivateLabelId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrivateLabelId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "private_label_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.BodyShop_PrivateLabelDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.BodyShop_PrivateLabelDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.BodyShop_PrivateLabelDataTable dataTable = new SummitDS.BodyShop_PrivateLabelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShop_PrivateLabelDataTable GetShopListByPrivateLabelId(global::System.Nullable<int> PrivateLabelId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((PrivateLabelId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(PrivateLabelId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SummitDS.BodyShop_PrivateLabelDataTable dataTable = new SummitDS.BodyShop_PrivateLabelDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CampaignTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CampaignTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Campaign";
            tableMapping.ColumnMappings.Add("campaign_id", "campaign_id");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("message", "message");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("isEmail", "isEmail");
            tableMapping.ColumnMappings.Add("createddate", "createddate");
            tableMapping.ColumnMappings.Add("is_zip_code_matches_message", "is_zip_code_matches_message");
            tableMapping.ColumnMappings.Add("is_preferred_shop_message", "is_preferred_shop_message");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Campaign] WHERE (([campaign_id] = @Original_campaign_id) AND ([name] = @Original_name) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_isEmail = 1 AND [isEmail] IS NULL) OR ([isEmail] = @Original_isEmail)) AND ((@IsNull_createddate = 1 AND [createddate] IS NULL) OR ([createddate] = @Original_createddate)) AND ((@IsNull_is_zip_code_matches_message = 1 AND [is_zip_code_matches_message] IS NULL) OR ([is_zip_code_matches_message] = @Original_is_zip_code_matches_message)) AND ((@IsNull_is_preferred_shop_message = 1 AND [is_preferred_shop_message] IS NULL) OR ([is_preferred_shop_message] = @Original_is_preferred_shop_message)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_campaign_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "campaign_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isEmail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_createddate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createddate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createddate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_zip_code_matches_message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_zip_code_matches_message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_zip_code_matches_message", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_zip_code_matches_message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_preferred_shop_message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_preferred_shop_message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_preferred_shop_message", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_preferred_shop_message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Campaign] ([name], [message], [shop_id], [isEmail], [createddate], [is_zip_code_matches_message], [is_preferred_shop_message]) VALUES (@name, @message, @shop_id, @isEmail, @createddate, @is_zip_code_matches_message, @is_preferred_shop_message);
SELECT campaign_id, name, message, shop_id, isEmail, createddate, is_zip_code_matches_message, is_preferred_shop_message FROM Campaign WHERE (campaign_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isEmail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createddate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_zip_code_matches_message", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_zip_code_matches_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_preferred_shop_message", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_preferred_shop_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Campaign] SET [name] = @name, [message] = @message, [shop_id] = @shop_id, [isEmail] = @isEmail, [createddate] = @createddate, [is_zip_code_matches_message] = @is_zip_code_matches_message, [is_preferred_shop_message] = @is_preferred_shop_message WHERE (([campaign_id] = @Original_campaign_id) AND ([name] = @Original_name) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_isEmail = 1 AND [isEmail] IS NULL) OR ([isEmail] = @Original_isEmail)) AND ((@IsNull_createddate = 1 AND [createddate] IS NULL) OR ([createddate] = @Original_createddate)) AND ((@IsNull_is_zip_code_matches_message = 1 AND [is_zip_code_matches_message] IS NULL) OR ([is_zip_code_matches_message] = @Original_is_zip_code_matches_message)) AND ((@IsNull_is_preferred_shop_message = 1 AND [is_preferred_shop_message] IS NULL) OR ([is_preferred_shop_message] = @Original_is_preferred_shop_message)));
SELECT campaign_id, name, message, shop_id, isEmail, createddate, is_zip_code_matches_message, is_preferred_shop_message FROM Campaign WHERE (campaign_id = @campaign_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isEmail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@createddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createddate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_zip_code_matches_message", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_zip_code_matches_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@is_preferred_shop_message", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_preferred_shop_message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_campaign_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "campaign_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isEmail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_createddate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createddate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_createddate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "createddate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_zip_code_matches_message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_zip_code_matches_message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_zip_code_matches_message", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_zip_code_matches_message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_is_preferred_shop_message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_preferred_shop_message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_is_preferred_shop_message", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "is_preferred_shop_message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@campaign_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "campaign_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT campaign_id, name, message, shop_id, isEmail, createddate, is_zip_code_mat" +
                "ches_message, is_preferred_shop_message FROM dbo.Campaign";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT campaign_id, name, message, shop_id, isEmail, createddate, is_zip_code_mat" +
                "ches_message, is_preferred_shop_message FROM dbo.Campaign WHERE shop_id = @shop_" +
                "id AND is_preferred_shop_message = 1";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT campaign_id, name, message, shop_id, isEmail, createddate, is_zip_code_mat" +
                "ches_message, is_preferred_shop_message FROM dbo.Campaign WHERE shop_id = @shop_" +
                "id AND  is_zip_code_matches_message= 1";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.CampaignDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.CampaignDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.CampaignDataTable dataTable = new SummitDS.CampaignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.CampaignDataTable GetPreferredShopMessageByShopId(global::System.Nullable<int> shop_id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((shop_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SummitDS.CampaignDataTable dataTable = new SummitDS.CampaignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.CampaignDataTable GetZipCodeMatchesMessageByShopId(global::System.Nullable<int> shop_id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((shop_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SummitDS.CampaignDataTable dataTable = new SummitDS.CampaignDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.CampaignDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "Campaign");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_campaign_id, string Original_name, global::System.Nullable<int> Original_shop_id, global::System.Nullable<bool> Original_isEmail, global::System.Nullable<global::System.DateTime> Original_createddate, global::System.Nullable<bool> Original_is_zip_code_matches_message, global::System.Nullable<bool> Original_is_preferred_shop_message) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_campaign_id));
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_name));
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_isEmail.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_isEmail.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_createddate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_createddate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_is_zip_code_matches_message.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_is_zip_code_matches_message.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_is_preferred_shop_message.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_is_preferred_shop_message.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string name, string message, global::System.Nullable<int> shop_id, global::System.Nullable<bool> isEmail, global::System.Nullable<global::System.DateTime> createddate, global::System.Nullable<bool> is_zip_code_matches_message, global::System.Nullable<bool> is_preferred_shop_message) {
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(name));
            }
            if ((message == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(message));
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((isEmail.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(isEmail.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((createddate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(createddate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((is_zip_code_matches_message.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(is_zip_code_matches_message.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((is_preferred_shop_message.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(is_preferred_shop_message.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string name, string message, global::System.Nullable<int> shop_id, global::System.Nullable<bool> isEmail, global::System.Nullable<global::System.DateTime> createddate, global::System.Nullable<bool> is_zip_code_matches_message, global::System.Nullable<bool> is_preferred_shop_message, int Original_campaign_id, string Original_name, global::System.Nullable<int> Original_shop_id, global::System.Nullable<bool> Original_isEmail, global::System.Nullable<global::System.DateTime> Original_createddate, global::System.Nullable<bool> Original_is_zip_code_matches_message, global::System.Nullable<bool> Original_is_preferred_shop_message, int campaign_id) {
            if ((name == null)) {
                throw new global::System.ArgumentNullException("name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(name));
            }
            if ((message == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(message));
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((isEmail.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(isEmail.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((createddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(createddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((is_zip_code_matches_message.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(is_zip_code_matches_message.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((is_preferred_shop_message.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(is_preferred_shop_message.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_campaign_id));
            if ((Original_name == null)) {
                throw new global::System.ArgumentNullException("Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_name));
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_isEmail.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(Original_isEmail.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_createddate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_createddate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_is_zip_code_matches_message.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_is_zip_code_matches_message.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_is_preferred_shop_message.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Original_is_preferred_shop_message.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(campaign_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string name, string message, global::System.Nullable<int> shop_id, global::System.Nullable<bool> isEmail, global::System.Nullable<global::System.DateTime> createddate, global::System.Nullable<bool> is_zip_code_matches_message, global::System.Nullable<bool> is_preferred_shop_message, int Original_campaign_id, string Original_name, global::System.Nullable<int> Original_shop_id, global::System.Nullable<bool> Original_isEmail, global::System.Nullable<global::System.DateTime> Original_createddate, global::System.Nullable<bool> Original_is_zip_code_matches_message, global::System.Nullable<bool> Original_is_preferred_shop_message) {
            return this.Update(name, message, shop_id, isEmail, createddate, is_zip_code_matches_message, is_preferred_shop_message, Original_campaign_id, Original_name, Original_shop_id, Original_isEmail, Original_createddate, Original_is_zip_code_matches_message, Original_is_preferred_shop_message, Original_campaign_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CommunicationHistoryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CommunicationHistoryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CommunicationHistory";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Shop_Id", "Shop_Id");
            tableMapping.ColumnMappings.Add("User_Id", "User_Id");
            tableMapping.ColumnMappings.Add("CommunicationType", "CommunicationType");
            tableMapping.ColumnMappings.Add("MessageText", "MessageText");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("FromAppSection", "FromAppSection");
            tableMapping.ColumnMappings.Add("MessageId", "MessageId");
            tableMapping.ColumnMappings.Add("DeliveryStatus", "DeliveryStatus");
            tableMapping.ColumnMappings.Add("DeliveryDate", "DeliveryDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CommunicationHistory] WHERE (([ID] = @Original_ID) AND ((@IsNull_Shop_Id = 1 AND [Shop_Id] IS NULL) OR ([Shop_Id] = @Original_Shop_Id)) AND ((@IsNull_User_Id = 1 AND [User_Id] IS NULL) OR ([User_Id] = @Original_User_Id)) AND ((@IsNull_CommunicationType = 1 AND [CommunicationType] IS NULL) OR ([CommunicationType] = @Original_CommunicationType)) AND ((@IsNull_CreatedDate = 1 AND [CreatedDate] IS NULL) OR ([CreatedDate] = @Original_CreatedDate)) AND ((@IsNull_Phone = 1 AND [Phone] IS NULL) OR ([Phone] = @Original_Phone)) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)) AND ((@IsNull_FromAppSection = 1 AND [FromAppSection] IS NULL) OR ([FromAppSection] = @Original_FromAppSection)) AND ((@IsNull_MessageId = 1 AND [MessageId] IS NULL) OR ([MessageId] = @Original_MessageId)) AND ((@IsNull_DeliveryStatus = 1 AND [DeliveryStatus] IS NULL) OR ([DeliveryStatus] = @Original_DeliveryStatus)) AND ((@IsNull_DeliveryDate = 1 AND [DeliveryDate] IS NULL) OR ([DeliveryDate] = @Original_DeliveryDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shop_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shop_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_User_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommunicationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommunicationType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommunicationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommunicationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FromAppSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromAppSection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FromAppSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromAppSection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MessageId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MessageId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MessageId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MessageId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CommunicationHistory] ([Shop_Id], [User_Id], [CommunicationType], [MessageText], [CreatedDate], [Phone], [Email], [FromAppSection], [MessageId], [DeliveryStatus], [DeliveryDate]) VALUES (@Shop_Id, @User_Id, @CommunicationType, @MessageText, @CreatedDate, @Phone, @Email, @FromAppSection, @MessageId, @DeliveryStatus, @DeliveryDate);
SELECT ID, Shop_Id, User_Id, CommunicationType, MessageText, CreatedDate, Phone, Email, FromAppSection, MessageId, DeliveryStatus, DeliveryDate FROM CommunicationHistory WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shop_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommunicationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommunicationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MessageText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MessageText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromAppSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromAppSection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MessageId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MessageId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CommunicationHistory] SET [Shop_Id] = @Shop_Id, [User_Id] = @User_I" +
                "d, [CommunicationType] = @CommunicationType, [MessageText] = @MessageText, [Crea" +
                "tedDate] = @CreatedDate, [Phone] = @Phone, [Email] = @Email, [FromAppSection] = " +
                "@FromAppSection, [MessageId] = @MessageId, [DeliveryStatus] = @DeliveryStatus, [" +
                "DeliveryDate] = @DeliveryDate WHERE (([ID] = @Original_ID) AND ((@IsNull_Shop_Id" +
                " = 1 AND [Shop_Id] IS NULL) OR ([Shop_Id] = @Original_Shop_Id)) AND ((@IsNull_Us" +
                "er_Id = 1 AND [User_Id] IS NULL) OR ([User_Id] = @Original_User_Id)) AND ((@IsNu" +
                "ll_CommunicationType = 1 AND [CommunicationType] IS NULL) OR ([CommunicationType" +
                "] = @Original_CommunicationType)) AND ((@IsNull_CreatedDate = 1 AND [CreatedDate" +
                "] IS NULL) OR ([CreatedDate] = @Original_CreatedDate)) AND ((@IsNull_Phone = 1 A" +
                "ND [Phone] IS NULL) OR ([Phone] = @Original_Phone)) AND ((@IsNull_Email = 1 AND " +
                "[Email] IS NULL) OR ([Email] = @Original_Email)) AND ((@IsNull_FromAppSection = " +
                "1 AND [FromAppSection] IS NULL) OR ([FromAppSection] = @Original_FromAppSection)" +
                ") AND ((@IsNull_MessageId = 1 AND [MessageId] IS NULL) OR ([MessageId] = @Origin" +
                "al_MessageId)) AND ((@IsNull_DeliveryStatus = 1 AND [DeliveryStatus] IS NULL) OR" +
                " ([DeliveryStatus] = @Original_DeliveryStatus)) AND ((@IsNull_DeliveryDate = 1 A" +
                "ND [DeliveryDate] IS NULL) OR ([DeliveryDate] = @Original_DeliveryDate)));\r\nSELE" +
                "CT ID, Shop_Id, User_Id, CommunicationType, MessageText, CreatedDate, Phone, Ema" +
                "il, FromAppSection, MessageId, DeliveryStatus, DeliveryDate FROM CommunicationHi" +
                "story WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Shop_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CommunicationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommunicationType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MessageText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MessageText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromAppSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromAppSection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MessageId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MessageId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Shop_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Shop_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Shop_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_User_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CommunicationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommunicationType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CommunicationType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CommunicationType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FromAppSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromAppSection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FromAppSection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromAppSection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MessageId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MessageId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MessageId", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MessageId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, Shop_Id, User_Id, CommunicationType, MessageText, CreatedDate, Phone, " +
                "Email, FromAppSection, MessageId, DeliveryStatus, DeliveryDate FROM dbo.Communic" +
                "ationHistory";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.CommunicationHistoryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.CommunicationHistoryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.CommunicationHistoryDataTable dataTable = new SummitDS.CommunicationHistoryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.CommunicationHistoryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "CommunicationHistory");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, global::System.Nullable<int> Original_Shop_Id, global::System.Nullable<int> Original_User_Id, global::System.Nullable<int> Original_CommunicationType, global::System.Nullable<global::System.DateTime> Original_CreatedDate, string Original_Phone, string Original_Email, global::System.Nullable<int> Original_FromAppSection, string Original_MessageId, string Original_DeliveryStatus, global::System.Nullable<global::System.DateTime> Original_DeliveryDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Shop_Id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Shop_Id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_User_Id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_User_Id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_CommunicationType.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_CommunicationType.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_CreatedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Phone == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Phone));
            }
            if ((Original_Email == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Email));
            }
            if ((Original_FromAppSection.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_FromAppSection.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_MessageId == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_MessageId));
            }
            if ((Original_DeliveryStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_DeliveryStatus));
            }
            if ((Original_DeliveryDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_DeliveryDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> Shop_Id, global::System.Nullable<int> User_Id, global::System.Nullable<int> CommunicationType, string MessageText, global::System.Nullable<global::System.DateTime> CreatedDate, string Phone, string Email, global::System.Nullable<int> FromAppSection, string MessageId, string DeliveryStatus, global::System.Nullable<global::System.DateTime> DeliveryDate) {
            if ((Shop_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Shop_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((User_Id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(User_Id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CommunicationType.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(CommunicationType.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MessageText == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(MessageText));
            }
            if ((CreatedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(CreatedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Phone == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Phone));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Email));
            }
            if ((FromAppSection.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(FromAppSection.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((MessageId == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(MessageId));
            }
            if ((DeliveryStatus == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(DeliveryStatus));
            }
            if ((DeliveryDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(DeliveryDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> Shop_Id, 
                    global::System.Nullable<int> User_Id, 
                    global::System.Nullable<int> CommunicationType, 
                    string MessageText, 
                    global::System.Nullable<global::System.DateTime> CreatedDate, 
                    string Phone, 
                    string Email, 
                    global::System.Nullable<int> FromAppSection, 
                    string MessageId, 
                    string DeliveryStatus, 
                    global::System.Nullable<global::System.DateTime> DeliveryDate, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Shop_Id, 
                    global::System.Nullable<int> Original_User_Id, 
                    global::System.Nullable<int> Original_CommunicationType, 
                    global::System.Nullable<global::System.DateTime> Original_CreatedDate, 
                    string Original_Phone, 
                    string Original_Email, 
                    global::System.Nullable<int> Original_FromAppSection, 
                    string Original_MessageId, 
                    string Original_DeliveryStatus, 
                    global::System.Nullable<global::System.DateTime> Original_DeliveryDate, 
                    int ID) {
            if ((Shop_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Shop_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((User_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(User_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CommunicationType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(CommunicationType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((MessageText == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(MessageText));
            }
            if ((CreatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(CreatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Phone == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Phone));
            }
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Email));
            }
            if ((FromAppSection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(FromAppSection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((MessageId == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(MessageId));
            }
            if ((DeliveryStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(DeliveryStatus));
            }
            if ((DeliveryDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(DeliveryDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_ID));
            if ((Original_Shop_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Shop_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_User_Id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_User_Id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_CommunicationType.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_CommunicationType.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_CreatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_CreatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Phone == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Phone));
            }
            if ((Original_Email == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Email));
            }
            if ((Original_FromAppSection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_FromAppSection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_MessageId == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_MessageId));
            }
            if ((Original_DeliveryStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_DeliveryStatus));
            }
            if ((Original_DeliveryDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(Original_DeliveryDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> Shop_Id, 
                    global::System.Nullable<int> User_Id, 
                    global::System.Nullable<int> CommunicationType, 
                    string MessageText, 
                    global::System.Nullable<global::System.DateTime> CreatedDate, 
                    string Phone, 
                    string Email, 
                    global::System.Nullable<int> FromAppSection, 
                    string MessageId, 
                    string DeliveryStatus, 
                    global::System.Nullable<global::System.DateTime> DeliveryDate, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Shop_Id, 
                    global::System.Nullable<int> Original_User_Id, 
                    global::System.Nullable<int> Original_CommunicationType, 
                    global::System.Nullable<global::System.DateTime> Original_CreatedDate, 
                    string Original_Phone, 
                    string Original_Email, 
                    global::System.Nullable<int> Original_FromAppSection, 
                    string Original_MessageId, 
                    string Original_DeliveryStatus, 
                    global::System.Nullable<global::System.DateTime> Original_DeliveryDate) {
            return this.Update(Shop_Id, User_Id, CommunicationType, MessageText, CreatedDate, Phone, Email, FromAppSection, MessageId, DeliveryStatus, DeliveryDate, Original_ID, Original_Shop_Id, Original_User_Id, Original_CommunicationType, Original_CreatedDate, Original_Phone, Original_Email, Original_FromAppSection, Original_MessageId, Original_DeliveryStatus, Original_DeliveryDate, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetShopIdsByZipCodeTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GetShopIdsByZipCodeTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetShopIdsByZipCode";
            tableMapping.ColumnMappings.Add("ShopID", "ShopID");
            tableMapping.ColumnMappings.Add("Zip", "Zip");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetShopIdsByZipCode";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zip_code", global::System.Data.SqlDbType.NVarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.GetShopIdsByZipCodeDataTable dataTable, string zip_code) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((zip_code == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(zip_code));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.GetShopIdsByZipCodeDataTable GetData(string zip_code) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((zip_code == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(zip_code));
            }
            SummitDS.GetShopIdsByZipCodeDataTable dataTable = new SummitDS.GetShopIdsByZipCodeDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LoginTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LoginTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Login";
            tableMapping.ColumnMappings.Add("UserID", "UserID");
            tableMapping.ColumnMappings.Add("UserName", "UserName");
            tableMapping.ColumnMappings.Add("Password", "Password");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("Phone", "Phone");
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("CompanySize", "CompanySize");
            tableMapping.ColumnMappings.Add("CountryEntityID", "CountryEntityID");
            tableMapping.ColumnMappings.Add("ShopID", "ShopID");
            tableMapping.ColumnMappings.Add("RoleId", "RoleId");
            tableMapping.ColumnMappings.Add("UseProvidedSMTPServer", "UseProvidedSMTPServer");
            tableMapping.ColumnMappings.Add("SMTPServerName", "SMTPServerName");
            tableMapping.ColumnMappings.Add("SMTPServerUserName", "SMTPServerUserName");
            tableMapping.ColumnMappings.Add("SMTPServerPassword", "SMTPServerPassword");
            tableMapping.ColumnMappings.Add("SMTPServerPort", "SMTPServerPort");
            tableMapping.ColumnMappings.Add("EnableSSL", "EnableSSL");
            tableMapping.ColumnMappings.Add("SMTPServerEmail", "SMTPServerEmail");
            tableMapping.ColumnMappings.Add("AvailableSMS", "AvailableSMS");
            tableMapping.ColumnMappings.Add("SentSMS", "SentSMS");
            tableMapping.ColumnMappings.Add("SMSActivationDate", "SMSActivationDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Login] WHERE (([UserID] = @Original_UserID) AND ((@IsNull_UserName =" +
                " 1 AND [UserName] IS NULL) OR ([UserName] = @Original_UserName)) AND ((@IsNull_P" +
                "assword = 1 AND [Password] IS NULL) OR ([Password] = @Original_Password)) AND ((" +
                "@IsNull_FirstName = 1 AND [FirstName] IS NULL) OR ([FirstName] = @Original_First" +
                "Name)) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([LastName] = @Orig" +
                "inal_LastName)) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Orig" +
                "inal_Email)) AND ((@IsNull_Phone = 1 AND [Phone] IS NULL) OR ([Phone] = @Origina" +
                "l_Phone)) AND ((@IsNull_Company = 1 AND [Company] IS NULL) OR ([Company] = @Orig" +
                "inal_Company)) AND ((@IsNull_CompanySize = 1 AND [CompanySize] IS NULL) OR ([Com" +
                "panySize] = @Original_CompanySize)) AND ((@IsNull_CountryEntityID = 1 AND [Count" +
                "ryEntityID] IS NULL) OR ([CountryEntityID] = @Original_CountryEntityID)) AND ((@" +
                "IsNull_ShopID = 1 AND [ShopID] IS NULL) OR ([ShopID] = @Original_ShopID)) AND ((" +
                "@IsNull_SMTPServerName = 1 AND [SMTPServerName] IS NULL) OR ([SMTPServerName] = " +
                "@Original_SMTPServerName)) AND ((@IsNull_SMTPServerUserName = 1 AND [SMTPServerU" +
                "serName] IS NULL) OR ([SMTPServerUserName] = @Original_SMTPServerUserName)) AND " +
                "((@IsNull_SMTPServerPassword = 1 AND [SMTPServerPassword] IS NULL) OR ([SMTPServ" +
                "erPassword] = @Original_SMTPServerPassword)) AND ((@IsNull_UseProvidedSMTPServer" +
                " = 1 AND [UseProvidedSMTPServer] IS NULL) OR ([UseProvidedSMTPServer] = @Origina" +
                "l_UseProvidedSMTPServer)) AND ((@IsNull_RoleId = 1 AND [RoleId] IS NULL) OR ([Ro" +
                "leId] = @Original_RoleId)) AND ((@IsNull_SMTPServerPort = 1 AND [SMTPServerPort]" +
                " IS NULL) OR ([SMTPServerPort] = @Original_SMTPServerPort)) AND ([EnableSSL] = @" +
                "Original_EnableSSL) AND ((@IsNull_SMTPServerEmail = 1 AND [SMTPServerEmail] IS N" +
                "ULL) OR ([SMTPServerEmail] = @Original_SMTPServerEmail)) AND ((@IsNull_Available" +
                "SMS = 1 AND [AvailableSMS] IS NULL) OR ([AvailableSMS] = @Original_AvailableSMS)" +
                ") AND ((@IsNull_SentSMS = 1 AND [SentSMS] IS NULL) OR ([SentSMS] = @Original_Sen" +
                "tSMS)) AND ((@IsNull_SMSActivationDate = 1 AND [SMSActivationDate] IS NULL) OR (" +
                "[SMSActivationDate] = @Original_SMSActivationDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FirstName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Company", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompanySize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanySize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanySize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanySize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountryEntityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryEntityID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryEntityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryEntityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerUserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerUserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerUserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerPassword", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPassword", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UseProvidedSMTPServer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseProvidedSMTPServer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseProvidedSMTPServer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseProvidedSMTPServer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RoleId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoleId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnableSSL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnableSSL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AvailableSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableSMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AvailableSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableSMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SentSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SentSMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SentSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SentSMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMSActivationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSActivationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMSActivationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSActivationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"
                      INSERT INTO [Login] ([UserName], [Password], [FirstName], [LastName], [Email], [Phone], [Company], [CompanySize], [CountryEntityID], [ShopID], [SMTPServerName], [SMTPServerUserName], [SMTPServerPassword], [UseProvidedSMTPServer], [RoleId], [SMTPServerPort], [EnableSSL], [SMTPServerEmail], [AvailableSMS], [SentSMS], [SMSActivationDate]) VALUES (@UserName, @Password, @FirstName, @LastName, @Email, @Phone, @Company, @CompanySize, @CountryEntityID, @ShopID, @SMTPServerName, @SMTPServerUserName, @SMTPServerPassword, @UseProvidedSMTPServer, @RoleId, @SMTPServerPort, @EnableSSL, @SMTPServerEmail, @AvailableSMS, @SentSMS, @SMSActivationDate);
                      SELECT UserID, UserName, Password, FirstName, LastName, Email, Phone, Company, CompanySize, CountryEntityID, ShopID, SMTPServerName, SMTPServerUserName, SMTPServerPassword, UseProvidedSMTPServer, RoleId, SMTPServerPort, EnableSSL, SMTPServerEmail, AvailableSMS, SentSMS, SMSActivationDate FROM Login WHERE (UserID = SCOPE_IDENTITY())
                    ";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanySize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanySize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryEntityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryEntityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseProvidedSMTPServer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseProvidedSMTPServer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoleId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnableSSL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnableSSL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AvailableSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableSMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SentSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SentSMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSActivationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSActivationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "\r\n                      UPDATE [Login] SET [UserName] = @UserName, [Password] = @" +
                "Password, [FirstName] = @FirstName, [LastName] = @LastName, [Email] = @Email, [P" +
                "hone] = @Phone, [Company] = @Company, [CompanySize] = @CompanySize, [CountryEnti" +
                "tyID] = @CountryEntityID, [ShopID] = @ShopID, [SMTPServerName] = @SMTPServerName" +
                ", [SMTPServerUserName] = @SMTPServerUserName, [SMTPServerPassword] = @SMTPServer" +
                "Password, [UseProvidedSMTPServer] = @UseProvidedSMTPServer, [RoleId] = @RoleId, " +
                "[SMTPServerPort] = @SMTPServerPort, [EnableSSL] = @EnableSSL, [SMTPServerEmail] " +
                "= @SMTPServerEmail, [AvailableSMS] = @AvailableSMS, [SentSMS] = @SentSMS, [SMSAc" +
                "tivationDate] = @SMSActivationDate WHERE (([UserID] = @Original_UserID) AND ((@I" +
                "sNull_UserName = 1 AND [UserName] IS NULL) OR ([UserName] = @Original_UserName))" +
                " AND ((@IsNull_Password = 1 AND [Password] IS NULL) OR ([Password] = @Original_P" +
                "assword)) AND ((@IsNull_FirstName = 1 AND [FirstName] IS NULL) OR ([FirstName] =" +
                " @Original_FirstName)) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([L" +
                "astName] = @Original_LastName)) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR " +
                "([Email] = @Original_Email)) AND ((@IsNull_Phone = 1 AND [Phone] IS NULL) OR ([P" +
                "hone] = @Original_Phone)) AND ((@IsNull_Company = 1 AND [Company] IS NULL) OR ([" +
                "Company] = @Original_Company)) AND ((@IsNull_CompanySize = 1 AND [CompanySize] I" +
                "S NULL) OR ([CompanySize] = @Original_CompanySize)) AND ((@IsNull_CountryEntityI" +
                "D = 1 AND [CountryEntityID] IS NULL) OR ([CountryEntityID] = @Original_CountryEn" +
                "tityID)) AND ((@IsNull_ShopID = 1 AND [ShopID] IS NULL) OR ([ShopID] = @Original" +
                "_ShopID)) AND ((@IsNull_SMTPServerName = 1 AND [SMTPServerName] IS NULL) OR ([SM" +
                "TPServerName] = @Original_SMTPServerName)) AND ((@IsNull_SMTPServerUserName = 1 " +
                "AND [SMTPServerUserName] IS NULL) OR ([SMTPServerUserName] = @Original_SMTPServe" +
                "rUserName)) AND ((@IsNull_SMTPServerPassword = 1 AND [SMTPServerPassword] IS NUL" +
                "L) OR ([SMTPServerPassword] = @Original_SMTPServerPassword)) AND ((@IsNull_UsePr" +
                "ovidedSMTPServer = 1 AND [UseProvidedSMTPServer] IS NULL) OR ([UseProvidedSMTPSe" +
                "rver] = @Original_UseProvidedSMTPServer)) AND ((@IsNull_RoleId = 1 AND [RoleId] " +
                "IS NULL) OR ([RoleId] = @Original_RoleId)) AND ((@IsNull_SMTPServerPort = 1 AND " +
                "[SMTPServerPort] IS NULL) OR ([SMTPServerPort] = @Original_SMTPServerPort)) AND " +
                "([EnableSSL] = @Original_EnableSSL) AND ((@IsNull_SMTPServerEmail = 1 AND [SMTPS" +
                "erverEmail] IS NULL) OR ([SMTPServerEmail] = @Original_SMTPServerEmail)) AND ((@" +
                "IsNull_AvailableSMS = 1 AND [AvailableSMS] IS NULL) OR ([AvailableSMS] = @Origin" +
                "al_AvailableSMS)) AND ((@IsNull_SentSMS = 1 AND [SentSMS] IS NULL) OR ([SentSMS]" +
                " = @Original_SentSMS)) AND ((@IsNull_SMSActivationDate = 1 AND [SMSActivationDat" +
                "e] IS NULL) OR ([SMSActivationDate] = @Original_SMSActivationDate)));\r\n         " +
                "             SELECT UserID, UserName, Password, FirstName, LastName, Email, Phon" +
                "e, Company, CompanySize, CountryEntityID, ShopID, SMTPServerName, SMTPServerUser" +
                "Name, SMTPServerPassword, UseProvidedSMTPServer, RoleId, SMTPServerPort, EnableS" +
                "SL, SMTPServerEmail, AvailableSMS, SentSMS, SMSActivationDate FROM Login WHERE (" +
                "UserID = @UserID)\r\n                    ";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FirstName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanySize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanySize", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CountryEntityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryEntityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerUserName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UseProvidedSMTPServer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseProvidedSMTPServer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RoleId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPort", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EnableSSL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnableSSL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTPServerEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AvailableSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableSMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SentSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SentSMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMSActivationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSActivationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FirstName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FirstName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FirstName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Company", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CompanySize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanySize", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanySize", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanySize", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CountryEntityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryEntityID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CountryEntityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CountryEntityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerUserName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerUserName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerUserName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerUserName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerPassword", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPassword", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UseProvidedSMTPServer", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseProvidedSMTPServer", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UseProvidedSMTPServer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UseProvidedSMTPServer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RoleId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RoleId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RoleId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPort", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerPort", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerPort", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EnableSSL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EnableSSL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTPServerEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTPServerEmail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTPServerEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AvailableSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableSMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AvailableSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AvailableSMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SentSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SentSMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SentSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SentSMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMSActivationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSActivationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMSActivationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMSActivationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[7];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"
                      SELECT        UserID, UserName, Password, FirstName, LastName, Email, Phone, Company, CompanySize, CountryEntityID, ShopID, SMTPServerName, SMTPServerUserName,
                      SMTPServerPassword, UseProvidedSMTPServer, RoleId, SMTPServerPort, EnableSSL, SMTPServerEmail, AvailableSMS, SentSMS, SMSActivationDate
                      FROM            Login
                    ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_Login_AdminList";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.GetAllMarketingUsers";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.Sp_Login_getDataByEmail";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.Sp_Login_getDataById";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.Sp_Login_getDataByShopId";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "dbo.Sp_Login_getDataByUserName";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@strUserName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.LoginDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.LoginDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.LoginDataTable dataTable = new SummitDS.LoginDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.LoginDataTable AdminList() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SummitDS.LoginDataTable dataTable = new SummitDS.LoginDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.LoginDataTable GetAllMarketingUsers() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            SummitDS.LoginDataTable dataTable = new SummitDS.LoginDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.LoginDataTable GetDataByEmail(string email) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((email == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(email));
            }
            SummitDS.LoginDataTable dataTable = new SummitDS.LoginDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.LoginDataTable GetDataById(global::System.Nullable<int> iId) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((iId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.LoginDataTable dataTable = new SummitDS.LoginDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.LoginDataTable GetDataByShopId(global::System.Nullable<int> iShopId) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((iShopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iShopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.LoginDataTable dataTable = new SummitDS.LoginDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.LoginDataTable GetDataByUserName(string strUserName) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((strUserName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(strUserName));
            }
            SummitDS.LoginDataTable dataTable = new SummitDS.LoginDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.LoginDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "Login");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_UserID, 
                    string Original_UserName, 
                    string Original_Password, 
                    string Original_FirstName, 
                    string Original_LastName, 
                    string Original_Email, 
                    string Original_Phone, 
                    string Original_Company, 
                    global::System.Nullable<int> Original_CompanySize, 
                    global::System.Nullable<int> Original_CountryEntityID, 
                    global::System.Nullable<int> Original_ShopID, 
                    string Original_SMTPServerName, 
                    string Original_SMTPServerUserName, 
                    string Original_SMTPServerPassword, 
                    global::System.Nullable<bool> Original_UseProvidedSMTPServer, 
                    global::System.Nullable<int> Original_RoleId, 
                    global::System.Nullable<int> Original_SMTPServerPort, 
                    bool Original_EnableSSL, 
                    string Original_SMTPServerEmail, 
                    global::System.Nullable<int> Original_AvailableSMS, 
                    global::System.Nullable<int> Original_SentSMS, 
                    global::System.Nullable<global::System.DateTime> Original_SMSActivationDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_UserID));
            if ((Original_UserName == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_UserName));
            }
            if ((Original_Password == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Password));
            }
            if ((Original_FirstName == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_FirstName));
            }
            if ((Original_LastName == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_LastName));
            }
            if ((Original_Email == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Email));
            }
            if ((Original_Phone == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Phone));
            }
            if ((Original_Company == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Company));
            }
            if ((Original_CompanySize.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_CompanySize.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_CountryEntityID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((int)(Original_CountryEntityID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_ShopID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_ShopID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_SMTPServerName == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_SMTPServerName));
            }
            if ((Original_SMTPServerUserName == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_SMTPServerUserName));
            }
            if ((Original_SMTPServerPassword == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_SMTPServerPassword));
            }
            if ((Original_UseProvidedSMTPServer.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_UseProvidedSMTPServer.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_RoleId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_RoleId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_SMTPServerPort.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((int)(Original_SMTPServerPort.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((bool)(Original_EnableSSL));
            if ((Original_SMTPServerEmail == null)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_SMTPServerEmail));
            }
            if ((Original_AvailableSMS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((int)(Original_AvailableSMS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_SentSMS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((int)(Original_SentSMS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_SMSActivationDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((System.DateTime)(Original_SMSActivationDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string UserName, 
                    string Password, 
                    string FirstName, 
                    string LastName, 
                    string Email, 
                    string Phone, 
                    string Company, 
                    global::System.Nullable<int> CompanySize, 
                    global::System.Nullable<int> CountryEntityID, 
                    global::System.Nullable<int> ShopID, 
                    string SMTPServerName, 
                    string SMTPServerUserName, 
                    string SMTPServerPassword, 
                    global::System.Nullable<bool> UseProvidedSMTPServer, 
                    global::System.Nullable<int> RoleId, 
                    global::System.Nullable<int> SMTPServerPort, 
                    bool EnableSSL, 
                    string SMTPServerEmail, 
                    global::System.Nullable<int> AvailableSMS, 
                    global::System.Nullable<int> SentSMS, 
                    global::System.Nullable<global::System.DateTime> SMSActivationDate) {
            if ((UserName == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(UserName));
            }
            if ((Password == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Password));
            }
            if ((FirstName == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(LastName));
            }
            if ((Email == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Email));
            }
            if ((Phone == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Phone));
            }
            if ((Company == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Company));
            }
            if ((CompanySize.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(CompanySize.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CountryEntityID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((int)(CountryEntityID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ShopID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(ShopID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SMTPServerName == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(SMTPServerName));
            }
            if ((SMTPServerUserName == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(SMTPServerUserName));
            }
            if ((SMTPServerPassword == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SMTPServerPassword));
            }
            if ((UseProvidedSMTPServer.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(UseProvidedSMTPServer.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((RoleId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(RoleId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SMTPServerPort.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((int)(SMTPServerPort.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(EnableSSL));
            if ((SMTPServerEmail == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(SMTPServerEmail));
            }
            if ((AvailableSMS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((int)(AvailableSMS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SentSMS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((int)(SentSMS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SMSActivationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(SMSActivationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string UserName, 
                    string Password, 
                    string FirstName, 
                    string LastName, 
                    string Email, 
                    string Phone, 
                    string Company, 
                    global::System.Nullable<int> CompanySize, 
                    global::System.Nullable<int> CountryEntityID, 
                    global::System.Nullable<int> ShopID, 
                    string SMTPServerName, 
                    string SMTPServerUserName, 
                    string SMTPServerPassword, 
                    global::System.Nullable<bool> UseProvidedSMTPServer, 
                    global::System.Nullable<int> RoleId, 
                    global::System.Nullable<int> SMTPServerPort, 
                    bool EnableSSL, 
                    string SMTPServerEmail, 
                    global::System.Nullable<int> AvailableSMS, 
                    global::System.Nullable<int> SentSMS, 
                    global::System.Nullable<global::System.DateTime> SMSActivationDate, 
                    int Original_UserID, 
                    string Original_UserName, 
                    string Original_Password, 
                    string Original_FirstName, 
                    string Original_LastName, 
                    string Original_Email, 
                    string Original_Phone, 
                    string Original_Company, 
                    global::System.Nullable<int> Original_CompanySize, 
                    global::System.Nullable<int> Original_CountryEntityID, 
                    global::System.Nullable<int> Original_ShopID, 
                    string Original_SMTPServerName, 
                    string Original_SMTPServerUserName, 
                    string Original_SMTPServerPassword, 
                    global::System.Nullable<bool> Original_UseProvidedSMTPServer, 
                    global::System.Nullable<int> Original_RoleId, 
                    global::System.Nullable<int> Original_SMTPServerPort, 
                    bool Original_EnableSSL, 
                    string Original_SMTPServerEmail, 
                    global::System.Nullable<int> Original_AvailableSMS, 
                    global::System.Nullable<int> Original_SentSMS, 
                    global::System.Nullable<global::System.DateTime> Original_SMSActivationDate, 
                    int UserID) {
            if ((UserName == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(UserName));
            }
            if ((Password == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Password));
            }
            if ((FirstName == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FirstName));
            }
            if ((LastName == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(LastName));
            }
            if ((Email == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Email));
            }
            if ((Phone == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Phone));
            }
            if ((Company == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Company));
            }
            if ((CompanySize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(CompanySize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((CountryEntityID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(CountryEntityID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ShopID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ShopID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SMTPServerName == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(SMTPServerName));
            }
            if ((SMTPServerUserName == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(SMTPServerUserName));
            }
            if ((SMTPServerPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SMTPServerPassword));
            }
            if ((UseProvidedSMTPServer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(UseProvidedSMTPServer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((RoleId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(RoleId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SMTPServerPort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(SMTPServerPort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(EnableSSL));
            if ((SMTPServerEmail == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(SMTPServerEmail));
            }
            if ((AvailableSMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(AvailableSMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((SentSMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(SentSMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((SMSActivationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(SMSActivationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_UserID));
            if ((Original_UserName == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_UserName));
            }
            if ((Original_Password == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Password));
            }
            if ((Original_FirstName == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_FirstName));
            }
            if ((Original_LastName == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_LastName));
            }
            if ((Original_Email == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Email));
            }
            if ((Original_Phone == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Phone));
            }
            if ((Original_Company == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Company));
            }
            if ((Original_CompanySize.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_CompanySize.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_CountryEntityID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((int)(Original_CountryEntityID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_ShopID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((int)(Original_ShopID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_SMTPServerName == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_SMTPServerName));
            }
            if ((Original_SMTPServerUserName == null)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_SMTPServerUserName));
            }
            if ((Original_SMTPServerPassword == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_SMTPServerPassword));
            }
            if ((Original_UseProvidedSMTPServer.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(Original_UseProvidedSMTPServer.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_RoleId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((int)(Original_RoleId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_SMTPServerPort.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((int)(Original_SMTPServerPort.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(Original_EnableSSL));
            if ((Original_SMTPServerEmail == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_SMTPServerEmail));
            }
            if ((Original_AvailableSMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(Original_AvailableSMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_SentSMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(Original_SentSMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_SMSActivationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(Original_SMSActivationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(UserID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string UserName, 
                    string Password, 
                    string FirstName, 
                    string LastName, 
                    string Email, 
                    string Phone, 
                    string Company, 
                    global::System.Nullable<int> CompanySize, 
                    global::System.Nullable<int> CountryEntityID, 
                    global::System.Nullable<int> ShopID, 
                    string SMTPServerName, 
                    string SMTPServerUserName, 
                    string SMTPServerPassword, 
                    global::System.Nullable<bool> UseProvidedSMTPServer, 
                    global::System.Nullable<int> RoleId, 
                    global::System.Nullable<int> SMTPServerPort, 
                    bool EnableSSL, 
                    string SMTPServerEmail, 
                    global::System.Nullable<int> AvailableSMS, 
                    global::System.Nullable<int> SentSMS, 
                    global::System.Nullable<global::System.DateTime> SMSActivationDate, 
                    int Original_UserID, 
                    string Original_UserName, 
                    string Original_Password, 
                    string Original_FirstName, 
                    string Original_LastName, 
                    string Original_Email, 
                    string Original_Phone, 
                    string Original_Company, 
                    global::System.Nullable<int> Original_CompanySize, 
                    global::System.Nullable<int> Original_CountryEntityID, 
                    global::System.Nullable<int> Original_ShopID, 
                    string Original_SMTPServerName, 
                    string Original_SMTPServerUserName, 
                    string Original_SMTPServerPassword, 
                    global::System.Nullable<bool> Original_UseProvidedSMTPServer, 
                    global::System.Nullable<int> Original_RoleId, 
                    global::System.Nullable<int> Original_SMTPServerPort, 
                    bool Original_EnableSSL, 
                    string Original_SMTPServerEmail, 
                    global::System.Nullable<int> Original_AvailableSMS, 
                    global::System.Nullable<int> Original_SentSMS, 
                    global::System.Nullable<global::System.DateTime> Original_SMSActivationDate) {
            return this.Update(UserName, Password, FirstName, LastName, Email, Phone, Company, CompanySize, CountryEntityID, ShopID, SMTPServerName, SMTPServerUserName, SMTPServerPassword, UseProvidedSMTPServer, RoleId, SMTPServerPort, EnableSSL, SMTPServerEmail, AvailableSMS, SentSMS, SMSActivationDate, Original_UserID, Original_UserName, Original_Password, Original_FirstName, Original_LastName, Original_Email, Original_Phone, Original_Company, Original_CompanySize, Original_CountryEntityID, Original_ShopID, Original_SMTPServerName, Original_SMTPServerUserName, Original_SMTPServerPassword, Original_UseProvidedSMTPServer, Original_RoleId, Original_SMTPServerPort, Original_EnableSSL, Original_SMTPServerEmail, Original_AvailableSMS, Original_SentSMS, Original_SMSActivationDate, Original_UserID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VehicleMediaLinkTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VehicleMediaLinkTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VehicleMediaLink";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("media_link", "media_link");
            tableMapping.ColumnMappings.Add("created_datetime", "created_datetime");
            tableMapping.ColumnMappings.Add("VehicleMediaLinkNoteID", "VehicleMediaLinkNoteID");
            tableMapping.ColumnMappings.Add("media_link_Thumnail", "media_link_Thumnail");
            tableMapping.ColumnMappings.Add("IsNewLink", "IsNewLink");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[VehicleMediaLink] WHERE (([id] = @Original_id) AND ([vehicle_id] = @Original_vehicle_id) AND ([media_link] = @Original_media_link) AND ((@IsNull_created_datetime = 1 AND [created_datetime] IS NULL) OR ([created_datetime] = @Original_created_datetime)) AND ((@IsNull_VehicleMediaLinkNoteID = 1 AND [VehicleMediaLinkNoteID] IS NULL) OR ([VehicleMediaLinkNoteID] = @Original_VehicleMediaLinkNoteID)) AND ((@IsNull_media_link_Thumnail = 1 AND [media_link_Thumnail] IS NULL) OR ([media_link_Thumnail] = @Original_media_link_Thumnail)) AND ((@IsNull_IsNewLink = 1 AND [IsNewLink] IS NULL) OR ([IsNewLink] = @Original_IsNewLink)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_media_link", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_created_datetime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_datetime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_created_datetime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_datetime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleMediaLinkNoteID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleMediaLinkNoteID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleMediaLinkNoteID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleMediaLinkNoteID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_media_link_Thumnail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link_Thumnail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_media_link_Thumnail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link_Thumnail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsNewLink", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNewLink", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsNewLink", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNewLink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[VehicleMediaLink] ([vehicle_id], [media_link], [created_datetime], [VehicleMediaLinkNoteID], [media_link_Thumnail], [IsNewLink]) VALUES (@vehicle_id, @media_link, @created_datetime, @VehicleMediaLinkNoteID, @media_link_Thumnail, @IsNewLink);
SELECT id, vehicle_id, media_link, created_datetime, VehicleMediaLinkNoteID, media_link_Thumnail, IsNewLink FROM VehicleMediaLink WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@media_link", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created_datetime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_datetime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleMediaLinkNoteID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleMediaLinkNoteID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@media_link_Thumnail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link_Thumnail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNewLink", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNewLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[VehicleMediaLink] SET [vehicle_id] = @vehicle_id, [media_link] = @media_link, [created_datetime] = @created_datetime, [VehicleMediaLinkNoteID] = @VehicleMediaLinkNoteID, [media_link_Thumnail] = @media_link_Thumnail, [IsNewLink] = @IsNewLink WHERE (([id] = @Original_id) AND ([vehicle_id] = @Original_vehicle_id) AND ([media_link] = @Original_media_link) AND ((@IsNull_created_datetime = 1 AND [created_datetime] IS NULL) OR ([created_datetime] = @Original_created_datetime)) AND ((@IsNull_VehicleMediaLinkNoteID = 1 AND [VehicleMediaLinkNoteID] IS NULL) OR ([VehicleMediaLinkNoteID] = @Original_VehicleMediaLinkNoteID)) AND ((@IsNull_media_link_Thumnail = 1 AND [media_link_Thumnail] IS NULL) OR ([media_link_Thumnail] = @Original_media_link_Thumnail)) AND ((@IsNull_IsNewLink = 1 AND [IsNewLink] IS NULL) OR ([IsNewLink] = @Original_IsNewLink)));
SELECT id, vehicle_id, media_link, created_datetime, VehicleMediaLinkNoteID, media_link_Thumnail, IsNewLink FROM VehicleMediaLink WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@media_link", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@created_datetime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_datetime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleMediaLinkNoteID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleMediaLinkNoteID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@media_link_Thumnail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link_Thumnail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNewLink", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNewLink", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_media_link", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_created_datetime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_datetime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_created_datetime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "created_datetime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleMediaLinkNoteID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleMediaLinkNoteID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleMediaLinkNoteID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleMediaLinkNoteID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_media_link_Thumnail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link_Thumnail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_media_link_Thumnail", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "media_link_Thumnail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsNewLink", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNewLink", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsNewLink", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsNewLink", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, vehicle_id, media_link, created_datetime, VehicleMediaLinkNoteID, medi" +
                "a_link_Thumnail, IsNewLink FROM dbo.VehicleMediaLink";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        COUNT(*) AS Expr1\r\nFROM            VehicleMediaLink\r\nWHERE        (" +
                "IsNewLink = 0) AND (vehicle_id = @vehicle_id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.VehicleMediaLinkDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.VehicleMediaLinkDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.VehicleMediaLinkDataTable dataTable = new SummitDS.VehicleMediaLinkDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.VehicleMediaLinkDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "VehicleMediaLink");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, int Original_vehicle_id, string Original_media_link, global::System.Nullable<global::System.DateTime> Original_created_datetime, global::System.Nullable<int> Original_VehicleMediaLinkNoteID, string Original_media_link_Thumnail, global::System.Nullable<bool> Original_IsNewLink) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_vehicle_id));
            if ((Original_media_link == null)) {
                throw new global::System.ArgumentNullException("Original_media_link");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_media_link));
            }
            if ((Original_created_datetime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_created_datetime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_VehicleMediaLinkNoteID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_VehicleMediaLinkNoteID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_media_link_Thumnail == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_media_link_Thumnail));
            }
            if ((Original_IsNewLink.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_IsNewLink.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int vehicle_id, string media_link, global::System.Nullable<global::System.DateTime> created_datetime, global::System.Nullable<int> VehicleMediaLinkNoteID, string media_link_Thumnail, global::System.Nullable<bool> IsNewLink) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(vehicle_id));
            if ((media_link == null)) {
                throw new global::System.ArgumentNullException("media_link");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(media_link));
            }
            if ((created_datetime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(created_datetime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((VehicleMediaLinkNoteID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(VehicleMediaLinkNoteID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((media_link_Thumnail == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(media_link_Thumnail));
            }
            if ((IsNewLink.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(IsNewLink.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int vehicle_id, string media_link, global::System.Nullable<global::System.DateTime> created_datetime, global::System.Nullable<int> VehicleMediaLinkNoteID, string media_link_Thumnail, global::System.Nullable<bool> IsNewLink, int Original_id, int Original_vehicle_id, string Original_media_link, global::System.Nullable<global::System.DateTime> Original_created_datetime, global::System.Nullable<int> Original_VehicleMediaLinkNoteID, string Original_media_link_Thumnail, global::System.Nullable<bool> Original_IsNewLink, int id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(vehicle_id));
            if ((media_link == null)) {
                throw new global::System.ArgumentNullException("media_link");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(media_link));
            }
            if ((created_datetime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(created_datetime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((VehicleMediaLinkNoteID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(VehicleMediaLinkNoteID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((media_link_Thumnail == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(media_link_Thumnail));
            }
            if ((IsNewLink.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(IsNewLink.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_vehicle_id));
            if ((Original_media_link == null)) {
                throw new global::System.ArgumentNullException("Original_media_link");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_media_link));
            }
            if ((Original_created_datetime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_created_datetime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_VehicleMediaLinkNoteID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_VehicleMediaLinkNoteID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_media_link_Thumnail == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_media_link_Thumnail));
            }
            if ((Original_IsNewLink.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_IsNewLink.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int vehicle_id, string media_link, global::System.Nullable<global::System.DateTime> created_datetime, global::System.Nullable<int> VehicleMediaLinkNoteID, string media_link_Thumnail, global::System.Nullable<bool> IsNewLink, int Original_id, int Original_vehicle_id, string Original_media_link, global::System.Nullable<global::System.DateTime> Original_created_datetime, global::System.Nullable<int> Original_VehicleMediaLinkNoteID, string Original_media_link_Thumnail, global::System.Nullable<bool> Original_IsNewLink) {
            return this.Update(vehicle_id, media_link, created_datetime, VehicleMediaLinkNoteID, media_link_Thumnail, IsNewLink, Original_id, Original_vehicle_id, Original_media_link, Original_created_datetime, Original_VehicleMediaLinkNoteID, Original_media_link_Thumnail, Original_IsNewLink, Original_id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetCountOfNewLink(int vehicle_id) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(vehicle_id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UserVehicleStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserVehicleStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UserVehicleStatus";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Vehicle_id", "Vehicle_id");
            tableMapping.ColumnMappings.Add("DateIn", "DateIn");
            tableMapping.ColumnMappings.Add("DateOut", "DateOut");
            tableMapping.ColumnMappings.Add("User_id", "User_id");
            tableMapping.ColumnMappings.Add("VehicleStatus", "VehicleStatus");
            tableMapping.ColumnMappings.Add("Last_status_updated_date", "Last_status_updated_date");
            tableMapping.ColumnMappings.Add("DeliveryDate", "DeliveryDate");
            tableMapping.ColumnMappings.Add("Repair_Start_Date", "Repair_Start_Date");
            tableMapping.ColumnMappings.Add("Actual_Delivery_Date", "Actual_Delivery_Date");
            tableMapping.ColumnMappings.Add("ETA_Hours", "ETA_Hours");
            tableMapping.ColumnMappings.Add("RO_Hours", "RO_Hours");
            tableMapping.ColumnMappings.Add("File_Import_Date", "File_Import_Date");
            tableMapping.ColumnMappings.Add("File_Status", "File_Status");
            tableMapping.ColumnMappings.Add("File_Import_Time", "File_Import_Time");
            tableMapping.ColumnMappings.Add("IsRead", "IsRead");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [UserVehicleStatus] WHERE (([ID] = @Original_ID) AND ((@IsNull_Vehicl" +
                "e_id = 1 AND [Vehicle_id] IS NULL) OR ([Vehicle_id] = @Original_Vehicle_id)) AND" +
                " ((@IsNull_DateIn = 1 AND [DateIn] IS NULL) OR ([DateIn] = @Original_DateIn)) AN" +
                "D ((@IsNull_DateOut = 1 AND [DateOut] IS NULL) OR ([DateOut] = @Original_DateOut" +
                ")) AND ((@IsNull_User_id = 1 AND [User_id] IS NULL) OR ([User_id] = @Original_Us" +
                "er_id)) AND ((@IsNull_VehicleStatus = 1 AND [VehicleStatus] IS NULL) OR ([Vehicl" +
                "eStatus] = @Original_VehicleStatus)) AND ((@IsNull_Last_status_updated_date = 1 " +
                "AND [Last_status_updated_date] IS NULL) OR ([Last_status_updated_date] = @Origin" +
                "al_Last_status_updated_date)) AND ((@IsNull_DeliveryDate = 1 AND [DeliveryDate] " +
                "IS NULL) OR ([DeliveryDate] = @Original_DeliveryDate)) AND ((@IsNull_Repair_Star" +
                "t_Date = 1 AND [Repair_Start_Date] IS NULL) OR ([Repair_Start_Date] = @Original_" +
                "Repair_Start_Date)) AND ((@IsNull_Actual_Delivery_Date = 1 AND [Actual_Delivery_" +
                "Date] IS NULL) OR ([Actual_Delivery_Date] = @Original_Actual_Delivery_Date)) AND" +
                " ((@IsNull_ETA_Hours = 1 AND [ETA_Hours] IS NULL) OR ([ETA_Hours] = @Original_ET" +
                "A_Hours)) AND ((@IsNull_RO_Hours = 1 AND [RO_Hours] IS NULL) OR ([RO_Hours] = @O" +
                "riginal_RO_Hours)) AND ((@IsNull_File_Import_Date = 1 AND [File_Import_Date] IS " +
                "NULL) OR ([File_Import_Date] = @Original_File_Import_Date)) AND ((@IsNull_File_S" +
                "tatus = 1 AND [File_Status] IS NULL) OR ([File_Status] = @Original_File_Status))" +
                " AND ((@IsNull_File_Import_Time = 1 AND [File_Import_Time] IS NULL) OR ([File_Im" +
                "port_Time] = @Original_File_Import_Time)) AND ((@IsNull_IsRead = 1 AND [IsRead] " +
                "IS NULL) OR ([IsRead] = @Original_IsRead)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateIn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateIn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateIn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateIn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateOut", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_User_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_status_updated_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_status_updated_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_status_updated_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_status_updated_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Repair_Start_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair_Start_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Repair_Start_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Delivery_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Delivery_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Delivery_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Delivery_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETA_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETA_Hours", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETA_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETA_Hours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RO_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RO_Hours", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RO_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RO_Hours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_File_Import_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_File_Import_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_File_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_File_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_File_Import_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_File_Import_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsRead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRead", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsRead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [UserVehicleStatus] ([Vehicle_id], [DateIn], [DateOut], [User_id], [VehicleStatus], [Last_status_updated_date], [DeliveryDate], [Repair_Start_Date], [Actual_Delivery_Date], [ETA_Hours], [RO_Hours], [File_Import_Date], [File_Status], [File_Import_Time], [IsRead]) VALUES (@Vehicle_id, @DateIn, @DateOut, @User_id, @VehicleStatus, @Last_status_updated_date, @DeliveryDate, @Repair_Start_Date, @Actual_Delivery_Date, @ETA_Hours, @RO_Hours, @File_Import_Date, @File_Status, @File_Import_Time, @IsRead);
SELECT ID, Vehicle_id, DateIn, DateOut, User_id, VehicleStatus, Last_status_updated_date, DeliveryDate, Repair_Start_Date, Actual_Delivery_Date, ETA_Hours, RO_Hours, File_Import_Date, File_Status, File_Import_Time, IsRead FROM UserVehicleStatus WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateIn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOut", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_status_updated_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_status_updated_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Repair_Start_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Delivery_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Delivery_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETA_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETA_Hours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RO_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RO_Hours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@File_Import_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@File_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@File_Import_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsRead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [UserVehicleStatus] SET [Vehicle_id] = @Vehicle_id, [DateIn] = @DateIn, [D" +
                "ateOut] = @DateOut, [User_id] = @User_id, [VehicleStatus] = @VehicleStatus, [Las" +
                "t_status_updated_date] = @Last_status_updated_date, [DeliveryDate] = @DeliveryDa" +
                "te, [Repair_Start_Date] = @Repair_Start_Date, [Actual_Delivery_Date] = @Actual_D" +
                "elivery_Date, [ETA_Hours] = @ETA_Hours, [RO_Hours] = @RO_Hours, [File_Import_Dat" +
                "e] = @File_Import_Date, [File_Status] = @File_Status, [File_Import_Time] = @File" +
                "_Import_Time, [IsRead] = @IsRead WHERE (([ID] = @Original_ID) AND ((@IsNull_Vehi" +
                "cle_id = 1 AND [Vehicle_id] IS NULL) OR ([Vehicle_id] = @Original_Vehicle_id)) A" +
                "ND ((@IsNull_DateIn = 1 AND [DateIn] IS NULL) OR ([DateIn] = @Original_DateIn)) " +
                "AND ((@IsNull_DateOut = 1 AND [DateOut] IS NULL) OR ([DateOut] = @Original_DateO" +
                "ut)) AND ((@IsNull_User_id = 1 AND [User_id] IS NULL) OR ([User_id] = @Original_" +
                "User_id)) AND ((@IsNull_VehicleStatus = 1 AND [VehicleStatus] IS NULL) OR ([Vehi" +
                "cleStatus] = @Original_VehicleStatus)) AND ((@IsNull_Last_status_updated_date = " +
                "1 AND [Last_status_updated_date] IS NULL) OR ([Last_status_updated_date] = @Orig" +
                "inal_Last_status_updated_date)) AND ((@IsNull_DeliveryDate = 1 AND [DeliveryDate" +
                "] IS NULL) OR ([DeliveryDate] = @Original_DeliveryDate)) AND ((@IsNull_Repair_St" +
                "art_Date = 1 AND [Repair_Start_Date] IS NULL) OR ([Repair_Start_Date] = @Origina" +
                "l_Repair_Start_Date)) AND ((@IsNull_Actual_Delivery_Date = 1 AND [Actual_Deliver" +
                "y_Date] IS NULL) OR ([Actual_Delivery_Date] = @Original_Actual_Delivery_Date)) A" +
                "ND ((@IsNull_ETA_Hours = 1 AND [ETA_Hours] IS NULL) OR ([ETA_Hours] = @Original_" +
                "ETA_Hours)) AND ((@IsNull_RO_Hours = 1 AND [RO_Hours] IS NULL) OR ([RO_Hours] = " +
                "@Original_RO_Hours)) AND ((@IsNull_File_Import_Date = 1 AND [File_Import_Date] I" +
                "S NULL) OR ([File_Import_Date] = @Original_File_Import_Date)) AND ((@IsNull_File" +
                "_Status = 1 AND [File_Status] IS NULL) OR ([File_Status] = @Original_File_Status" +
                ")) AND ((@IsNull_File_Import_Time = 1 AND [File_Import_Time] IS NULL) OR ([File_" +
                "Import_Time] = @Original_File_Import_Time)) AND ((@IsNull_IsRead = 1 AND [IsRead" +
                "] IS NULL) OR ([IsRead] = @Original_IsRead)));\r\nSELECT ID, Vehicle_id, DateIn, D" +
                "ateOut, User_id, VehicleStatus, Last_status_updated_date, DeliveryDate, Repair_S" +
                "tart_Date, Actual_Delivery_Date, ETA_Hours, RO_Hours, File_Import_Date, File_Sta" +
                "tus, File_Import_Time, IsRead FROM UserVehicleStatus WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateIn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateIn", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateOut", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOut", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@User_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_status_updated_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_status_updated_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Repair_Start_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair_Start_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Actual_Delivery_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Delivery_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETA_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETA_Hours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RO_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RO_Hours", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@File_Import_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@File_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@File_Import_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsRead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRead", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateIn", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateIn", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateIn", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateIn", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateOut", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOut", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateOut", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateOut", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_User_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_User_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "User_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_status_updated_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_status_updated_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_status_updated_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_status_updated_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DeliveryDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Repair_Start_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair_Start_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Repair_Start_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Repair_Start_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Actual_Delivery_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Delivery_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Actual_Delivery_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Actual_Delivery_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ETA_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETA_Hours", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETA_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETA_Hours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RO_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RO_Hours", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RO_Hours", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RO_Hours", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_File_Import_Date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_File_Import_Date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_File_Status", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Status", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_File_Status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_File_Import_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_File_Import_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "File_Import_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsRead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRead", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsRead", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsRead", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        ID, Vehicle_id, DateIn, DateOut, User_id, VehicleStatus, Last_status_updated_date, DeliveryDate, Repair_Start_Date, Actual_Delivery_Date, ETA_Hours, RO_Hours, 
                         File_Import_Date, File_Status, File_Import_Time, IsRead
FROM            UserVehicleStatus";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT Actual_Delivery_Date, DateIn, DateOut, DeliveryDate, ETA_Hours, File_Import_Date, File_Import_Time, File_Status, ID, IsRead, Last_status_updated_date, RO_Hours, Repair_Start_Date, User_id, VehicleStatus, Vehicle_id FROM UserVehicleStatus WHERE (ID = @id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT Actual_Delivery_Date, DateIn, DateOut, DeliveryDate, ETA_Hours, File_Import_Date, File_Import_Time, File_Status, ID, IsRead, Last_status_updated_date, RO_Hours, Repair_Start_Date, User_id, VehicleStatus, Vehicle_id FROM UserVehicleStatus WHERE (Vehicle_id = @vehicleId)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicleId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.UserVehicleStatusDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.UserVehicleStatusDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.UserVehicleStatusDataTable dataTable = new SummitDS.UserVehicleStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UserVehicleStatusDataTable GetDataById(int id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(id));
            SummitDS.UserVehicleStatusDataTable dataTable = new SummitDS.UserVehicleStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.UserVehicleStatusDataTable GetDataByVehicleId(global::System.Nullable<int> vehicleId) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((vehicleId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(vehicleId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SummitDS.UserVehicleStatusDataTable dataTable = new SummitDS.UserVehicleStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.UserVehicleStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "UserVehicleStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_ID, 
                    global::System.Nullable<int> Original_Vehicle_id, 
                    global::System.Nullable<global::System.DateTime> Original_DateIn, 
                    global::System.Nullable<global::System.DateTime> Original_DateOut, 
                    global::System.Nullable<int> Original_User_id, 
                    global::System.Nullable<int> Original_VehicleStatus, 
                    global::System.Nullable<global::System.DateTime> Original_Last_status_updated_date, 
                    global::System.Nullable<global::System.DateTime> Original_DeliveryDate, 
                    global::System.Nullable<global::System.DateTime> Original_Repair_Start_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Actual_Delivery_Date, 
                    global::System.Nullable<int> Original_ETA_Hours, 
                    global::System.Nullable<int> Original_RO_Hours, 
                    global::System.Nullable<global::System.DateTime> Original_File_Import_Date, 
                    string Original_File_Status, 
                    global::System.Nullable<global::System.DateTime> Original_File_Import_Time, 
                    global::System.Nullable<int> Original_IsRead) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_Vehicle_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Vehicle_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_DateIn.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DateIn.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DateOut.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DateOut.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_User_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_User_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_VehicleStatus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_VehicleStatus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Last_status_updated_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Last_status_updated_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_DeliveryDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_DeliveryDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Repair_Start_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_Repair_Start_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Actual_Delivery_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_Actual_Delivery_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_ETA_Hours.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((int)(Original_ETA_Hours.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_RO_Hours.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_RO_Hours.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_File_Import_Date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((System.DateTime)(Original_File_Import_Date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_File_Status == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_File_Status));
            }
            if ((Original_File_Import_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((System.DateTime)(Original_File_Import_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_IsRead.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_IsRead.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> Vehicle_id, global::System.Nullable<global::System.DateTime> DateIn, global::System.Nullable<global::System.DateTime> DateOut, global::System.Nullable<int> User_id, global::System.Nullable<int> VehicleStatus, global::System.Nullable<global::System.DateTime> Last_status_updated_date, global::System.Nullable<global::System.DateTime> DeliveryDate, global::System.Nullable<global::System.DateTime> Repair_Start_Date, global::System.Nullable<global::System.DateTime> Actual_Delivery_Date, global::System.Nullable<int> ETA_Hours, global::System.Nullable<int> RO_Hours, global::System.Nullable<global::System.DateTime> File_Import_Date, string File_Status, global::System.Nullable<global::System.DateTime> File_Import_Time, global::System.Nullable<int> IsRead) {
            if ((Vehicle_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Vehicle_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DateIn.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DateIn.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateOut.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DateOut.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((User_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(User_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((VehicleStatus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(VehicleStatus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Last_status_updated_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Last_status_updated_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DeliveryDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(DeliveryDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Repair_Start_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Repair_Start_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Actual_Delivery_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(Actual_Delivery_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ETA_Hours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(ETA_Hours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((RO_Hours.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(RO_Hours.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((File_Import_Date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(File_Import_Date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((File_Status == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(File_Status));
            }
            if ((File_Import_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(File_Import_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((IsRead.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(IsRead.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> Vehicle_id, 
                    global::System.Nullable<global::System.DateTime> DateIn, 
                    global::System.Nullable<global::System.DateTime> DateOut, 
                    global::System.Nullable<int> User_id, 
                    global::System.Nullable<int> VehicleStatus, 
                    global::System.Nullable<global::System.DateTime> Last_status_updated_date, 
                    global::System.Nullable<global::System.DateTime> DeliveryDate, 
                    global::System.Nullable<global::System.DateTime> Repair_Start_Date, 
                    global::System.Nullable<global::System.DateTime> Actual_Delivery_Date, 
                    global::System.Nullable<int> ETA_Hours, 
                    global::System.Nullable<int> RO_Hours, 
                    global::System.Nullable<global::System.DateTime> File_Import_Date, 
                    string File_Status, 
                    global::System.Nullable<global::System.DateTime> File_Import_Time, 
                    global::System.Nullable<int> IsRead, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Vehicle_id, 
                    global::System.Nullable<global::System.DateTime> Original_DateIn, 
                    global::System.Nullable<global::System.DateTime> Original_DateOut, 
                    global::System.Nullable<int> Original_User_id, 
                    global::System.Nullable<int> Original_VehicleStatus, 
                    global::System.Nullable<global::System.DateTime> Original_Last_status_updated_date, 
                    global::System.Nullable<global::System.DateTime> Original_DeliveryDate, 
                    global::System.Nullable<global::System.DateTime> Original_Repair_Start_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Actual_Delivery_Date, 
                    global::System.Nullable<int> Original_ETA_Hours, 
                    global::System.Nullable<int> Original_RO_Hours, 
                    global::System.Nullable<global::System.DateTime> Original_File_Import_Date, 
                    string Original_File_Status, 
                    global::System.Nullable<global::System.DateTime> Original_File_Import_Time, 
                    global::System.Nullable<int> Original_IsRead, 
                    int ID) {
            if ((Vehicle_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Vehicle_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DateIn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DateIn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DateOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((User_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(User_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((VehicleStatus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(VehicleStatus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Last_status_updated_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Last_status_updated_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DeliveryDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(DeliveryDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Repair_Start_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Repair_Start_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Actual_Delivery_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Actual_Delivery_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ETA_Hours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(ETA_Hours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((RO_Hours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(RO_Hours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((File_Import_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(File_Import_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((File_Status == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(File_Status));
            }
            if ((File_Import_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(File_Import_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((IsRead.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(IsRead.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_ID));
            if ((Original_Vehicle_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_Vehicle_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_DateIn.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_DateIn.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_DateOut.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_DateOut.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_User_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Original_User_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_VehicleStatus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(Original_VehicleStatus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Last_status_updated_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(Original_Last_status_updated_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_DeliveryDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_DeliveryDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Repair_Start_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(Original_Repair_Start_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Actual_Delivery_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_Actual_Delivery_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_ETA_Hours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((int)(Original_ETA_Hours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_RO_Hours.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(Original_RO_Hours.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_File_Import_Date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((System.DateTime)(Original_File_Import_Date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_File_Status == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_File_Status));
            }
            if ((Original_File_Import_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((System.DateTime)(Original_File_Import_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_IsRead.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((int)(Original_IsRead.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> Vehicle_id, 
                    global::System.Nullable<global::System.DateTime> DateIn, 
                    global::System.Nullable<global::System.DateTime> DateOut, 
                    global::System.Nullable<int> User_id, 
                    global::System.Nullable<int> VehicleStatus, 
                    global::System.Nullable<global::System.DateTime> Last_status_updated_date, 
                    global::System.Nullable<global::System.DateTime> DeliveryDate, 
                    global::System.Nullable<global::System.DateTime> Repair_Start_Date, 
                    global::System.Nullable<global::System.DateTime> Actual_Delivery_Date, 
                    global::System.Nullable<int> ETA_Hours, 
                    global::System.Nullable<int> RO_Hours, 
                    global::System.Nullable<global::System.DateTime> File_Import_Date, 
                    string File_Status, 
                    global::System.Nullable<global::System.DateTime> File_Import_Time, 
                    global::System.Nullable<int> IsRead, 
                    int Original_ID, 
                    global::System.Nullable<int> Original_Vehicle_id, 
                    global::System.Nullable<global::System.DateTime> Original_DateIn, 
                    global::System.Nullable<global::System.DateTime> Original_DateOut, 
                    global::System.Nullable<int> Original_User_id, 
                    global::System.Nullable<int> Original_VehicleStatus, 
                    global::System.Nullable<global::System.DateTime> Original_Last_status_updated_date, 
                    global::System.Nullable<global::System.DateTime> Original_DeliveryDate, 
                    global::System.Nullable<global::System.DateTime> Original_Repair_Start_Date, 
                    global::System.Nullable<global::System.DateTime> Original_Actual_Delivery_Date, 
                    global::System.Nullable<int> Original_ETA_Hours, 
                    global::System.Nullable<int> Original_RO_Hours, 
                    global::System.Nullable<global::System.DateTime> Original_File_Import_Date, 
                    string Original_File_Status, 
                    global::System.Nullable<global::System.DateTime> Original_File_Import_Time, 
                    global::System.Nullable<int> Original_IsRead) {
            return this.Update(Vehicle_id, DateIn, DateOut, User_id, VehicleStatus, Last_status_updated_date, DeliveryDate, Repair_Start_Date, Actual_Delivery_Date, ETA_Hours, RO_Hours, File_Import_Date, File_Status, File_Import_Time, IsRead, Original_ID, Original_Vehicle_id, Original_DateIn, Original_DateOut, Original_User_id, Original_VehicleStatus, Original_Last_status_updated_date, Original_DeliveryDate, Original_Repair_Start_Date, Original_Actual_Delivery_Date, Original_ETA_Hours, Original_RO_Hours, Original_File_Import_Date, Original_File_Status, Original_File_Import_Time, Original_IsRead, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_MyCustomerTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_MyCustomerTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_MyCustomer";
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("shop_name", "shop_name");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("username", "username");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("DateIn", "DateIn");
            tableMapping.ColumnMappings.Add("DateOut", "DateOut");
            tableMapping.ColumnMappings.Add("model", "model");
            tableMapping.ColumnMappings.Add("make", "make");
            tableMapping.ColumnMappings.Add("year", "year");
            tableMapping.ColumnMappings.Add("contactMethod", "contactMethod");
            tableMapping.ColumnMappings.Add("updatedEntryTime", "updatedEntryTime");
            tableMapping.ColumnMappings.Add("claim_number", "claim_number");
            tableMapping.ColumnMappings.Add("repair_order_identifier", "repair_order_identifier");
            tableMapping.ColumnMappings.Add("agent_name", "agent_name");
            tableMapping.ColumnMappings.Add("company_name", "company_name");
            tableMapping.ColumnMappings.Add("net_total_amount", "net_total_amount");
            tableMapping.ColumnMappings.Add("estimate_file_identifier", "estimate_file_identifier");
            tableMapping.ColumnMappings.Add("createddate", "createddate");
            tableMapping.ColumnMappings.Add("push_notification_device_id", "push_notification_device_id");
            tableMapping.ColumnMappings.Add("VehicleStatus", "VehicleStatus");
            tableMapping.ColumnMappings.Add("first_name", "first_name");
            tableMapping.ColumnMappings.Add("last_name", "last_name");
            tableMapping.ColumnMappings.Add("zip", "zip");
            tableMapping.ColumnMappings.Add("DeliveryDate", "DeliveryDate");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("Status", "Status");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[5];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT user_id, shop_id, shop_name, email, username, phone, DateIn, DateOut, model, make, year, contactMethod, updatedEntryTime, claim_number, repair_order_identifier, agent_name, company_name, net_total_amount, estimate_file_identifier, createddate, push_notification_device_id, VehicleStatus, first_name, last_name, zip, DeliveryDate, vehicle_id, Status FROM dbo.View_MyCustomer";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     DateIn, DateOut, DeliveryDate, Status, VehicleStatus, Vehicle_id, agent_name, claim_number, company_name, contactMethod, createddate, email, 
                      estimate_file_identifier, first_name, last_name, make, model, net_total_amount, phone, push_notification_device_id, repair_order_identifier, shop_id, shop_name, 
                      updatedEntryTime, user_id, username, year, zip
FROM         View_MyCustomer
WHERE     (shop_id = @shop_id)
ORDER BY CASE WHEN username LIKE '%_ _%' THEN REVERSE(SUBSTRING(REVERSE(LTRIM(RTRIM(USERNAME))), 0, CHARINDEX(' ', 
                      REVERSE(LTRIM(RTRIM(USERNAME)))))) ELSE USERNAME END";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     user_id, shop_id, shop_name, email, username, phone, DateIn, DateOut, model, make, year, contactMethod, updatedEntryTime, claim_number, 
                      repair_order_identifier, agent_name, company_name, net_total_amount, estimate_file_identifier, createddate, push_notification_device_id, VehicleStatus, first_name, 
                      last_name, zip, DeliveryDate, Vehicle_id, Status
FROM         View_MyCustomer
WHERE     (shop_id = @shop_id) AND (phone = @phone) AND (isShowInProcess = 1)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT DateIn, DateOut, DeliveryDate, Status, VehicleStatus, Vehicle_id, agent_name, claim_number, company_name, contactMethod, createddate, email, estimate_file_identifier, first_name, last_name, make, model, net_total_amount, phone, push_notification_device_id, repair_order_identifier, shop_id, shop_name, updatedEntryTime, user_id, username, year, zip FROM View_MyCustomer WHERE (user_id = @user_id)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.SP_MyCustomer";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.View_MyCustomerDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.View_MyCustomerDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.View_MyCustomerDataTable dataTable = new SummitDS.View_MyCustomerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.View_MyCustomerDataTable GetDataByShopId(global::System.Nullable<int> shop_id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((shop_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SummitDS.View_MyCustomerDataTable dataTable = new SummitDS.View_MyCustomerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.View_MyCustomerDataTable GetDataByShopIDNPhone(global::System.Nullable<int> shop_id, string phone) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((shop_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((phone == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(phone));
            }
            SummitDS.View_MyCustomerDataTable dataTable = new SummitDS.View_MyCustomerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.View_MyCustomerDataTable GetDataByUserId(global::System.Nullable<int> user_id) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((user_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SummitDS.View_MyCustomerDataTable dataTable = new SummitDS.View_MyCustomerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.View_MyCustomerDataTable GetDataMyCustomerShopId(global::System.Nullable<int> shop_Id) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((shop_Id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shop_Id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.View_MyCustomerDataTable dataTable = new SummitDS.View_MyCustomerDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ScheduledUsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ScheduledUsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ScheduledUsers";
            tableMapping.ColumnMappings.Add("scheduled_users_id", "scheduled_users_id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("send_date", "send_date");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("frequency_id", "frequency_id");
            tableMapping.ColumnMappings.Add("isMailSent", "isMailSent");
            tableMapping.ColumnMappings.Add("isSmsSent", "isSmsSent");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ScheduledUsers] WHERE (([scheduled_users_id] = @Original_scheduled_users_id) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@IsNull_send_date = 1 AND [send_date] IS NULL) OR ([send_date] = @Original_send_date)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_frequency_id = 1 AND [frequency_id] IS NULL) OR ([frequency_id] = @Original_frequency_id)) AND ((@IsNull_isMailSent = 1 AND [isMailSent] IS NULL) OR ([isMailSent] = @Original_isMailSent)) AND ((@IsNull_isSmsSent = 1 AND [isSmsSent] IS NULL) OR ([isSmsSent] = @Original_isSmsSent)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_scheduled_users_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "scheduled_users_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_send_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "send_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_send_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "send_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isMailSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isMailSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isSmsSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isSmsSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ScheduledUsers] ([user_id], [send_date], [shop_id], [frequency_id], [isMailSent], [isSmsSent]) VALUES (@user_id, @send_date, @shop_id, @frequency_id, @isMailSent, @isSmsSent);
SELECT scheduled_users_id, user_id, send_date, shop_id, frequency_id, isMailSent, isSmsSent FROM ScheduledUsers WHERE (scheduled_users_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@send_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "send_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isMailSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSmsSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ScheduledUsers] SET [user_id] = @user_id, [send_date] = @send_date, [shop_id] = @shop_id, [frequency_id] = @frequency_id, [isMailSent] = @isMailSent, [isSmsSent] = @isSmsSent WHERE (([scheduled_users_id] = @Original_scheduled_users_id) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@IsNull_send_date = 1 AND [send_date] IS NULL) OR ([send_date] = @Original_send_date)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_frequency_id = 1 AND [frequency_id] IS NULL) OR ([frequency_id] = @Original_frequency_id)) AND ((@IsNull_isMailSent = 1 AND [isMailSent] IS NULL) OR ([isMailSent] = @Original_isMailSent)) AND ((@IsNull_isSmsSent = 1 AND [isSmsSent] IS NULL) OR ([isSmsSent] = @Original_isSmsSent)));
SELECT scheduled_users_id, user_id, send_date, shop_id, frequency_id, isMailSent, isSmsSent FROM ScheduledUsers WHERE (scheduled_users_id = @scheduled_users_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@send_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "send_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isMailSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSmsSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_scheduled_users_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "scheduled_users_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_send_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "send_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_send_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "send_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isMailSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isMailSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isSmsSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isSmsSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scheduled_users_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "scheduled_users_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     scheduled_users_id, user_id, send_date, shop_id, frequency_id, isMailS" +
                "ent, isSmsSent\r\nFROM         ScheduledUsers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.Sp_SchduledUsers_getDataByFrequencyId";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iUserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iFrequencyId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT frequency_id, isMailSent, isSmsSent, scheduled_users_id, send_date, shop_i" +
                "d, user_id FROM ScheduledUsers WHERE (scheduled_users_id = @scheduled_users_id)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@scheduled_users_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "scheduled_users_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT frequency_id, isMailSent, isSmsSent, scheduled_users_id, send_date, shop_i" +
                "d, user_id FROM ScheduledUsers WHERE (user_id = @userId) AND (shop_id = @shopId)" +
                " AND (frequency_id = @frequencyId)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequencyId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.ScheduledUsersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.ScheduledUsersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.ScheduledUsersDataTable dataTable = new SummitDS.ScheduledUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(SummitDS.ScheduledUsersDataTable dataTable, global::System.Nullable<int> iShopId, global::System.Nullable<int> iUserId, global::System.Nullable<int> iFrequencyId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iShopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iShopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((iUserId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(iUserId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((iFrequencyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(iFrequencyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ScheduledUsersDataTable GetDataByFrequencyId(global::System.Nullable<int> iShopId, global::System.Nullable<int> iUserId, global::System.Nullable<int> iFrequencyId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iShopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iShopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((iUserId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(iUserId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((iFrequencyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(iFrequencyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            SummitDS.ScheduledUsersDataTable dataTable = new SummitDS.ScheduledUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ScheduledUsersDataTable GetDataById(int scheduled_users_id) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(scheduled_users_id));
            SummitDS.ScheduledUsersDataTable dataTable = new SummitDS.ScheduledUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ScheduledUsersDataTable GetDataByUserIdShopIdAndFrequencyId(global::System.Nullable<int> userId, global::System.Nullable<int> shopId, global::System.Nullable<int> frequencyId) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((userId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(userId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((frequencyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(frequencyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            SummitDS.ScheduledUsersDataTable dataTable = new SummitDS.ScheduledUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.ScheduledUsersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "ScheduledUsers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_scheduled_users_id, global::System.Nullable<int> Original_user_id, global::System.Nullable<global::System.DateTime> Original_send_date, global::System.Nullable<int> Original_shop_id, global::System.Nullable<int> Original_frequency_id, global::System.Nullable<bool> Original_isMailSent, global::System.Nullable<bool> Original_isSmsSent) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_scheduled_users_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_send_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_send_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_frequency_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_frequency_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_isMailSent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_isMailSent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_isSmsSent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_isSmsSent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> user_id, global::System.Nullable<global::System.DateTime> send_date, global::System.Nullable<int> shop_id, global::System.Nullable<int> frequency_id, global::System.Nullable<bool> isMailSent, global::System.Nullable<bool> isSmsSent) {
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((send_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(send_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((frequency_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(frequency_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((isMailSent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(isMailSent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((isSmsSent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(isSmsSent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> user_id, global::System.Nullable<global::System.DateTime> send_date, global::System.Nullable<int> shop_id, global::System.Nullable<int> frequency_id, global::System.Nullable<bool> isMailSent, global::System.Nullable<bool> isSmsSent, int Original_scheduled_users_id, global::System.Nullable<int> Original_user_id, global::System.Nullable<global::System.DateTime> Original_send_date, global::System.Nullable<int> Original_shop_id, global::System.Nullable<int> Original_frequency_id, global::System.Nullable<bool> Original_isMailSent, global::System.Nullable<bool> Original_isSmsSent, int scheduled_users_id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((send_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(send_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((frequency_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(frequency_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((isMailSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(isMailSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((isSmsSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(isSmsSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_scheduled_users_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_send_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_send_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_frequency_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_frequency_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_isMailSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(Original_isMailSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_isSmsSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(Original_isSmsSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((int)(scheduled_users_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> user_id, global::System.Nullable<global::System.DateTime> send_date, global::System.Nullable<int> shop_id, global::System.Nullable<int> frequency_id, global::System.Nullable<bool> isMailSent, global::System.Nullable<bool> isSmsSent, int Original_scheduled_users_id, global::System.Nullable<int> Original_user_id, global::System.Nullable<global::System.DateTime> Original_send_date, global::System.Nullable<int> Original_shop_id, global::System.Nullable<int> Original_frequency_id, global::System.Nullable<bool> Original_isMailSent, global::System.Nullable<bool> Original_isSmsSent) {
            return this.Update(user_id, send_date, shop_id, frequency_id, isMailSent, isSmsSent, Original_scheduled_users_id, Original_user_id, Original_send_date, Original_shop_id, Original_frequency_id, Original_isMailSent, Original_isSmsSent, Original_scheduled_users_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ReocurringCampaignUsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ReocurringCampaignUsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ReocurringCampaignUsers";
            tableMapping.ColumnMappings.Add("reocurring_campaign_user_id", "reocurring_campaign_user_id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("delivered_date", "delivered_date");
            tableMapping.ColumnMappings.Add("isMailSent", "isMailSent");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("frequency_id", "frequency_id");
            tableMapping.ColumnMappings.Add("isSmsSent", "isSmsSent");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("email_template_id", "email_template_id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ReocurringCampaignUsers] WHERE (([reocurring_campaign_user_id] = @Original_reocurring_campaign_user_id) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@IsNull_delivered_date = 1 AND [delivered_date] IS NULL) OR ([delivered_date] = @Original_delivered_date)) AND ((@IsNull_isMailSent = 1 AND [isMailSent] IS NULL) OR ([isMailSent] = @Original_isMailSent)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_frequency_id = 1 AND [frequency_id] IS NULL) OR ([frequency_id] = @Original_frequency_id)) AND ((@IsNull_isSmsSent = 1 AND [isSmsSent] IS NULL) OR ([isSmsSent] = @Original_isSmsSent)) AND ((@IsNull_vehicle_id = 1 AND [vehicle_id] IS NULL) OR ([vehicle_id] = @Original_vehicle_id)) AND ((@IsNull_email_template_id = 1 AND [email_template_id] IS NULL) OR ([email_template_id] = @Original_email_template_id)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reocurring_campaign_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reocurring_campaign_user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delivered_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delivered_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delivered_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delivered_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isMailSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isMailSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isSmsSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isSmsSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email_template_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_template_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email_template_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_template_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ReocurringCampaignUsers] ([user_id], [delivered_date], [isMailSent], [shop_id], [frequency_id], [isSmsSent], [vehicle_id], [email_template_id]) VALUES (@user_id, @delivered_date, @isMailSent, @shop_id, @frequency_id, @isSmsSent, @vehicle_id, @email_template_id);
SELECT reocurring_campaign_user_id, user_id, delivered_date, isMailSent, shop_id, frequency_id, isSmsSent, vehicle_id, email_template_id FROM ReocurringCampaignUsers WHERE (reocurring_campaign_user_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delivered_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delivered_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isMailSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSmsSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_template_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_template_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ReocurringCampaignUsers] SET [user_id] = @user_id, [delivered_date] = @delivered_date, [isMailSent] = @isMailSent, [shop_id] = @shop_id, [frequency_id] = @frequency_id, [isSmsSent] = @isSmsSent, [vehicle_id] = @vehicle_id, [email_template_id] = @email_template_id WHERE (([reocurring_campaign_user_id] = @Original_reocurring_campaign_user_id) AND ((@IsNull_user_id = 1 AND [user_id] IS NULL) OR ([user_id] = @Original_user_id)) AND ((@IsNull_delivered_date = 1 AND [delivered_date] IS NULL) OR ([delivered_date] = @Original_delivered_date)) AND ((@IsNull_isMailSent = 1 AND [isMailSent] IS NULL) OR ([isMailSent] = @Original_isMailSent)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_frequency_id = 1 AND [frequency_id] IS NULL) OR ([frequency_id] = @Original_frequency_id)) AND ((@IsNull_isSmsSent = 1 AND [isSmsSent] IS NULL) OR ([isSmsSent] = @Original_isSmsSent)) AND ((@IsNull_vehicle_id = 1 AND [vehicle_id] IS NULL) OR ([vehicle_id] = @Original_vehicle_id)) AND ((@IsNull_email_template_id = 1 AND [email_template_id] IS NULL) OR ([email_template_id] = @Original_email_template_id)));
SELECT reocurring_campaign_user_id, user_id, delivered_date, isMailSent, shop_id, frequency_id, isSmsSent, vehicle_id, email_template_id FROM ReocurringCampaignUsers WHERE (reocurring_campaign_user_id = @reocurring_campaign_user_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@delivered_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delivered_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isMailSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isSmsSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email_template_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_template_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reocurring_campaign_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reocurring_campaign_user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_delivered_date", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delivered_date", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_delivered_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "delivered_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isMailSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isMailSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isMailSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isSmsSent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isSmsSent", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isSmsSent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email_template_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_template_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email_template_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email_template_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reocurring_campaign_user_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "reocurring_campaign_user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[9];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     reocurring_campaign_user_id, user_id, delivered_date, isMailSent, shop" +
                "_id, frequency_id, isSmsSent, vehicle_id, email_template_id\r\nFROM         Reocur" +
                "ringCampaignUsers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.DeleteFromReocurringCampaignUsersForNull";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "dbo.Sp_ReocurringCampaignUsers_getDataByShopId";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iFrequencyId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iDays", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.Sp_ReocurringCampaignUsers_getDataById";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.Sp_ReocurringCampaignUsers_getDataByShopIdNew";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iFrequencyId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iDays", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.Sp_ReocurringCampaignUsers_getDataByShopIdandFrequencyId";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iFrequencyId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT delivered_date, frequency_id, isMailSent, isSmsSent, reocurring_campaign_u" +
                "ser_id, shop_id, user_id FROM ReocurringCampaignUsers WHERE (shop_id = @shopId) " +
                "AND (user_id = @userId)";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT delivered_date, frequency_id, isMailSent, isSmsSent, reocurring_campaign_u" +
                "ser_id, shop_id, user_id FROM ReocurringCampaignUsers WHERE (shop_id = @shopId) " +
                "AND (user_id = @userId) AND (frequency_id = @frequencyId)";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@userId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequencyId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "dbo.UpdateDeliveryDateForUserIdAndShopId";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.ReocurringCampaignUsersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.ReocurringCampaignUsersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.ReocurringCampaignUsersDataTable dataTable = new SummitDS.ReocurringCampaignUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(SummitDS.ReocurringCampaignUsersDataTable dataTable, global::System.Nullable<int> iFrequencyId, global::System.Nullable<int> shopId, global::System.Nullable<int> iDays) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((iFrequencyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iFrequencyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((iDays.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(iDays.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ReocurringCampaignUsersDataTable GetDataByShopId(global::System.Nullable<int> iFrequencyId, global::System.Nullable<int> shopId, global::System.Nullable<int> iDays) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((iFrequencyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iFrequencyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((iDays.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(iDays.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            SummitDS.ReocurringCampaignUsersDataTable dataTable = new SummitDS.ReocurringCampaignUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy1(SummitDS.ReocurringCampaignUsersDataTable dataTable, global::System.Nullable<int> iID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((iID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ReocurringCampaignUsersDataTable GetDataById(global::System.Nullable<int> iID) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((iID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.ReocurringCampaignUsersDataTable dataTable = new SummitDS.ReocurringCampaignUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ReocurringCampaignUsersDataTable GetDataByFrequencyId(global::System.Nullable<int> iFrequencyId, global::System.Nullable<int> shopId, global::System.Nullable<int> iDays) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((iFrequencyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iFrequencyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((iDays.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(iDays.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            SummitDS.ReocurringCampaignUsersDataTable dataTable = new SummitDS.ReocurringCampaignUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ReocurringCampaignUsersDataTable GetDataByShopIdAndFrequencyId(global::System.Nullable<int> iFrequencyId, global::System.Nullable<int> shopId) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((iFrequencyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iFrequencyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            SummitDS.ReocurringCampaignUsersDataTable dataTable = new SummitDS.ReocurringCampaignUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ReocurringCampaignUsersDataTable GetDataByShopIdAndUserId(global::System.Nullable<int> shopId, global::System.Nullable<int> userId) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((userId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(userId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.ReocurringCampaignUsersDataTable dataTable = new SummitDS.ReocurringCampaignUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ReocurringCampaignUsersDataTable GetDataByShopUserAndFrequencyId(global::System.Nullable<int> shopId, global::System.Nullable<int> userId, global::System.Nullable<int> frequencyId) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((userId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(userId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((frequencyId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(frequencyId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            SummitDS.ReocurringCampaignUsersDataTable dataTable = new SummitDS.ReocurringCampaignUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.ReocurringCampaignUsersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "ReocurringCampaignUsers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_reocurring_campaign_user_id, global::System.Nullable<int> Original_user_id, global::System.Nullable<global::System.DateTime> Original_delivered_date, global::System.Nullable<bool> Original_isMailSent, global::System.Nullable<int> Original_shop_id, global::System.Nullable<int> Original_frequency_id, global::System.Nullable<bool> Original_isSmsSent, global::System.Nullable<int> Original_vehicle_id, global::System.Nullable<int> Original_email_template_id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_reocurring_campaign_user_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_delivered_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_delivered_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_isMailSent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_isMailSent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_frequency_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((int)(Original_frequency_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_isSmsSent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_isSmsSent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_vehicle_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_vehicle_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_email_template_id.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((int)(Original_email_template_id.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> user_id, global::System.Nullable<global::System.DateTime> delivered_date, global::System.Nullable<bool> isMailSent, global::System.Nullable<int> shop_id, global::System.Nullable<int> frequency_id, global::System.Nullable<bool> isSmsSent, global::System.Nullable<int> vehicle_id, global::System.Nullable<int> email_template_id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((delivered_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(delivered_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((isMailSent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(isMailSent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((frequency_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(frequency_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((isSmsSent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(isSmsSent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((vehicle_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(vehicle_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((email_template_id.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(email_template_id.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> user_id, 
                    global::System.Nullable<global::System.DateTime> delivered_date, 
                    global::System.Nullable<bool> isMailSent, 
                    global::System.Nullable<int> shop_id, 
                    global::System.Nullable<int> frequency_id, 
                    global::System.Nullable<bool> isSmsSent, 
                    global::System.Nullable<int> vehicle_id, 
                    global::System.Nullable<int> email_template_id, 
                    int Original_reocurring_campaign_user_id, 
                    global::System.Nullable<int> Original_user_id, 
                    global::System.Nullable<global::System.DateTime> Original_delivered_date, 
                    global::System.Nullable<bool> Original_isMailSent, 
                    global::System.Nullable<int> Original_shop_id, 
                    global::System.Nullable<int> Original_frequency_id, 
                    global::System.Nullable<bool> Original_isSmsSent, 
                    global::System.Nullable<int> Original_vehicle_id, 
                    global::System.Nullable<int> Original_email_template_id, 
                    int reocurring_campaign_user_id) {
            if ((user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((delivered_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(delivered_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((isMailSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(isMailSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((frequency_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(frequency_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((isSmsSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(isSmsSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((vehicle_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(vehicle_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((email_template_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(email_template_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_reocurring_campaign_user_id));
            if ((Original_user_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_user_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_delivered_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_delivered_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_isMailSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Original_isMailSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_shop_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_shop_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_frequency_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_frequency_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_isSmsSent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_isSmsSent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_vehicle_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_vehicle_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_email_template_id.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_email_template_id.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[25].Value = ((int)(reocurring_campaign_user_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<int> user_id, 
                    global::System.Nullable<global::System.DateTime> delivered_date, 
                    global::System.Nullable<bool> isMailSent, 
                    global::System.Nullable<int> shop_id, 
                    global::System.Nullable<int> frequency_id, 
                    global::System.Nullable<bool> isSmsSent, 
                    global::System.Nullable<int> vehicle_id, 
                    global::System.Nullable<int> email_template_id, 
                    int Original_reocurring_campaign_user_id, 
                    global::System.Nullable<int> Original_user_id, 
                    global::System.Nullable<global::System.DateTime> Original_delivered_date, 
                    global::System.Nullable<bool> Original_isMailSent, 
                    global::System.Nullable<int> Original_shop_id, 
                    global::System.Nullable<int> Original_frequency_id, 
                    global::System.Nullable<bool> Original_isSmsSent, 
                    global::System.Nullable<int> Original_vehicle_id, 
                    global::System.Nullable<int> Original_email_template_id) {
            return this.Update(user_id, delivered_date, isMailSent, shop_id, frequency_id, isSmsSent, vehicle_id, email_template_id, Original_reocurring_campaign_user_id, Original_user_id, Original_delivered_date, Original_isMailSent, Original_shop_id, Original_frequency_id, Original_isSmsSent, Original_vehicle_id, Original_email_template_id, Original_reocurring_campaign_user_id);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteFromReocurringCampaignUsersForNull(global::System.Nullable<int> UserId, global::System.Nullable<int> ShopId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[1];
            if ((UserId.HasValue == true)) {
                command.Parameters[1].Value = ((int)(UserId.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ShopId.HasValue == true)) {
                command.Parameters[2].Value = ((int)(ShopId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateDeliveryDateForUserIdAndShopId(global::System.Nullable<global::System.DateTime> DeliveryDate, global::System.Nullable<int> UserId, global::System.Nullable<int> ShopId) {
            global::System.Data.SqlClient.SqlCommand command = this.CommandCollection[8];
            if ((DeliveryDate.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(DeliveryDate.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((UserId.HasValue == true)) {
                command.Parameters[2].Value = ((int)(UserId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ShopId.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ShopId.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FrequencyTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FrequencyTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Frequency";
            tableMapping.ColumnMappings.Add("frequency_id", "frequency_id");
            tableMapping.ColumnMappings.Add("frequency", "frequency");
            tableMapping.ColumnMappings.Add("days", "days");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Frequency] WHERE (([frequency_id] = @Original_frequency_id) AN" +
                "D ((@IsNull_frequency = 1 AND [frequency] IS NULL) OR ([frequency] = @Original_f" +
                "requency)) AND ((@IsNull_days = 1 AND [days] IS NULL) OR ([days] = @Original_day" +
                "s)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_frequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_frequency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "days", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "days", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Frequency] ([frequency], [days]) VALUES (@frequency, @days);\r\n" +
                "SELECT frequency_id, frequency, days FROM Frequency WHERE (frequency_id = SCOPE_" +
                "IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "days", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Frequency] SET [frequency] = @frequency, [days] = @days WHERE (([frequency_id] = @Original_frequency_id) AND ((@IsNull_frequency = 1 AND [frequency] IS NULL) OR ([frequency] = @Original_frequency)) AND ((@IsNull_days = 1 AND [days] IS NULL) OR ([days] = @Original_days)));
SELECT frequency_id, frequency, days FROM Frequency WHERE (frequency_id = @frequency_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "days", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_frequency_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_frequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_frequency", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "frequency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "days", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_days", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "days", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@frequency_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "frequency_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT frequency_id, frequency, days FROM dbo.Frequency";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.SP_Frequency_getDataByFrequencyDays";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iFrequencyDays", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.FrequencyDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.FrequencyDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.FrequencyDataTable dataTable = new SummitDS.FrequencyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.FrequencyDataTable GetDataByDays(global::System.Nullable<int> iFrequencyDays) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((iFrequencyDays.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iFrequencyDays.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.FrequencyDataTable dataTable = new SummitDS.FrequencyDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.FrequencyDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "Frequency");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_frequency_id, string Original_frequency, global::System.Nullable<int> Original_days) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_frequency_id));
            if ((Original_frequency == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_frequency));
            }
            if ((Original_days.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_days.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string frequency, global::System.Nullable<int> days) {
            if ((frequency == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(frequency));
            }
            if ((days.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(days.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string frequency, global::System.Nullable<int> days, int Original_frequency_id, string Original_frequency, global::System.Nullable<int> Original_days, int frequency_id) {
            if ((frequency == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(frequency));
            }
            if ((days.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(days.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_frequency_id));
            if ((Original_frequency == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_frequency));
            }
            if ((Original_days.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_days.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(frequency_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string frequency, global::System.Nullable<int> days, int Original_frequency_id, string Original_frequency, global::System.Nullable<int> Original_days) {
            return this.Update(frequency, days, Original_frequency_id, Original_frequency, Original_days, Original_frequency_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AIManageRecurringActivityTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AIManageRecurringActivityTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AIManageRecurringActivity";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("ShopId", "ShopId");
            tableMapping.ColumnMappings.Add("UserId", "UserId");
            tableMapping.ColumnMappings.Add("DeliveryDate", "DeliveryDate");
            tableMapping.ColumnMappings.Add("IsProcessed", "IsProcessed");
            tableMapping.ColumnMappings.Add("ProcessedDate", "ProcessedDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[AIManageRecurringActivity] WHERE (([Id] = @Original_Id) AND ([ShopId] = @Original_ShopId) AND ([UserId] = @Original_UserId) AND ([DeliveryDate] = @Original_DeliveryDate) AND ((@IsNull_IsProcessed = 1 AND [IsProcessed] IS NULL) OR ([IsProcessed] = @Original_IsProcessed)) AND ((@IsNull_ProcessedDate = 1 AND [ProcessedDate] IS NULL) OR ([ProcessedDate] = @Original_ProcessedDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsProcessed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[AIManageRecurringActivity] ([ShopId], [UserId], [DeliveryDate], [IsProcessed], [ProcessedDate]) VALUES (@ShopId, @UserId, @DeliveryDate, @IsProcessed, @ProcessedDate);
SELECT Id, ShopId, UserId, DeliveryDate, IsProcessed, ProcessedDate FROM AIManageRecurringActivity WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[AIManageRecurringActivity] SET [ShopId] = @ShopId, [UserId] = @UserId, [DeliveryDate] = @DeliveryDate, [IsProcessed] = @IsProcessed, [ProcessedDate] = @ProcessedDate WHERE (([Id] = @Original_Id) AND ([ShopId] = @Original_ShopId) AND ([UserId] = @Original_UserId) AND ([DeliveryDate] = @Original_DeliveryDate) AND ((@IsNull_IsProcessed = 1 AND [IsProcessed] IS NULL) OR ([IsProcessed] = @Original_IsProcessed)) AND ((@IsNull_ProcessedDate = 1 AND [ProcessedDate] IS NULL) OR ([ProcessedDate] = @Original_ProcessedDate)));
SELECT Id, ShopId, UserId, DeliveryDate, IsProcessed, ProcessedDate FROM AIManageRecurringActivity WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UserId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DeliveryDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsProcessed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProcessedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Id, ShopId, UserId, DeliveryDate, IsProcessed, ProcessedDate FROM dbo.AIMa" +
                "nageRecurringActivity";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Id, ShopId, UserId, DeliveryDate, IsProcessed, ProcessedDate\r\nFROM " +
                "           AIManageRecurringActivity\r\nWHERE        (UserId = @UserId) AND (ShopI" +
                "d = @ShopId) AND (DeliveryDate = @DeliveryDate)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UserId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "UserId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeliveryDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DeliveryDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT TOP (1000) DeliveryDate, Id, IsProcessed, ProcessedDate, ShopId, UserId FR" +
                "OM AIManageRecurringActivity WHERE (IsProcessed <> 1) OR (IsProcessed IS NULL)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.AIManageRecurringActivityDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.AIManageRecurringActivityDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.AIManageRecurringActivityDataTable dataTable = new SummitDS.AIManageRecurringActivityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.AIManageRecurringActivityDataTable GetDataByShopIdUserIdAndDeliveryDate(int UserId, int ShopId, System.DateTime DeliveryDate) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(UserId));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ShopId));
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(DeliveryDate));
            SummitDS.AIManageRecurringActivityDataTable dataTable = new SummitDS.AIManageRecurringActivityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.AIManageRecurringActivityDataTable GetUnprocessedDataForAddingRecurringInfo() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            SummitDS.AIManageRecurringActivityDataTable dataTable = new SummitDS.AIManageRecurringActivityDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.AIManageRecurringActivityDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "AIManageRecurringActivity");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, int Original_ShopId, int Original_UserId, System.DateTime Original_DeliveryDate, global::System.Nullable<bool> Original_IsProcessed, global::System.Nullable<global::System.DateTime> Original_ProcessedDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ShopId));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_UserId));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DeliveryDate));
            if ((Original_IsProcessed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_IsProcessed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_ProcessedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_ProcessedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ShopId, int UserId, System.DateTime DeliveryDate, global::System.Nullable<bool> IsProcessed, global::System.Nullable<global::System.DateTime> ProcessedDate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ShopId));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(UserId));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DeliveryDate));
            if ((IsProcessed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(IsProcessed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ProcessedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ProcessedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ShopId, int UserId, System.DateTime DeliveryDate, global::System.Nullable<bool> IsProcessed, global::System.Nullable<global::System.DateTime> ProcessedDate, int Original_Id, int Original_ShopId, int Original_UserId, System.DateTime Original_DeliveryDate, global::System.Nullable<bool> Original_IsProcessed, global::System.Nullable<global::System.DateTime> Original_ProcessedDate, int Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ShopId));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(UserId));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DeliveryDate));
            if ((IsProcessed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(IsProcessed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ProcessedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ProcessedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Id));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ShopId));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_UserId));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_DeliveryDate));
            if ((Original_IsProcessed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_IsProcessed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ProcessedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_ProcessedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ShopId, int UserId, System.DateTime DeliveryDate, global::System.Nullable<bool> IsProcessed, global::System.Nullable<global::System.DateTime> ProcessedDate, int Original_Id, int Original_ShopId, int Original_UserId, System.DateTime Original_DeliveryDate, global::System.Nullable<bool> Original_IsProcessed, global::System.Nullable<global::System.DateTime> Original_ProcessedDate) {
            return this.Update(ShopId, UserId, DeliveryDate, IsProcessed, ProcessedDate, Original_Id, Original_ShopId, Original_UserId, Original_DeliveryDate, Original_IsProcessed, Original_ProcessedDate, Original_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BodyShopTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public BodyShopTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BodyShop";
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("shop_name", "shop_name");
            tableMapping.ColumnMappings.Add("address1", "address1");
            tableMapping.ColumnMappings.Add("address2", "address2");
            tableMapping.ColumnMappings.Add("latitude", "latitude");
            tableMapping.ColumnMappings.Add("longitude", "longitude");
            tableMapping.ColumnMappings.Add("ratings", "ratings");
            tableMapping.ColumnMappings.Add("city", "city");
            tableMapping.ColumnMappings.Add("state", "state");
            tableMapping.ColumnMappings.Add("image_attached", "image_attached");
            tableMapping.ColumnMappings.Add("zip", "zip");
            tableMapping.ColumnMappings.Add("phone", "phone");
            tableMapping.ColumnMappings.Add("fax", "fax");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("website", "website");
            tableMapping.ColumnMappings.Add("business_license", "business_license");
            tableMapping.ColumnMappings.Add("epa_license", "epa_license");
            tableMapping.ColumnMappings.Add("bar_license", "bar_license");
            tableMapping.ColumnMappings.Add("network_name", "network_name");
            tableMapping.ColumnMappings.Add("certification_vehicles", "certification_vehicles");
            tableMapping.ColumnMappings.Add("third_party_providers", "third_party_providers");
            tableMapping.ColumnMappings.Add("positive_ratings", "positive_ratings");
            tableMapping.ColumnMappings.Add("negative_ratings", "negative_ratings");
            tableMapping.ColumnMappings.Add("manager", "manager");
            tableMapping.ColumnMappings.Add("system_admin", "system_admin");
            tableMapping.ColumnMappings.Add("portal_admin_password", "portal_admin_password");
            tableMapping.ColumnMappings.Add("company_tag_line", "company_tag_line");
            tableMapping.ColumnMappings.Add("owner", "owner");
            tableMapping.ColumnMappings.Add("noPremierShop", "noPremierShop");
            tableMapping.ColumnMappings.Add("noHelpSelection", "noHelpSelection");
            tableMapping.ColumnMappings.Add("isPremierShop", "isPremierShop");
            tableMapping.ColumnMappings.Add("image_path", "image_path");
            tableMapping.ColumnMappings.Add("messageCount", "messageCount");
            tableMapping.ColumnMappings.Add("availableMessages", "availableMessages");
            tableMapping.ColumnMappings.Add("expirationDate", "expirationDate");
            tableMapping.ColumnMappings.Add("startDate", "startDate");
            tableMapping.ColumnMappings.Add("isShow", "isShow");
            tableMapping.ColumnMappings.Add("commentsfrequency", "commentsfrequency");
            tableMapping.ColumnMappings.Add("displaycommentonswebapp", "displaycommentonswebapp");
            tableMapping.ColumnMappings.Add("subscription_reminder_day", "subscription_reminder_day");
            tableMapping.ColumnMappings.Add("displaypromoonwebpage", "displaypromoonwebpage");
            tableMapping.ColumnMappings.Add("applyemailtemplate", "applyemailtemplate");
            tableMapping.ColumnMappings.Add("isRcintegrationapproved", "isRcintegrationapproved");
            tableMapping.ColumnMappings.Add("IsConsumerConsentApprovedForEmail", "IsConsumerConsentApprovedForEmail");
            tableMapping.ColumnMappings.Add("IsConsumerConsentApprovedForSMS", "IsConsumerConsentApprovedForSMS");
            tableMapping.ColumnMappings.Add("ConsumerConsentApprovedDateForEmail", "ConsumerConsentApprovedDateForEmail");
            tableMapping.ColumnMappings.Add("ConsumerConsentApprovedDateForSMS", "ConsumerConsentApprovedDateForSMS");
            tableMapping.ColumnMappings.Add("DonloadKeywords", "DonloadKeywords");
            tableMapping.ColumnMappings.Add("DownloadDescription", "DownloadDescription");
            tableMapping.ColumnMappings.Add("DownloadTitle", "DownloadTitle");
            tableMapping.ColumnMappings.Add("SpecialPromotionKeywords", "SpecialPromotionKeywords");
            tableMapping.ColumnMappings.Add("SpecialPromotionDescription", "SpecialPromotionDescription");
            tableMapping.ColumnMappings.Add("SpecialPromotionTitle", "SpecialPromotionTitle");
            tableMapping.ColumnMappings.Add("ScheduleAppointmentKeywords", "ScheduleAppointmentKeywords");
            tableMapping.ColumnMappings.Add("ScheduleAppointmentDescription", "ScheduleAppointmentDescription");
            tableMapping.ColumnMappings.Add("ScheduleAppointmentTitle", "ScheduleAppointmentTitle");
            tableMapping.ColumnMappings.Add("OnlineEstimateKeywords", "OnlineEstimateKeywords");
            tableMapping.ColumnMappings.Add("OnlineEstimateDescription", "OnlineEstimateDescription");
            tableMapping.ColumnMappings.Add("OnlineEstimateTitle", "OnlineEstimateTitle");
            tableMapping.ColumnMappings.Add("VehicleStatusKeywords", "VehicleStatusKeywords");
            tableMapping.ColumnMappings.Add("VehicleStatusDescription", "VehicleStatusDescription");
            tableMapping.ColumnMappings.Add("VehicleStatusTitle", "VehicleStatusTitle");
            tableMapping.ColumnMappings.Add("RentalCarCompanyPageUrl", "RentalCarCompanyPageUrl");
            tableMapping.ColumnMappings.Add("TowingCompanyPageUrl", "TowingCompanyPageUrl");
            tableMapping.ColumnMappings.Add("ShopNameBackColor", "ShopNameBackColor");
            tableMapping.ColumnMappings.Add("ShopNameFontColor", "ShopNameFontColor");
            tableMapping.ColumnMappings.Add("SendMessageKeywords", "SendMessageKeywords");
            tableMapping.ColumnMappings.Add("SendMessageDescription", "SendMessageDescription");
            tableMapping.ColumnMappings.Add("SendMessageTitle", "SendMessageTitle");
            tableMapping.ColumnMappings.Add("ShopBanerImage5", "ShopBanerImage5");
            tableMapping.ColumnMappings.Add("ShopBanerImage4", "ShopBanerImage4");
            tableMapping.ColumnMappings.Add("ShopBanerImage3", "ShopBanerImage3");
            tableMapping.ColumnMappings.Add("ShopBanerImage2", "ShopBanerImage2");
            tableMapping.ColumnMappings.Add("SetBannerBackgroundColor", "SetBannerBackgroundColor");
            tableMapping.ColumnMappings.Add("TwitterPageUrl", "TwitterPageUrl");
            tableMapping.ColumnMappings.Add("InstagramPageUrl", "InstagramPageUrl");
            tableMapping.ColumnMappings.Add("GooglePlusPageUrl", "GooglePlusPageUrl");
            tableMapping.ColumnMappings.Add("PinterestPageUrl", "PinterestPageUrl");
            tableMapping.ColumnMappings.Add("YouTubePageUrl", "YouTubePageUrl");
            tableMapping.ColumnMappings.Add("LinkedInPageUrl", "LinkedInPageUrl");
            tableMapping.ColumnMappings.Add("FacebookPageUrl", "FacebookPageUrl");
            tableMapping.ColumnMappings.Add("ShopBannerAlternateText", "ShopBannerAlternateText");
            tableMapping.ColumnMappings.Add("ShopBanner", "ShopBanner");
            tableMapping.ColumnMappings.Add("ShopLogoAlternateText", "ShopLogoAlternateText");
            tableMapping.ColumnMappings.Add("Keyword", "Keyword");
            tableMapping.ColumnMappings.Add("ShopDescription", "ShopDescription");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("History", "History");
            tableMapping.ColumnMappings.Add("Speciality", "Speciality");
            tableMapping.ColumnMappings.Add("content", "content");
            tableMapping.ColumnMappings.Add("AccessToken", "AccessToken");
            tableMapping.ColumnMappings.Add("PageID", "PageID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [BodyShop] WHERE (([shop_id] = @Original_shop_id) AND ((@IsNull_shop_" +
                "name = 1 AND [shop_name] IS NULL) OR ([shop_name] = @Original_shop_name)) AND ((" +
                "@IsNull_address1 = 1 AND [address1] IS NULL) OR ([address1] = @Original_address1" +
                ")) AND ((@IsNull_address2 = 1 AND [address2] IS NULL) OR ([address2] = @Original" +
                "_address2)) AND ((@IsNull_latitude = 1 AND [latitude] IS NULL) OR ([latitude] = " +
                "@Original_latitude)) AND ((@IsNull_longitude = 1 AND [longitude] IS NULL) OR ([l" +
                "ongitude] = @Original_longitude)) AND ((@IsNull_ratings = 1 AND [ratings] IS NUL" +
                "L) OR ([ratings] = @Original_ratings)) AND ((@IsNull_city = 1 AND [city] IS NULL" +
                ") OR ([city] = @Original_city)) AND ((@IsNull_state = 1 AND [state] IS NULL) OR " +
                "([state] = @Original_state)) AND ((@IsNull_image_attached = 1 AND [image_attache" +
                "d] IS NULL) OR ([image_attached] = @Original_image_attached)) AND ((@IsNull_zip " +
                "= 1 AND [zip] IS NULL) OR ([zip] = @Original_zip)) AND ((@IsNull_phone = 1 AND [" +
                "phone] IS NULL) OR ([phone] = @Original_phone)) AND ((@IsNull_fax = 1 AND [fax] " +
                "IS NULL) OR ([fax] = @Original_fax)) AND ((@IsNull_email = 1 AND [email] IS NULL" +
                ") OR ([email] = @Original_email)) AND ((@IsNull_website = 1 AND [website] IS NUL" +
                "L) OR ([website] = @Original_website)) AND ((@IsNull_business_license = 1 AND [b" +
                "usiness_license] IS NULL) OR ([business_license] = @Original_business_license)) " +
                "AND ((@IsNull_epa_license = 1 AND [epa_license] IS NULL) OR ([epa_license] = @Or" +
                "iginal_epa_license)) AND ((@IsNull_bar_license = 1 AND [bar_license] IS NULL) OR" +
                " ([bar_license] = @Original_bar_license)) AND ((@IsNull_network_name = 1 AND [ne" +
                "twork_name] IS NULL) OR ([network_name] = @Original_network_name)) AND ((@IsNull" +
                "_certification_vehicles = 1 AND [certification_vehicles] IS NULL) OR ([certifica" +
                "tion_vehicles] = @Original_certification_vehicles)) AND ((@IsNull_third_party_pr" +
                "oviders = 1 AND [third_party_providers] IS NULL) OR ([third_party_providers] = @" +
                "Original_third_party_providers)) AND ((@IsNull_positive_ratings = 1 AND [positiv" +
                "e_ratings] IS NULL) OR ([positive_ratings] = @Original_positive_ratings)) AND ((" +
                "@IsNull_negative_ratings = 1 AND [negative_ratings] IS NULL) OR ([negative_ratin" +
                "gs] = @Original_negative_ratings)) AND ((@IsNull_manager = 1 AND [manager] IS NU" +
                "LL) OR ([manager] = @Original_manager)) AND ((@IsNull_system_admin = 1 AND [syst" +
                "em_admin] IS NULL) OR ([system_admin] = @Original_system_admin)) AND ((@IsNull_p" +
                "ortal_admin_password = 1 AND [portal_admin_password] IS NULL) OR ([portal_admin_" +
                "password] = @Original_portal_admin_password)) AND ((@IsNull_company_tag_line = 1" +
                " AND [company_tag_line] IS NULL) OR ([company_tag_line] = @Original_company_tag_" +
                "line)) AND ((@IsNull_owner = 1 AND [owner] IS NULL) OR ([owner] = @Original_owne" +
                "r)) AND ((@IsNull_noPremierShop = 1 AND [noPremierShop] IS NULL) OR ([noPremierS" +
                "hop] = @Original_noPremierShop)) AND ((@IsNull_noHelpSelection = 1 AND [noHelpSe" +
                "lection] IS NULL) OR ([noHelpSelection] = @Original_noHelpSelection)) AND ((@IsN" +
                "ull_isPremierShop = 1 AND [isPremierShop] IS NULL) OR ([isPremierShop] = @Origin" +
                "al_isPremierShop)) AND ((@IsNull_image_path = 1 AND [image_path] IS NULL) OR ([i" +
                "mage_path] = @Original_image_path)) AND ((@IsNull_messageCount = 1 AND [messageC" +
                "ount] IS NULL) OR ([messageCount] = @Original_messageCount)) AND ((@IsNull_avail" +
                "ableMessages = 1 AND [availableMessages] IS NULL) OR ([availableMessages] = @Ori" +
                "ginal_availableMessages)) AND ((@IsNull_expirationDate = 1 AND [expirationDate] " +
                "IS NULL) OR ([expirationDate] = @Original_expirationDate)) AND ((@IsNull_startDa" +
                "te = 1 AND [startDate] IS NULL) OR ([startDate] = @Original_startDate)) AND ((@I" +
                "sNull_isShow = 1 AND [isShow] IS NULL) OR ([isShow] = @Original_isShow)) AND ((@" +
                "IsNull_commentsfrequency = 1 AND [commentsfrequency] IS NULL) OR ([commentsfrequ" +
                "ency] = @Original_commentsfrequency)) AND ((@IsNull_displaycommentonswebapp = 1 " +
                "AND [displaycommentonswebapp] IS NULL) OR ([displaycommentonswebapp] = @Original" +
                "_displaycommentonswebapp)) AND ((@IsNull_subscription_reminder_day = 1 AND [subs" +
                "cription_reminder_day] IS NULL) OR ([subscription_reminder_day] = @Original_subs" +
                "cription_reminder_day)) AND ((@IsNull_displaypromoonwebpage = 1 AND [displayprom" +
                "oonwebpage] IS NULL) OR ([displaypromoonwebpage] = @Original_displaypromoonwebpa" +
                "ge)) AND ((@IsNull_applyemailtemplate = 1 AND [applyemailtemplate] IS NULL) OR (" +
                "[applyemailtemplate] = @Original_applyemailtemplate)) AND ((@IsNull_isRcintegrat" +
                "ionapproved = 1 AND [isRcintegrationapproved] IS NULL) OR ([isRcintegrationappro" +
                "ved] = @Original_isRcintegrationapproved)) AND ((@IsNull_IsConsumerConsentApprov" +
                "edForEmail = 1 AND [IsConsumerConsentApprovedForEmail] IS NULL) OR ([IsConsumerC" +
                "onsentApprovedForEmail] = @Original_IsConsumerConsentApprovedForEmail)) AND ((@I" +
                "sNull_IsConsumerConsentApprovedForSMS = 1 AND [IsConsumerConsentApprovedForSMS] " +
                "IS NULL) OR ([IsConsumerConsentApprovedForSMS] = @Original_IsConsumerConsentAppr" +
                "ovedForSMS)) AND ((@IsNull_ConsumerConsentApprovedDateForEmail = 1 AND [Consumer" +
                "ConsentApprovedDateForEmail] IS NULL) OR ([ConsumerConsentApprovedDateForEmail] " +
                "= @Original_ConsumerConsentApprovedDateForEmail)) AND ((@IsNull_ConsumerConsentA" +
                "pprovedDateForSMS = 1 AND [ConsumerConsentApprovedDateForSMS] IS NULL) OR ([Cons" +
                "umerConsentApprovedDateForSMS] = @Original_ConsumerConsentApprovedDateForSMS)) A" +
                "ND ((@IsNull_DownloadDescription = 1 AND [DownloadDescription] IS NULL) OR ([Dow" +
                "nloadDescription] = @Original_DownloadDescription)) AND ((@IsNull_DownloadTitle " +
                "= 1 AND [DownloadTitle] IS NULL) OR ([DownloadTitle] = @Original_DownloadTitle))" +
                " AND ((@IsNull_SpecialPromotionDescription = 1 AND [SpecialPromotionDescription]" +
                " IS NULL) OR ([SpecialPromotionDescription] = @Original_SpecialPromotionDescript" +
                "ion)) AND ((@IsNull_SpecialPromotionTitle = 1 AND [SpecialPromotionTitle] IS NUL" +
                "L) OR ([SpecialPromotionTitle] = @Original_SpecialPromotionTitle)) AND ((@IsNull" +
                "_ScheduleAppointmentDescription = 1 AND [ScheduleAppointmentDescription] IS NULL" +
                ") OR ([ScheduleAppointmentDescription] = @Original_ScheduleAppointmentDescriptio" +
                "n)) AND ((@IsNull_ScheduleAppointmentTitle = 1 AND [ScheduleAppointmentTitle] IS" +
                " NULL) OR ([ScheduleAppointmentTitle] = @Original_ScheduleAppointmentTitle)) AND" +
                " ((@IsNull_OnlineEstimateDescription = 1 AND [OnlineEstimateDescription] IS NULL" +
                ") OR ([OnlineEstimateDescription] = @Original_OnlineEstimateDescription)) AND ((" +
                "@IsNull_OnlineEstimateTitle = 1 AND [OnlineEstimateTitle] IS NULL) OR ([OnlineEs" +
                "timateTitle] = @Original_OnlineEstimateTitle)) AND ((@IsNull_VehicleStatusDescri" +
                "ption = 1 AND [VehicleStatusDescription] IS NULL) OR ([VehicleStatusDescription]" +
                " = @Original_VehicleStatusDescription)) AND ((@IsNull_VehicleStatusTitle = 1 AND" +
                " [VehicleStatusTitle] IS NULL) OR ([VehicleStatusTitle] = @Original_VehicleStatu" +
                "sTitle)) AND ((@IsNull_RentalCarCompanyPageUrl = 1 AND [RentalCarCompanyPageUrl]" +
                " IS NULL) OR ([RentalCarCompanyPageUrl] = @Original_RentalCarCompanyPageUrl)) AN" +
                "D ((@IsNull_TowingCompanyPageUrl = 1 AND [TowingCompanyPageUrl] IS NULL) OR ([To" +
                "wingCompanyPageUrl] = @Original_TowingCompanyPageUrl)) AND ((@IsNull_ShopNameBac" +
                "kColor = 1 AND [ShopNameBackColor] IS NULL) OR ([ShopNameBackColor] = @Original_" +
                "ShopNameBackColor)) AND ((@IsNull_ShopNameFontColor = 1 AND [ShopNameFontColor] " +
                "IS NULL) OR ([ShopNameFontColor] = @Original_ShopNameFontColor)) AND ((@IsNull_S" +
                "endMessageDescription = 1 AND [SendMessageDescription] IS NULL) OR ([SendMessage" +
                "Description] = @Original_SendMessageDescription)) AND ((@IsNull_SendMessageTitle" +
                " = 1 AND [SendMessageTitle] IS NULL) OR ([SendMessageTitle] = @Original_SendMess" +
                "ageTitle)) AND ((@IsNull_ShopBanerImage5 = 1 AND [ShopBanerImage5] IS NULL) OR (" +
                "[ShopBanerImage5] = @Original_ShopBanerImage5)) AND ((@IsNull_ShopBanerImage4 = " +
                "1 AND [ShopBanerImage4] IS NULL) OR ([ShopBanerImage4] = @Original_ShopBanerImag" +
                "e4)) AND ((@IsNull_ShopBanerImage3 = 1 AND [ShopBanerImage3] IS NULL) OR ([ShopB" +
                "anerImage3] = @Original_ShopBanerImage3)) AND ((@IsNull_ShopBanerImage2 = 1 AND " +
                "[ShopBanerImage2] IS NULL) OR ([ShopBanerImage2] = @Original_ShopBanerImage2)) A" +
                "ND ((@IsNull_SetBannerBackgroundColor = 1 AND [SetBannerBackgroundColor] IS NULL" +
                ") OR ([SetBannerBackgroundColor] = @Original_SetBannerBackgroundColor)) AND ((@I" +
                "sNull_TwitterPageUrl = 1 AND [TwitterPageUrl] IS NULL) OR ([TwitterPageUrl] = @O" +
                "riginal_TwitterPageUrl)) AND ((@IsNull_InstagramPageUrl = 1 AND [InstagramPageUr" +
                "l] IS NULL) OR ([InstagramPageUrl] = @Original_InstagramPageUrl)) AND ((@IsNull_" +
                "GooglePlusPageUrl = 1 AND [GooglePlusPageUrl] IS NULL) OR ([GooglePlusPageUrl] =" +
                " @Original_GooglePlusPageUrl)) AND ((@IsNull_PinterestPageUrl = 1 AND [Pinterest" +
                "PageUrl] IS NULL) OR ([PinterestPageUrl] = @Original_PinterestPageUrl)) AND ((@I" +
                "sNull_YouTubePageUrl = 1 AND [YouTubePageUrl] IS NULL) OR ([YouTubePageUrl] = @O" +
                "riginal_YouTubePageUrl)) AND ((@IsNull_LinkedInPageUrl = 1 AND [LinkedInPageUrl]" +
                " IS NULL) OR ([LinkedInPageUrl] = @Original_LinkedInPageUrl)) AND ((@IsNull_Face" +
                "bookPageUrl = 1 AND [FacebookPageUrl] IS NULL) OR ([FacebookPageUrl] = @Original" +
                "_FacebookPageUrl)) AND ((@IsNull_ShopBannerAlternateText = 1 AND [ShopBannerAlte" +
                "rnateText] IS NULL) OR ([ShopBannerAlternateText] = @Original_ShopBannerAlternat" +
                "eText)) AND ((@IsNull_ShopBanner = 1 AND [ShopBanner] IS NULL) OR ([ShopBanner] " +
                "= @Original_ShopBanner)) AND ((@IsNull_ShopLogoAlternateText = 1 AND [ShopLogoAl" +
                "ternateText] IS NULL) OR ([ShopLogoAlternateText] = @Original_ShopLogoAlternateT" +
                "ext)) AND ((@IsNull_Title = 1 AND [Title] IS NULL) OR ([Title] = @Original_Title" +
                ")) AND ((@IsNull_PageID = 1 AND [PageID] IS NULL) OR ([PageID] = @Original_PageI" +
                "D)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_latitude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_longitude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ratings", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ratings", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image_attached", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image_attached", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_zip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fax", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fax", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_business_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "business_license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_business_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "business_license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_epa_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "epa_license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_epa_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "epa_license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bar_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bar_license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bar_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bar_license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_network_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "network_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_network_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "network_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_certification_vehicles", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "certification_vehicles", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_certification_vehicles", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "certification_vehicles", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_third_party_providers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "third_party_providers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_third_party_providers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "third_party_providers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_positive_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positive_ratings", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_positive_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positive_ratings", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_negative_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "negative_ratings", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_negative_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "negative_ratings", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_manager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_manager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_system_admin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "system_admin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_system_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "system_admin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_portal_admin_password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "portal_admin_password", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_portal_admin_password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "portal_admin_password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_tag_line", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_tag_line", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_tag_line", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_tag_line", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_owner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_owner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_noPremierShop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noPremierShop", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_noPremierShop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noPremierShop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_noHelpSelection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noHelpSelection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_noHelpSelection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noHelpSelection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isPremierShop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPremierShop", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isPremierShop", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPremierShop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image_path", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_path", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image_path", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_path", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_messageCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_messageCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_availableMessages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "availableMessages", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_availableMessages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "availableMessages", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_expirationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expirationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_expirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expirationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_startDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_startDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_commentsfrequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsfrequency", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_commentsfrequency", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsfrequency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_displaycommentonswebapp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaycommentonswebapp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_displaycommentonswebapp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaycommentonswebapp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_subscription_reminder_day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subscription_reminder_day", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subscription_reminder_day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subscription_reminder_day", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_displaypromoonwebpage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaypromoonwebpage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_displaypromoonwebpage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaypromoonwebpage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_applyemailtemplate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applyemailtemplate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_applyemailtemplate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applyemailtemplate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isRcintegrationapproved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRcintegrationapproved", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isRcintegrationapproved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRcintegrationapproved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsConsumerConsentApprovedForEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConsumerConsentApprovedForEmail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsConsumerConsentApprovedForSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForSMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConsumerConsentApprovedForSMS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForSMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConsumerConsentApprovedDateForEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConsumerConsentApprovedDateForEmail", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConsumerConsentApprovedDateForSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForSMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConsumerConsentApprovedDateForSMS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForSMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DownloadDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DownloadDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DownloadTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DownloadTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpecialPromotionDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialPromotionDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpecialPromotionTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialPromotionTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ScheduleAppointmentDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScheduleAppointmentDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ScheduleAppointmentTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScheduleAppointmentTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OnlineEstimateDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OnlineEstimateDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OnlineEstimateTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OnlineEstimateTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleStatusDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatusDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleStatusTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatusTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RentalCarCompanyPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalCarCompanyPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentalCarCompanyPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalCarCompanyPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TowingCompanyPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowingCompanyPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TowingCompanyPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowingCompanyPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopNameBackColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameBackColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopNameBackColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameBackColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopNameFontColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameFontColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopNameFontColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameFontColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendMessageDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendMessageDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendMessageTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendMessageTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanerImage5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanerImage5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanerImage4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanerImage4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanerImage3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanerImage3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanerImage2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanerImage2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetBannerBackgroundColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetBannerBackgroundColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetBannerBackgroundColor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetBannerBackgroundColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TwitterPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwitterPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwitterPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwitterPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InstagramPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstagramPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstagramPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstagramPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GooglePlusPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GooglePlusPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GooglePlusPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GooglePlusPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PinterestPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinterestPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PinterestPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinterestPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_YouTubePageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouTubePageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YouTubePageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouTubePageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LinkedInPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedInPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkedInPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedInPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacebookPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacebookPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacebookPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacebookPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBannerAlternateText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBannerAlternateText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBannerAlternateText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBannerAlternateText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopLogoAlternateText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopLogoAlternateText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopLogoAlternateText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopLogoAlternateText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PageID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [BodyShop] ([shop_name], [address1], [address2], [latitude], [longitu" +
                "de], [ratings], [city], [state], [image_attached], [zip], [phone], [fax], [email" +
                "], [website], [business_license], [epa_license], [bar_license], [network_name], " +
                "[certification_vehicles], [third_party_providers], [positive_ratings], [negative" +
                "_ratings], [manager], [system_admin], [portal_admin_password], [company_tag_line" +
                "], [owner], [noPremierShop], [noHelpSelection], [isPremierShop], [image_path], [" +
                "messageCount], [availableMessages], [expirationDate], [startDate], [isShow], [co" +
                "mmentsfrequency], [displaycommentonswebapp], [subscription_reminder_day], [displ" +
                "aypromoonwebpage], [applyemailtemplate], [isRcintegrationapproved], [IsConsumerC" +
                "onsentApprovedForEmail], [IsConsumerConsentApprovedForSMS], [ConsumerConsentAppr" +
                "ovedDateForEmail], [ConsumerConsentApprovedDateForSMS], [DonloadKeywords], [Down" +
                "loadDescription], [DownloadTitle], [SpecialPromotionKeywords], [SpecialPromotion" +
                "Description], [SpecialPromotionTitle], [ScheduleAppointmentKeywords], [ScheduleA" +
                "ppointmentDescription], [ScheduleAppointmentTitle], [OnlineEstimateKeywords], [O" +
                "nlineEstimateDescription], [OnlineEstimateTitle], [VehicleStatusKeywords], [Vehi" +
                "cleStatusDescription], [VehicleStatusTitle], [RentalCarCompanyPageUrl], [TowingC" +
                "ompanyPageUrl], [ShopNameBackColor], [ShopNameFontColor], [SendMessageKeywords]," +
                " [SendMessageDescription], [SendMessageTitle], [ShopBanerImage5], [ShopBanerImag" +
                "e4], [ShopBanerImage3], [ShopBanerImage2], [SetBannerBackgroundColor], [TwitterP" +
                "ageUrl], [InstagramPageUrl], [GooglePlusPageUrl], [PinterestPageUrl], [YouTubePa" +
                "geUrl], [LinkedInPageUrl], [FacebookPageUrl], [ShopBannerAlternateText], [ShopBa" +
                "nner], [ShopLogoAlternateText], [Keyword], [ShopDescription], [Title], [History]" +
                ", [Speciality], [content], [AccessToken], [PageID]) VALUES (@shop_name, @address" +
                "1, @address2, @latitude, @longitude, @ratings, @city, @state, @image_attached, @" +
                "zip, @phone, @fax, @email, @website, @business_license, @epa_license, @bar_licen" +
                "se, @network_name, @certification_vehicles, @third_party_providers, @positive_ra" +
                "tings, @negative_ratings, @manager, @system_admin, @portal_admin_password, @comp" +
                "any_tag_line, @owner, @noPremierShop, @noHelpSelection, @isPremierShop, @image_p" +
                "ath, @messageCount, @availableMessages, @expirationDate, @startDate, @isShow, @c" +
                "ommentsfrequency, @displaycommentonswebapp, @subscription_reminder_day, @display" +
                "promoonwebpage, @applyemailtemplate, @isRcintegrationapproved, @IsConsumerConsen" +
                "tApprovedForEmail, @IsConsumerConsentApprovedForSMS, @ConsumerConsentApprovedDat" +
                "eForEmail, @ConsumerConsentApprovedDateForSMS, @DonloadKeywords, @DownloadDescri" +
                "ption, @DownloadTitle, @SpecialPromotionKeywords, @SpecialPromotionDescription, " +
                "@SpecialPromotionTitle, @ScheduleAppointmentKeywords, @ScheduleAppointmentDescri" +
                "ption, @ScheduleAppointmentTitle, @OnlineEstimateKeywords, @OnlineEstimateDescri" +
                "ption, @OnlineEstimateTitle, @VehicleStatusKeywords, @VehicleStatusDescription, " +
                "@VehicleStatusTitle, @RentalCarCompanyPageUrl, @TowingCompanyPageUrl, @ShopNameB" +
                "ackColor, @ShopNameFontColor, @SendMessageKeywords, @SendMessageDescription, @Se" +
                "ndMessageTitle, @ShopBanerImage5, @ShopBanerImage4, @ShopBanerImage3, @ShopBaner" +
                "Image2, @SetBannerBackgroundColor, @TwitterPageUrl, @InstagramPageUrl, @GooglePl" +
                "usPageUrl, @PinterestPageUrl, @YouTubePageUrl, @LinkedInPageUrl, @FacebookPageUr" +
                "l, @ShopBannerAlternateText, @ShopBanner, @ShopLogoAlternateText, @Keyword, @Sho" +
                "pDescription, @Title, @History, @Speciality, @content, @AccessToken, @PageID);\r\n" +
                "SELECT shop_id, shop_name, address1, address2, latitude, longitude, ratings, cit" +
                "y, state, image_attached, zip, phone, fax, email, website, business_license, epa" +
                "_license, bar_license, network_name, certification_vehicles, third_party_provide" +
                "rs, positive_ratings, negative_ratings, manager, system_admin, portal_admin_pass" +
                "word, company_tag_line, owner, noPremierShop, noHelpSelection, isPremierShop, im" +
                "age_path, messageCount, availableMessages, expirationDate, startDate, isShow, co" +
                "mmentsfrequency, displaycommentonswebapp, subscription_reminder_day, displayprom" +
                "oonwebpage, applyemailtemplate, isRcintegrationapproved, IsConsumerConsentApprov" +
                "edForEmail, IsConsumerConsentApprovedForSMS, ConsumerConsentApprovedDateForEmail" +
                ", ConsumerConsentApprovedDateForSMS, DonloadKeywords, DownloadDescription, Downl" +
                "oadTitle, SpecialPromotionKeywords, SpecialPromotionDescription, SpecialPromotio" +
                "nTitle, ScheduleAppointmentKeywords, ScheduleAppointmentDescription, ScheduleApp" +
                "ointmentTitle, OnlineEstimateKeywords, OnlineEstimateDescription, OnlineEstimate" +
                "Title, VehicleStatusKeywords, VehicleStatusDescription, VehicleStatusTitle, Rent" +
                "alCarCompanyPageUrl, TowingCompanyPageUrl, ShopNameBackColor, ShopNameFontColor," +
                " SendMessageKeywords, SendMessageDescription, SendMessageTitle, ShopBanerImage5," +
                " ShopBanerImage4, ShopBanerImage3, ShopBanerImage2, SetBannerBackgroundColor, Tw" +
                "itterPageUrl, InstagramPageUrl, GooglePlusPageUrl, PinterestPageUrl, YouTubePage" +
                "Url, LinkedInPageUrl, FacebookPageUrl, ShopBannerAlternateText, ShopBanner, Shop" +
                "LogoAlternateText, Keyword, ShopDescription, Title, History, Speciality, [conten" +
                "t], AccessToken, PageID FROM BodyShop WHERE (shop_id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ratings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image_attached", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@business_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "business_license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@epa_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "epa_license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bar_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bar_license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@network_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "network_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@certification_vehicles", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "certification_vehicles", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@third_party_providers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "third_party_providers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@positive_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positive_ratings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@negative_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "negative_ratings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@manager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@system_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "system_admin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@portal_admin_password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "portal_admin_password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_tag_line", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_tag_line", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@owner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noPremierShop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noPremierShop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noHelpSelection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noHelpSelection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPremierShop", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPremierShop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image_path", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_path", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@messageCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@availableMessages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "availableMessages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentsfrequency", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsfrequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@displaycommentonswebapp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaycommentonswebapp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subscription_reminder_day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subscription_reminder_day", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@displaypromoonwebpage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaypromoonwebpage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@applyemailtemplate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applyemailtemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isRcintegrationapproved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRcintegrationapproved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConsumerConsentApprovedForEmail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConsumerConsentApprovedForSMS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForSMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumerConsentApprovedDateForEmail", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumerConsentApprovedDateForSMS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForSMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DonloadKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DonloadKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DownloadDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DownloadTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialPromotionKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialPromotionDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialPromotionTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScheduleAppointmentKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScheduleAppointmentDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScheduleAppointmentTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlineEstimateKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlineEstimateDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlineEstimateTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatusKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatusDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatusTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalCarCompanyPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalCarCompanyPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TowingCompanyPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowingCompanyPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopNameBackColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameBackColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopNameFontColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameFontColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendMessageKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendMessageDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendMessageTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanerImage5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanerImage4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanerImage3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanerImage2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetBannerBackgroundColor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetBannerBackgroundColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwitterPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwitterPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstagramPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstagramPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GooglePlusPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GooglePlusPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PinterestPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinterestPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YouTubePageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouTubePageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkedInPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedInPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacebookPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacebookPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBannerAlternateText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBannerAlternateText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopLogoAlternateText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopLogoAlternateText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Keyword", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Keyword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@History", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "History", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speciality", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@content", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "content", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccessToken", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccessToken", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PageID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [BodyShop] SET [shop_name] = @shop_name, [address1] = @address1, [address2" +
                "] = @address2, [latitude] = @latitude, [longitude] = @longitude, [ratings] = @ra" +
                "tings, [city] = @city, [state] = @state, [image_attached] = @image_attached, [zi" +
                "p] = @zip, [phone] = @phone, [fax] = @fax, [email] = @email, [website] = @websit" +
                "e, [business_license] = @business_license, [epa_license] = @epa_license, [bar_li" +
                "cense] = @bar_license, [network_name] = @network_name, [certification_vehicles] " +
                "= @certification_vehicles, [third_party_providers] = @third_party_providers, [po" +
                "sitive_ratings] = @positive_ratings, [negative_ratings] = @negative_ratings, [ma" +
                "nager] = @manager, [system_admin] = @system_admin, [portal_admin_password] = @po" +
                "rtal_admin_password, [company_tag_line] = @company_tag_line, [owner] = @owner, [" +
                "noPremierShop] = @noPremierShop, [noHelpSelection] = @noHelpSelection, [isPremie" +
                "rShop] = @isPremierShop, [image_path] = @image_path, [messageCount] = @messageCo" +
                "unt, [availableMessages] = @availableMessages, [expirationDate] = @expirationDat" +
                "e, [startDate] = @startDate, [isShow] = @isShow, [commentsfrequency] = @comments" +
                "frequency, [displaycommentonswebapp] = @displaycommentonswebapp, [subscription_r" +
                "eminder_day] = @subscription_reminder_day, [displaypromoonwebpage] = @displaypro" +
                "moonwebpage, [applyemailtemplate] = @applyemailtemplate, [isRcintegrationapprove" +
                "d] = @isRcintegrationapproved, [IsConsumerConsentApprovedForEmail] = @IsConsumer" +
                "ConsentApprovedForEmail, [IsConsumerConsentApprovedForSMS] = @IsConsumerConsentA" +
                "pprovedForSMS, [ConsumerConsentApprovedDateForEmail] = @ConsumerConsentApprovedD" +
                "ateForEmail, [ConsumerConsentApprovedDateForSMS] = @ConsumerConsentApprovedDateF" +
                "orSMS, [DonloadKeywords] = @DonloadKeywords, [DownloadDescription] = @DownloadDe" +
                "scription, [DownloadTitle] = @DownloadTitle, [SpecialPromotionKeywords] = @Speci" +
                "alPromotionKeywords, [SpecialPromotionDescription] = @SpecialPromotionDescriptio" +
                "n, [SpecialPromotionTitle] = @SpecialPromotionTitle, [ScheduleAppointmentKeyword" +
                "s] = @ScheduleAppointmentKeywords, [ScheduleAppointmentDescription] = @ScheduleA" +
                "ppointmentDescription, [ScheduleAppointmentTitle] = @ScheduleAppointmentTitle, [" +
                "OnlineEstimateKeywords] = @OnlineEstimateKeywords, [OnlineEstimateDescription] =" +
                " @OnlineEstimateDescription, [OnlineEstimateTitle] = @OnlineEstimateTitle, [Vehi" +
                "cleStatusKeywords] = @VehicleStatusKeywords, [VehicleStatusDescription] = @Vehic" +
                "leStatusDescription, [VehicleStatusTitle] = @VehicleStatusTitle, [RentalCarCompa" +
                "nyPageUrl] = @RentalCarCompanyPageUrl, [TowingCompanyPageUrl] = @TowingCompanyPa" +
                "geUrl, [ShopNameBackColor] = @ShopNameBackColor, [ShopNameFontColor] = @ShopName" +
                "FontColor, [SendMessageKeywords] = @SendMessageKeywords, [SendMessageDescription" +
                "] = @SendMessageDescription, [SendMessageTitle] = @SendMessageTitle, [ShopBanerI" +
                "mage5] = @ShopBanerImage5, [ShopBanerImage4] = @ShopBanerImage4, [ShopBanerImage" +
                "3] = @ShopBanerImage3, [ShopBanerImage2] = @ShopBanerImage2, [SetBannerBackgroun" +
                "dColor] = @SetBannerBackgroundColor, [TwitterPageUrl] = @TwitterPageUrl, [Instag" +
                "ramPageUrl] = @InstagramPageUrl, [GooglePlusPageUrl] = @GooglePlusPageUrl, [Pint" +
                "erestPageUrl] = @PinterestPageUrl, [YouTubePageUrl] = @YouTubePageUrl, [LinkedIn" +
                "PageUrl] = @LinkedInPageUrl, [FacebookPageUrl] = @FacebookPageUrl, [ShopBannerAl" +
                "ternateText] = @ShopBannerAlternateText, [ShopBanner] = @ShopBanner, [ShopLogoAl" +
                "ternateText] = @ShopLogoAlternateText, [Keyword] = @Keyword, [ShopDescription] =" +
                " @ShopDescription, [Title] = @Title, [History] = @History, [Speciality] = @Speci" +
                "ality, [content] = @content, [AccessToken] = @AccessToken, [PageID] = @PageID WH" +
                "ERE (([shop_id] = @Original_shop_id) AND ((@IsNull_shop_name = 1 AND [shop_name]" +
                " IS NULL) OR ([shop_name] = @Original_shop_name)) AND ((@IsNull_address1 = 1 AND" +
                " [address1] IS NULL) OR ([address1] = @Original_address1)) AND ((@IsNull_address" +
                "2 = 1 AND [address2] IS NULL) OR ([address2] = @Original_address2)) AND ((@IsNul" +
                "l_latitude = 1 AND [latitude] IS NULL) OR ([latitude] = @Original_latitude)) AND" +
                " ((@IsNull_longitude = 1 AND [longitude] IS NULL) OR ([longitude] = @Original_lo" +
                "ngitude)) AND ((@IsNull_ratings = 1 AND [ratings] IS NULL) OR ([ratings] = @Orig" +
                "inal_ratings)) AND ((@IsNull_city = 1 AND [city] IS NULL) OR ([city] = @Original" +
                "_city)) AND ((@IsNull_state = 1 AND [state] IS NULL) OR ([state] = @Original_sta" +
                "te)) AND ((@IsNull_image_attached = 1 AND [image_attached] IS NULL) OR ([image_a" +
                "ttached] = @Original_image_attached)) AND ((@IsNull_zip = 1 AND [zip] IS NULL) O" +
                "R ([zip] = @Original_zip)) AND ((@IsNull_phone = 1 AND [phone] IS NULL) OR ([pho" +
                "ne] = @Original_phone)) AND ((@IsNull_fax = 1 AND [fax] IS NULL) OR ([fax] = @Or" +
                "iginal_fax)) AND ((@IsNull_email = 1 AND [email] IS NULL) OR ([email] = @Origina" +
                "l_email)) AND ((@IsNull_website = 1 AND [website] IS NULL) OR ([website] = @Orig" +
                "inal_website)) AND ((@IsNull_business_license = 1 AND [business_license] IS NULL" +
                ") OR ([business_license] = @Original_business_license)) AND ((@IsNull_epa_licens" +
                "e = 1 AND [epa_license] IS NULL) OR ([epa_license] = @Original_epa_license)) AND" +
                " ((@IsNull_bar_license = 1 AND [bar_license] IS NULL) OR ([bar_license] = @Origi" +
                "nal_bar_license)) AND ((@IsNull_network_name = 1 AND [network_name] IS NULL) OR " +
                "([network_name] = @Original_network_name)) AND ((@IsNull_certification_vehicles " +
                "= 1 AND [certification_vehicles] IS NULL) OR ([certification_vehicles] = @Origin" +
                "al_certification_vehicles)) AND ((@IsNull_third_party_providers = 1 AND [third_p" +
                "arty_providers] IS NULL) OR ([third_party_providers] = @Original_third_party_pro" +
                "viders)) AND ((@IsNull_positive_ratings = 1 AND [positive_ratings] IS NULL) OR (" +
                "[positive_ratings] = @Original_positive_ratings)) AND ((@IsNull_negative_ratings" +
                " = 1 AND [negative_ratings] IS NULL) OR ([negative_ratings] = @Original_negative" +
                "_ratings)) AND ((@IsNull_manager = 1 AND [manager] IS NULL) OR ([manager] = @Ori" +
                "ginal_manager)) AND ((@IsNull_system_admin = 1 AND [system_admin] IS NULL) OR ([" +
                "system_admin] = @Original_system_admin)) AND ((@IsNull_portal_admin_password = 1" +
                " AND [portal_admin_password] IS NULL) OR ([portal_admin_password] = @Original_po" +
                "rtal_admin_password)) AND ((@IsNull_company_tag_line = 1 AND [company_tag_line] " +
                "IS NULL) OR ([company_tag_line] = @Original_company_tag_line)) AND ((@IsNull_own" +
                "er = 1 AND [owner] IS NULL) OR ([owner] = @Original_owner)) AND ((@IsNull_noPrem" +
                "ierShop = 1 AND [noPremierShop] IS NULL) OR ([noPremierShop] = @Original_noPremi" +
                "erShop)) AND ((@IsNull_noHelpSelection = 1 AND [noHelpSelection] IS NULL) OR ([n" +
                "oHelpSelection] = @Original_noHelpSelection)) AND ((@IsNull_isPremierShop = 1 AN" +
                "D [isPremierShop] IS NULL) OR ([isPremierShop] = @Original_isPremierShop)) AND (" +
                "(@IsNull_image_path = 1 AND [image_path] IS NULL) OR ([image_path] = @Original_i" +
                "mage_path)) AND ((@IsNull_messageCount = 1 AND [messageCount] IS NULL) OR ([mess" +
                "ageCount] = @Original_messageCount)) AND ((@IsNull_availableMessages = 1 AND [av" +
                "ailableMessages] IS NULL) OR ([availableMessages] = @Original_availableMessages)" +
                ") AND ((@IsNull_expirationDate = 1 AND [expirationDate] IS NULL) OR ([expiration" +
                "Date] = @Original_expirationDate)) AND ((@IsNull_startDate = 1 AND [startDate] I" +
                "S NULL) OR ([startDate] = @Original_startDate)) AND ((@IsNull_isShow = 1 AND [is" +
                "Show] IS NULL) OR ([isShow] = @Original_isShow)) AND ((@IsNull_commentsfrequency" +
                " = 1 AND [commentsfrequency] IS NULL) OR ([commentsfrequency] = @Original_commen" +
                "tsfrequency)) AND ((@IsNull_displaycommentonswebapp = 1 AND [displaycommentonswe" +
                "bapp] IS NULL) OR ([displaycommentonswebapp] = @Original_displaycommentonswebapp" +
                ")) AND ((@IsNull_subscription_reminder_day = 1 AND [subscription_reminder_day] I" +
                "S NULL) OR ([subscription_reminder_day] = @Original_subscription_reminder_day)) " +
                "AND ((@IsNull_displaypromoonwebpage = 1 AND [displaypromoonwebpage] IS NULL) OR " +
                "([displaypromoonwebpage] = @Original_displaypromoonwebpage)) AND ((@IsNull_apply" +
                "emailtemplate = 1 AND [applyemailtemplate] IS NULL) OR ([applyemailtemplate] = @" +
                "Original_applyemailtemplate)) AND ((@IsNull_isRcintegrationapproved = 1 AND [isR" +
                "cintegrationapproved] IS NULL) OR ([isRcintegrationapproved] = @Original_isRcint" +
                "egrationapproved)) AND ((@IsNull_IsConsumerConsentApprovedForEmail = 1 AND [IsCo" +
                "nsumerConsentApprovedForEmail] IS NULL) OR ([IsConsumerConsentApprovedForEmail] " +
                "= @Original_IsConsumerConsentApprovedForEmail)) AND ((@IsNull_IsConsumerConsentA" +
                "pprovedForSMS = 1 AND [IsConsumerConsentApprovedForSMS] IS NULL) OR ([IsConsumer" +
                "ConsentApprovedForSMS] = @Original_IsConsumerConsentApprovedForSMS)) AND ((@IsNu" +
                "ll_ConsumerConsentApprovedDateForEmail = 1 AND [ConsumerConsentApprovedDateForEm" +
                "ail] IS NULL) OR ([ConsumerConsentApprovedDateForEmail] = @Original_ConsumerCons" +
                "entApprovedDateForEmail)) AND ((@IsNull_ConsumerConsentApprovedDateForSMS = 1 AN" +
                "D [ConsumerConsentApprovedDateForSMS] IS NULL) OR ([ConsumerConsentApprovedDateF" +
                "orSMS] = @Original_ConsumerConsentApprovedDateForSMS)) AND ((@IsNull_DownloadDes" +
                "cription = 1 AND [DownloadDescription] IS NULL) OR ([DownloadDescription] = @Ori" +
                "ginal_DownloadDescription)) AND ((@IsNull_DownloadTitle = 1 AND [DownloadTitle] " +
                "IS NULL) OR ([DownloadTitle] = @Original_DownloadTitle)) AND ((@IsNull_SpecialPr" +
                "omotionDescription = 1 AND [SpecialPromotionDescription] IS NULL) OR ([SpecialPr" +
                "omotionDescription] = @Original_SpecialPromotionDescription)) AND ((@IsNull_Spec" +
                "ialPromotionTitle = 1 AND [SpecialPromotionTitle] IS NULL) OR ([SpecialPromotion" +
                "Title] = @Original_SpecialPromotionTitle)) AND ((@IsNull_ScheduleAppointmentDesc" +
                "ription = 1 AND [ScheduleAppointmentDescription] IS NULL) OR ([ScheduleAppointme" +
                "ntDescription] = @Original_ScheduleAppointmentDescription)) AND ((@IsNull_Schedu" +
                "leAppointmentTitle = 1 AND [ScheduleAppointmentTitle] IS NULL) OR ([ScheduleAppo" +
                "intmentTitle] = @Original_ScheduleAppointmentTitle)) AND ((@IsNull_OnlineEstimat" +
                "eDescription = 1 AND [OnlineEstimateDescription] IS NULL) OR ([OnlineEstimateDes" +
                "cription] = @Original_OnlineEstimateDescription)) AND ((@IsNull_OnlineEstimateTi" +
                "tle = 1 AND [OnlineEstimateTitle] IS NULL) OR ([OnlineEstimateTitle] = @Original" +
                "_OnlineEstimateTitle)) AND ((@IsNull_VehicleStatusDescription = 1 AND [VehicleSt" +
                "atusDescription] IS NULL) OR ([VehicleStatusDescription] = @Original_VehicleStat" +
                "usDescription)) AND ((@IsNull_VehicleStatusTitle = 1 AND [VehicleStatusTitle] IS" +
                " NULL) OR ([VehicleStatusTitle] = @Original_VehicleStatusTitle)) AND ((@IsNull_R" +
                "entalCarCompanyPageUrl = 1 AND [RentalCarCompanyPageUrl] IS NULL) OR ([RentalCar" +
                "CompanyPageUrl] = @Original_RentalCarCompanyPageUrl)) AND ((@IsNull_TowingCompan" +
                "yPageUrl = 1 AND [TowingCompanyPageUrl] IS NULL) OR ([TowingCompanyPageUrl] = @O" +
                "riginal_TowingCompanyPageUrl)) AND ((@IsNull_ShopNameBackColor = 1 AND [ShopName" +
                "BackColor] IS NULL) OR ([ShopNameBackColor] = @Original_ShopNameBackColor)) AND " +
                "((@IsNull_ShopNameFontColor = 1 AND [ShopNameFontColor] IS NULL) OR ([ShopNameFo" +
                "ntColor] = @Original_ShopNameFontColor)) AND ((@IsNull_SendMessageDescription = " +
                "1 AND [SendMessageDescription] IS NULL) OR ([SendMessageDescription] = @Original" +
                "_SendMessageDescription)) AND ((@IsNull_SendMessageTitle = 1 AND [SendMessageTit" +
                "le] IS NULL) OR ([SendMessageTitle] = @Original_SendMessageTitle)) AND ((@IsNull" +
                "_ShopBanerImage5 = 1 AND [ShopBanerImage5] IS NULL) OR ([ShopBanerImage5] = @Ori" +
                "ginal_ShopBanerImage5)) AND ((@IsNull_ShopBanerImage4 = 1 AND [ShopBanerImage4] " +
                "IS NULL) OR ([ShopBanerImage4] = @Original_ShopBanerImage4)) AND ((@IsNull_ShopB" +
                "anerImage3 = 1 AND [ShopBanerImage3] IS NULL) OR ([ShopBanerImage3] = @Original_" +
                "ShopBanerImage3)) AND ((@IsNull_ShopBanerImage2 = 1 AND [ShopBanerImage2] IS NUL" +
                "L) OR ([ShopBanerImage2] = @Original_ShopBanerImage2)) AND ((@IsNull_SetBannerBa" +
                "ckgroundColor = 1 AND [SetBannerBackgroundColor] IS NULL) OR ([SetBannerBackgrou" +
                "ndColor] = @Original_SetBannerBackgroundColor)) AND ((@IsNull_TwitterPageUrl = 1" +
                " AND [TwitterPageUrl] IS NULL) OR ([TwitterPageUrl] = @Original_TwitterPageUrl))" +
                " AND ((@IsNull_InstagramPageUrl = 1 AND [InstagramPageUrl] IS NULL) OR ([Instagr" +
                "amPageUrl] = @Original_InstagramPageUrl)) AND ((@IsNull_GooglePlusPageUrl = 1 AN" +
                "D [GooglePlusPageUrl] IS NULL) OR ([GooglePlusPageUrl] = @Original_GooglePlusPag" +
                "eUrl)) AND ((@IsNull_PinterestPageUrl = 1 AND [PinterestPageUrl] IS NULL) OR ([P" +
                "interestPageUrl] = @Original_PinterestPageUrl)) AND ((@IsNull_YouTubePageUrl = 1" +
                " AND [YouTubePageUrl] IS NULL) OR ([YouTubePageUrl] = @Original_YouTubePageUrl))" +
                " AND ((@IsNull_LinkedInPageUrl = 1 AND [LinkedInPageUrl] IS NULL) OR ([LinkedInP" +
                "ageUrl] = @Original_LinkedInPageUrl)) AND ((@IsNull_FacebookPageUrl = 1 AND [Fac" +
                "ebookPageUrl] IS NULL) OR ([FacebookPageUrl] = @Original_FacebookPageUrl)) AND (" +
                "(@IsNull_ShopBannerAlternateText = 1 AND [ShopBannerAlternateText] IS NULL) OR (" +
                "[ShopBannerAlternateText] = @Original_ShopBannerAlternateText)) AND ((@IsNull_Sh" +
                "opBanner = 1 AND [ShopBanner] IS NULL) OR ([ShopBanner] = @Original_ShopBanner))" +
                " AND ((@IsNull_ShopLogoAlternateText = 1 AND [ShopLogoAlternateText] IS NULL) OR" +
                " ([ShopLogoAlternateText] = @Original_ShopLogoAlternateText)) AND ((@IsNull_Titl" +
                "e = 1 AND [Title] IS NULL) OR ([Title] = @Original_Title)) AND ((@IsNull_PageID " +
                "= 1 AND [PageID] IS NULL) OR ([PageID] = @Original_PageID)));\r\nSELECT shop_id, s" +
                "hop_name, address1, address2, latitude, longitude, ratings, city, state, image_a" +
                "ttached, zip, phone, fax, email, website, business_license, epa_license, bar_lic" +
                "ense, network_name, certification_vehicles, third_party_providers, positive_rati" +
                "ngs, negative_ratings, manager, system_admin, portal_admin_password, company_tag" +
                "_line, owner, noPremierShop, noHelpSelection, isPremierShop, image_path, message" +
                "Count, availableMessages, expirationDate, startDate, isShow, commentsfrequency, " +
                "displaycommentonswebapp, subscription_reminder_day, displaypromoonwebpage, apply" +
                "emailtemplate, isRcintegrationapproved, IsConsumerConsentApprovedForEmail, IsCon" +
                "sumerConsentApprovedForSMS, ConsumerConsentApprovedDateForEmail, ConsumerConsent" +
                "ApprovedDateForSMS, DonloadKeywords, DownloadDescription, DownloadTitle, Special" +
                "PromotionKeywords, SpecialPromotionDescription, SpecialPromotionTitle, ScheduleA" +
                "ppointmentKeywords, ScheduleAppointmentDescription, ScheduleAppointmentTitle, On" +
                "lineEstimateKeywords, OnlineEstimateDescription, OnlineEstimateTitle, VehicleSta" +
                "tusKeywords, VehicleStatusDescription, VehicleStatusTitle, RentalCarCompanyPageU" +
                "rl, TowingCompanyPageUrl, ShopNameBackColor, ShopNameFontColor, SendMessageKeywo" +
                "rds, SendMessageDescription, SendMessageTitle, ShopBanerImage5, ShopBanerImage4," +
                " ShopBanerImage3, ShopBanerImage2, SetBannerBackgroundColor, TwitterPageUrl, Ins" +
                "tagramPageUrl, GooglePlusPageUrl, PinterestPageUrl, YouTubePageUrl, LinkedInPage" +
                "Url, FacebookPageUrl, ShopBannerAlternateText, ShopBanner, ShopLogoAlternateText" +
                ", Keyword, ShopDescription, Title, History, Speciality, [content], AccessToken, " +
                "PageID FROM BodyShop WHERE (shop_id = @shop_id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ratings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image_attached", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "website", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@business_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "business_license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@epa_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "epa_license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@bar_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bar_license", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@network_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "network_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@certification_vehicles", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "certification_vehicles", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@third_party_providers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "third_party_providers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@positive_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positive_ratings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@negative_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "negative_ratings", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@manager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@system_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "system_admin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@portal_admin_password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "portal_admin_password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@company_tag_line", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_tag_line", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@owner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noPremierShop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noPremierShop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@noHelpSelection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noHelpSelection", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isPremierShop", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPremierShop", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@image_path", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_path", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@messageCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageCount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@availableMessages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "availableMessages", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@expirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expirationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isShow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentsfrequency", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsfrequency", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@displaycommentonswebapp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaycommentonswebapp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@subscription_reminder_day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subscription_reminder_day", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@displaypromoonwebpage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaypromoonwebpage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@applyemailtemplate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applyemailtemplate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isRcintegrationapproved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRcintegrationapproved", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConsumerConsentApprovedForEmail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConsumerConsentApprovedForSMS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForSMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumerConsentApprovedDateForEmail", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForEmail", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ConsumerConsentApprovedDateForSMS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForSMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DonloadKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DonloadKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DownloadDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DownloadTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialPromotionKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialPromotionDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SpecialPromotionTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScheduleAppointmentKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScheduleAppointmentDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ScheduleAppointmentTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlineEstimateKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlineEstimateDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OnlineEstimateTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatusKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatusDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatusTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalCarCompanyPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalCarCompanyPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TowingCompanyPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowingCompanyPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopNameBackColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameBackColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopNameFontColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameFontColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendMessageKeywords", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageKeywords", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendMessageDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendMessageTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageTitle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanerImage5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanerImage4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanerImage3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanerImage2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SetBannerBackgroundColor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetBannerBackgroundColor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TwitterPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwitterPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InstagramPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstagramPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GooglePlusPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GooglePlusPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PinterestPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinterestPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YouTubePageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouTubePageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LinkedInPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedInPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FacebookPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacebookPageUrl", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBannerAlternateText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBannerAlternateText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopBanner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopLogoAlternateText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopLogoAlternateText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Keyword", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Keyword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopDescription", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopDescription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@History", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "History", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Speciality", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Speciality", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@content", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "content", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AccessToken", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AccessToken", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PageID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_address2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_address2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "address2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_latitude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_latitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "latitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_longitude", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_longitude", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "longitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ratings", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ratings", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_city", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_city", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "city", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_state", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_state", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "state", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image_attached", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image_attached", global::System.Data.SqlDbType.VarBinary, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_attached", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_zip", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_zip", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "zip", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_phone", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_phone", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "phone", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fax", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fax", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fax", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_website", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "website", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_website", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "website", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_business_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "business_license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_business_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "business_license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_epa_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "epa_license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_epa_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "epa_license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_bar_license", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bar_license", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_bar_license", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "bar_license", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_network_name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "network_name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_network_name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "network_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_certification_vehicles", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "certification_vehicles", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_certification_vehicles", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "certification_vehicles", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_third_party_providers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "third_party_providers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_third_party_providers", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "third_party_providers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_positive_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positive_ratings", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_positive_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "positive_ratings", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_negative_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "negative_ratings", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_negative_ratings", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "negative_ratings", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_manager", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_manager", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "manager", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_system_admin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "system_admin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_system_admin", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "system_admin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_portal_admin_password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "portal_admin_password", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_portal_admin_password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "portal_admin_password", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_company_tag_line", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_tag_line", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_company_tag_line", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "company_tag_line", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_owner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_owner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "owner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_noPremierShop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noPremierShop", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_noPremierShop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noPremierShop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_noHelpSelection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noHelpSelection", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_noHelpSelection", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "noHelpSelection", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isPremierShop", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPremierShop", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isPremierShop", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isPremierShop", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_image_path", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_path", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_image_path", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "image_path", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_messageCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageCount", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_messageCount", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "messageCount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_availableMessages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "availableMessages", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_availableMessages", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "availableMessages", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_expirationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expirationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_expirationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "expirationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_startDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_startDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "startDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isShow", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isShow", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isShow", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_commentsfrequency", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsfrequency", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_commentsfrequency", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentsfrequency", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_displaycommentonswebapp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaycommentonswebapp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_displaycommentonswebapp", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaycommentonswebapp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_subscription_reminder_day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subscription_reminder_day", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_subscription_reminder_day", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "subscription_reminder_day", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_displaypromoonwebpage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaypromoonwebpage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_displaypromoonwebpage", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "displaypromoonwebpage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_applyemailtemplate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applyemailtemplate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_applyemailtemplate", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "applyemailtemplate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isRcintegrationapproved", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRcintegrationapproved", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isRcintegrationapproved", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRcintegrationapproved", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsConsumerConsentApprovedForEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConsumerConsentApprovedForEmail", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsConsumerConsentApprovedForSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForSMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConsumerConsentApprovedForSMS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConsumerConsentApprovedForSMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConsumerConsentApprovedDateForEmail", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForEmail", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConsumerConsentApprovedDateForEmail", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForEmail", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ConsumerConsentApprovedDateForSMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForSMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ConsumerConsentApprovedDateForSMS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ConsumerConsentApprovedDateForSMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DownloadDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DownloadDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DownloadTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DownloadTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DownloadTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpecialPromotionDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialPromotionDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SpecialPromotionTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SpecialPromotionTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SpecialPromotionTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ScheduleAppointmentDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScheduleAppointmentDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ScheduleAppointmentTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ScheduleAppointmentTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ScheduleAppointmentTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OnlineEstimateDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OnlineEstimateDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OnlineEstimateTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OnlineEstimateTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OnlineEstimateTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleStatusDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatusDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_VehicleStatusTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatusTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RentalCarCompanyPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalCarCompanyPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentalCarCompanyPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RentalCarCompanyPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TowingCompanyPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowingCompanyPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TowingCompanyPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TowingCompanyPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopNameBackColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameBackColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopNameBackColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameBackColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopNameFontColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameFontColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopNameFontColor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNameFontColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendMessageDescription", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageDescription", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendMessageDescription", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageDescription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendMessageTitle", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageTitle", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendMessageTitle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMessageTitle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanerImage5", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage5", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanerImage5", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanerImage4", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage4", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanerImage4", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanerImage3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage3", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanerImage3", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanerImage2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanerImage2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanerImage2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SetBannerBackgroundColor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetBannerBackgroundColor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SetBannerBackgroundColor", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SetBannerBackgroundColor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TwitterPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwitterPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TwitterPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TwitterPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InstagramPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstagramPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InstagramPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InstagramPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_GooglePlusPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GooglePlusPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GooglePlusPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GooglePlusPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PinterestPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinterestPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PinterestPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PinterestPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_YouTubePageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouTubePageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YouTubePageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YouTubePageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LinkedInPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedInPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LinkedInPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LinkedInPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FacebookPageUrl", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacebookPageUrl", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FacebookPageUrl", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FacebookPageUrl", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBannerAlternateText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBannerAlternateText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBannerAlternateText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBannerAlternateText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopBanner", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanner", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopBanner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopBanner", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopLogoAlternateText", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopLogoAlternateText", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopLogoAlternateText", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopLogoAlternateText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Title", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Title", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Title", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PageID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PageID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PageID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[9];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     shop_id, shop_name, address1, address2, latitude, longitude, ratings, " +
                "city, state, image_attached, zip, phone, fax, email, website, business_license, " +
                "epa_license, \r\n                      bar_license, network_name, certification_ve" +
                "hicles, third_party_providers, positive_ratings, negative_ratings, manager, syst" +
                "em_admin, portal_admin_password, \r\n                      company_tag_line, owner" +
                ", noPremierShop, noHelpSelection, isPremierShop, image_path, messageCount, avail" +
                "ableMessages, expirationDate, startDate, isShow, \r\n                      comment" +
                "sfrequency, displaycommentonswebapp, subscription_reminder_day, displaypromoonwe" +
                "bpage, applyemailtemplate, isRcintegrationapproved, \r\n                      IsCo" +
                "nsumerConsentApprovedForEmail, IsConsumerConsentApprovedForSMS, ConsumerConsentA" +
                "pprovedDateForEmail, ConsumerConsentApprovedDateForSMS, \r\n                      " +
                "DonloadKeywords, DownloadDescription, DownloadTitle, SpecialPromotionKeywords, S" +
                "pecialPromotionDescription, SpecialPromotionTitle, \r\n                      Sched" +
                "uleAppointmentKeywords, ScheduleAppointmentDescription, ScheduleAppointmentTitle" +
                ", OnlineEstimateKeywords, OnlineEstimateDescription, \r\n                      Onl" +
                "ineEstimateTitle, VehicleStatusKeywords, VehicleStatusDescription, VehicleStatus" +
                "Title, RentalCarCompanyPageUrl, TowingCompanyPageUrl, \r\n                      Sh" +
                "opNameBackColor, ShopNameFontColor, SendMessageKeywords, SendMessageDescription," +
                " SendMessageTitle, ShopBanerImage5, ShopBanerImage4, \r\n                      Sho" +
                "pBanerImage3, ShopBanerImage2, SetBannerBackgroundColor, TwitterPageUrl, Instagr" +
                "amPageUrl, GooglePlusPageUrl, PinterestPageUrl, YouTubePageUrl, \r\n              " +
                "        LinkedInPageUrl, FacebookPageUrl, ShopBannerAlternateText, ShopBanner, S" +
                "hopLogoAlternateText, Keyword, ShopDescription, Title, History, Speciality, [con" +
                "tent], \r\n                      AccessToken, PageID\r\nFROM         BodyShop";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "dbo.GetAllData";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT AccessToken, ConsumerConsentApprovedDateForEmail, ConsumerConsentApprovedD" +
                "ateForSMS, DonloadKeywords, DownloadDescription, DownloadTitle, FacebookPageUrl," +
                " GooglePlusPageUrl, History, InstagramPageUrl, IsConsumerConsentApprovedForEmail" +
                ", IsConsumerConsentApprovedForSMS, Keyword, LinkedInPageUrl, OnlineEstimateDescr" +
                "iption, OnlineEstimateKeywords, OnlineEstimateTitle, PageID, PinterestPageUrl, R" +
                "entalCarCompanyPageUrl, ScheduleAppointmentDescription, ScheduleAppointmentKeywo" +
                "rds, ScheduleAppointmentTitle, SendMessageDescription, SendMessageKeywords, Send" +
                "MessageTitle, SetBannerBackgroundColor, ShopBanerImage2, ShopBanerImage3, ShopBa" +
                "nerImage4, ShopBanerImage5, ShopBanner, ShopBannerAlternateText, ShopDescription" +
                ", ShopLogoAlternateText, ShopNameBackColor, ShopNameFontColor, SpecialPromotionD" +
                "escription, SpecialPromotionKeywords, SpecialPromotionTitle, Speciality, Title, " +
                "TowingCompanyPageUrl, TwitterPageUrl, VehicleStatusDescription, VehicleStatusKey" +
                "words, VehicleStatusTitle, YouTubePageUrl, address1, address2, applyemailtemplat" +
                "e, availableMessages, bar_license, business_license, certification_vehicles, cit" +
                "y, commentsfrequency, company_tag_line, [content], displaycommentonswebapp, disp" +
                "laypromoonwebpage, email, epa_license, expirationDate, fax, image_attached, imag" +
                "e_path, isPremierShop, isRcintegrationapproved, isShow, latitude, longitude, man" +
                "ager, messageCount, negative_ratings, network_name, noHelpSelection, noPremierSh" +
                "op, owner, phone, portal_admin_password, positive_ratings, ratings, shop_id, sho" +
                "p_name, startDate, state, subscription_reminder_day, system_admin, third_party_p" +
                "roviders, website, zip FROM BodyShop WHERE (shop_name LIKE @ShopName)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopName", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "shop_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "dbo.GetAllPremierShops";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "dbo.SP_Search_BodyShops_HideAndShow";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@centerlat", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@centrlon", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@searchDistance", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 53, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@network_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@provider_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "dbo.Sp_BodyShop_getDataById";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@iId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "dbo.Sp_Search_ShopsByName";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[6].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopName", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "dbo.Sp_SearchPreferredShop";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[7].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "dbo.Sp_Search_ShopsByZipCode";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[8].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZipCode", global::System.Data.SqlDbType.VarChar, 100, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.BodyShopDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.BodyShopDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShopDataTable GetAllData() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShopDataTable GetBodyShopByName(string ShopName) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((ShopName == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ShopName));
            }
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShopDataTable GetDataAllPremierShops() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShopDataTable GetDataByBodyShopHideAndShow(global::System.Nullable<double> centerlat, global::System.Nullable<double> centrlon, global::System.Nullable<double> searchDistance, global::System.Nullable<int> network_id, global::System.Nullable<int> vehicle_id, global::System.Nullable<int> provider_id) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((centerlat.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((double)(centerlat.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((centrlon.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((double)(centrlon.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((searchDistance.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((double)(searchDistance.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((network_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(network_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((vehicle_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((int)(vehicle_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((provider_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(provider_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShopDataTable GetDataById(global::System.Nullable<int> iId) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((iId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(iId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShopDataTable GetDataByShopName(string ShopName) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((ShopName == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ShopName));
            }
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShopDataTable getShopByUserId(global::System.Nullable<int> user_id) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((user_id.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(user_id.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.BodyShopDataTable GetShopsByZipCode(string ZipCode) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            if ((ZipCode == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ZipCode));
            }
            SummitDS.BodyShopDataTable dataTable = new SummitDS.BodyShopDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.BodyShopDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "BodyShop");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_shop_id, 
                    string Original_shop_name, 
                    string Original_address1, 
                    string Original_address2, 
                    global::System.Nullable<double> Original_latitude, 
                    global::System.Nullable<double> Original_longitude, 
                    global::System.Nullable<int> Original_ratings, 
                    string Original_city, 
                    string Original_state, 
                    byte[] Original_image_attached, 
                    string Original_zip, 
                    string Original_phone, 
                    string Original_fax, 
                    string Original_email, 
                    string Original_website, 
                    string Original_business_license, 
                    string Original_epa_license, 
                    string Original_bar_license, 
                    string Original_network_name, 
                    string Original_certification_vehicles, 
                    string Original_third_party_providers, 
                    global::System.Nullable<int> Original_positive_ratings, 
                    global::System.Nullable<int> Original_negative_ratings, 
                    string Original_manager, 
                    string Original_system_admin, 
                    string Original_portal_admin_password, 
                    string Original_company_tag_line, 
                    string Original_owner, 
                    global::System.Nullable<int> Original_noPremierShop, 
                    global::System.Nullable<int> Original_noHelpSelection, 
                    global::System.Nullable<bool> Original_isPremierShop, 
                    string Original_image_path, 
                    global::System.Nullable<int> Original_messageCount, 
                    global::System.Nullable<int> Original_availableMessages, 
                    global::System.Nullable<global::System.DateTime> Original_expirationDate, 
                    global::System.Nullable<global::System.DateTime> Original_startDate, 
                    global::System.Nullable<bool> Original_isShow, 
                    string Original_commentsfrequency, 
                    global::System.Nullable<bool> Original_displaycommentonswebapp, 
                    global::System.Nullable<int> Original_subscription_reminder_day, 
                    global::System.Nullable<bool> Original_displaypromoonwebpage, 
                    global::System.Nullable<bool> Original_applyemailtemplate, 
                    global::System.Nullable<bool> Original_isRcintegrationapproved, 
                    global::System.Nullable<bool> Original_IsConsumerConsentApprovedForEmail, 
                    global::System.Nullable<bool> Original_IsConsumerConsentApprovedForSMS, 
                    global::System.Nullable<global::System.DateTime> Original_ConsumerConsentApprovedDateForEmail, 
                    global::System.Nullable<global::System.DateTime> Original_ConsumerConsentApprovedDateForSMS, 
                    string Original_DownloadDescription, 
                    string Original_DownloadTitle, 
                    string Original_SpecialPromotionDescription, 
                    string Original_SpecialPromotionTitle, 
                    string Original_ScheduleAppointmentDescription, 
                    string Original_ScheduleAppointmentTitle, 
                    string Original_OnlineEstimateDescription, 
                    string Original_OnlineEstimateTitle, 
                    string Original_VehicleStatusDescription, 
                    string Original_VehicleStatusTitle, 
                    string Original_RentalCarCompanyPageUrl, 
                    string Original_TowingCompanyPageUrl, 
                    string Original_ShopNameBackColor, 
                    string Original_ShopNameFontColor, 
                    string Original_SendMessageDescription, 
                    string Original_SendMessageTitle, 
                    string Original_ShopBanerImage5, 
                    string Original_ShopBanerImage4, 
                    string Original_ShopBanerImage3, 
                    string Original_ShopBanerImage2, 
                    string Original_SetBannerBackgroundColor, 
                    string Original_TwitterPageUrl, 
                    string Original_InstagramPageUrl, 
                    string Original_GooglePlusPageUrl, 
                    string Original_PinterestPageUrl, 
                    string Original_YouTubePageUrl, 
                    string Original_LinkedInPageUrl, 
                    string Original_FacebookPageUrl, 
                    string Original_ShopBannerAlternateText, 
                    string Original_ShopBanner, 
                    string Original_ShopLogoAlternateText, 
                    string Original_Title, 
                    string Original_PageID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_shop_id));
            if ((Original_shop_name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_shop_name));
            }
            if ((Original_address1 == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_address1));
            }
            if ((Original_address2 == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_address2));
            }
            if ((Original_latitude.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_latitude.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_longitude.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_longitude.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ratings.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ratings.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_city == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_city));
            }
            if ((Original_state == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_state));
            }
            if ((Original_image_attached == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((byte[])(Original_image_attached));
            }
            if ((Original_zip == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_zip));
            }
            if ((Original_phone == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_phone));
            }
            if ((Original_fax == null)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_fax));
            }
            if ((Original_email == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_email));
            }
            if ((Original_website == null)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_website));
            }
            if ((Original_business_license == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_business_license));
            }
            if ((Original_epa_license == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_epa_license));
            }
            if ((Original_bar_license == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_bar_license));
            }
            if ((Original_network_name == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_network_name));
            }
            if ((Original_certification_vehicles == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_certification_vehicles));
            }
            if ((Original_third_party_providers == null)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((string)(Original_third_party_providers));
            }
            if ((Original_positive_ratings.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((int)(Original_positive_ratings.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_negative_ratings.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((int)(Original_negative_ratings.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_manager == null)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_manager));
            }
            if ((Original_system_admin == null)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_system_admin));
            }
            if ((Original_portal_admin_password == null)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_portal_admin_password));
            }
            if ((Original_company_tag_line == null)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_company_tag_line));
            }
            if ((Original_owner == null)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_owner));
            }
            if ((Original_noPremierShop.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((int)(Original_noPremierShop.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_noHelpSelection.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_noHelpSelection.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_isPremierShop.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((bool)(Original_isPremierShop.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_image_path == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_image_path));
            }
            if ((Original_messageCount.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_messageCount.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_availableMessages.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_availableMessages.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_expirationDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((System.DateTime)(Original_expirationDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_startDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[70].Value = ((System.DateTime)(Original_startDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_isShow.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[72].Value = ((bool)(Original_isShow.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_commentsfrequency == null)) {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[74].Value = ((string)(Original_commentsfrequency));
            }
            if ((Original_displaycommentonswebapp.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[76].Value = ((bool)(Original_displaycommentonswebapp.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_subscription_reminder_day.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((int)(Original_subscription_reminder_day.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_displaypromoonwebpage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((bool)(Original_displaypromoonwebpage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_applyemailtemplate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((bool)(Original_applyemailtemplate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_isRcintegrationapproved.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[84].Value = ((bool)(Original_isRcintegrationapproved.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((Original_IsConsumerConsentApprovedForEmail.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[86].Value = ((bool)(Original_IsConsumerConsentApprovedForEmail.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[85].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((Original_IsConsumerConsentApprovedForSMS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[88].Value = ((bool)(Original_IsConsumerConsentApprovedForSMS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((Original_ConsumerConsentApprovedDateForEmail.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[90].Value = ((System.DateTime)(Original_ConsumerConsentApprovedDateForEmail.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[89].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((Original_ConsumerConsentApprovedDateForSMS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[92].Value = ((System.DateTime)(Original_ConsumerConsentApprovedDateForSMS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[91].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((Original_DownloadDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[93].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[94].Value = ((string)(Original_DownloadDescription));
            }
            if ((Original_DownloadTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_DownloadTitle));
            }
            if ((Original_SpecialPromotionDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[98].Value = ((string)(Original_SpecialPromotionDescription));
            }
            if ((Original_SpecialPromotionTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[100].Value = ((string)(Original_SpecialPromotionTitle));
            }
            if ((Original_ScheduleAppointmentDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[102].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[101].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[102].Value = ((string)(Original_ScheduleAppointmentDescription));
            }
            if ((Original_ScheduleAppointmentTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[104].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[103].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[104].Value = ((string)(Original_ScheduleAppointmentTitle));
            }
            if ((Original_OnlineEstimateDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[106].Value = ((string)(Original_OnlineEstimateDescription));
            }
            if ((Original_OnlineEstimateTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[108].Value = ((string)(Original_OnlineEstimateTitle));
            }
            if ((Original_VehicleStatusDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[110].Value = ((string)(Original_VehicleStatusDescription));
            }
            if ((Original_VehicleStatusTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[112].Value = ((string)(Original_VehicleStatusTitle));
            }
            if ((Original_RentalCarCompanyPageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[114].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[113].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[114].Value = ((string)(Original_RentalCarCompanyPageUrl));
            }
            if ((Original_TowingCompanyPageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[116].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[115].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[116].Value = ((string)(Original_TowingCompanyPageUrl));
            }
            if ((Original_ShopNameBackColor == null)) {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[118].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[117].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[118].Value = ((string)(Original_ShopNameBackColor));
            }
            if ((Original_ShopNameFontColor == null)) {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[120].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[119].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[120].Value = ((string)(Original_ShopNameFontColor));
            }
            if ((Original_SendMessageDescription == null)) {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[122].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[121].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[122].Value = ((string)(Original_SendMessageDescription));
            }
            if ((Original_SendMessageTitle == null)) {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[124].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[123].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[124].Value = ((string)(Original_SendMessageTitle));
            }
            if ((Original_ShopBanerImage5 == null)) {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[126].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[125].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[126].Value = ((string)(Original_ShopBanerImage5));
            }
            if ((Original_ShopBanerImage4 == null)) {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[128].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[127].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[128].Value = ((string)(Original_ShopBanerImage4));
            }
            if ((Original_ShopBanerImage3 == null)) {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[130].Value = ((string)(Original_ShopBanerImage3));
            }
            if ((Original_ShopBanerImage2 == null)) {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[132].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[131].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[132].Value = ((string)(Original_ShopBanerImage2));
            }
            if ((Original_SetBannerBackgroundColor == null)) {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[134].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[133].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[134].Value = ((string)(Original_SetBannerBackgroundColor));
            }
            if ((Original_TwitterPageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[136].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[135].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[136].Value = ((string)(Original_TwitterPageUrl));
            }
            if ((Original_InstagramPageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[138].Value = ((string)(Original_InstagramPageUrl));
            }
            if ((Original_GooglePlusPageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[140].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[139].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[140].Value = ((string)(Original_GooglePlusPageUrl));
            }
            if ((Original_PinterestPageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[142].Value = ((string)(Original_PinterestPageUrl));
            }
            if ((Original_YouTubePageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[144].Value = ((string)(Original_YouTubePageUrl));
            }
            if ((Original_LinkedInPageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[146].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[145].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[146].Value = ((string)(Original_LinkedInPageUrl));
            }
            if ((Original_FacebookPageUrl == null)) {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[148].Value = ((string)(Original_FacebookPageUrl));
            }
            if ((Original_ShopBannerAlternateText == null)) {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[150].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[149].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[150].Value = ((string)(Original_ShopBannerAlternateText));
            }
            if ((Original_ShopBanner == null)) {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[152].Value = ((string)(Original_ShopBanner));
            }
            if ((Original_ShopLogoAlternateText == null)) {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[154].Value = ((string)(Original_ShopLogoAlternateText));
            }
            if ((Original_Title == null)) {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[156].Value = ((string)(Original_Title));
            }
            if ((Original_PageID == null)) {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[158].Value = ((string)(Original_PageID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string shop_name, 
                    string address1, 
                    string address2, 
                    global::System.Nullable<double> latitude, 
                    global::System.Nullable<double> longitude, 
                    global::System.Nullable<int> ratings, 
                    string city, 
                    string state, 
                    byte[] image_attached, 
                    string zip, 
                    string phone, 
                    string fax, 
                    string email, 
                    string website, 
                    string business_license, 
                    string epa_license, 
                    string bar_license, 
                    string network_name, 
                    string certification_vehicles, 
                    string third_party_providers, 
                    global::System.Nullable<int> positive_ratings, 
                    global::System.Nullable<int> negative_ratings, 
                    string manager, 
                    string system_admin, 
                    string portal_admin_password, 
                    string company_tag_line, 
                    string owner, 
                    global::System.Nullable<int> noPremierShop, 
                    global::System.Nullable<int> noHelpSelection, 
                    global::System.Nullable<bool> isPremierShop, 
                    string image_path, 
                    global::System.Nullable<int> messageCount, 
                    global::System.Nullable<int> availableMessages, 
                    global::System.Nullable<global::System.DateTime> expirationDate, 
                    global::System.Nullable<global::System.DateTime> startDate, 
                    global::System.Nullable<bool> isShow, 
                    string commentsfrequency, 
                    global::System.Nullable<bool> displaycommentonswebapp, 
                    global::System.Nullable<int> subscription_reminder_day, 
                    global::System.Nullable<bool> displaypromoonwebpage, 
                    global::System.Nullable<bool> applyemailtemplate, 
                    global::System.Nullable<bool> isRcintegrationapproved, 
                    global::System.Nullable<bool> IsConsumerConsentApprovedForEmail, 
                    global::System.Nullable<bool> IsConsumerConsentApprovedForSMS, 
                    global::System.Nullable<global::System.DateTime> ConsumerConsentApprovedDateForEmail, 
                    global::System.Nullable<global::System.DateTime> ConsumerConsentApprovedDateForSMS, 
                    string DonloadKeywords, 
                    string DownloadDescription, 
                    string DownloadTitle, 
                    string SpecialPromotionKeywords, 
                    string SpecialPromotionDescription, 
                    string SpecialPromotionTitle, 
                    string ScheduleAppointmentKeywords, 
                    string ScheduleAppointmentDescription, 
                    string ScheduleAppointmentTitle, 
                    string OnlineEstimateKeywords, 
                    string OnlineEstimateDescription, 
                    string OnlineEstimateTitle, 
                    string VehicleStatusKeywords, 
                    string VehicleStatusDescription, 
                    string VehicleStatusTitle, 
                    string RentalCarCompanyPageUrl, 
                    string TowingCompanyPageUrl, 
                    string ShopNameBackColor, 
                    string ShopNameFontColor, 
                    string SendMessageKeywords, 
                    string SendMessageDescription, 
                    string SendMessageTitle, 
                    string ShopBanerImage5, 
                    string ShopBanerImage4, 
                    string ShopBanerImage3, 
                    string ShopBanerImage2, 
                    string SetBannerBackgroundColor, 
                    string TwitterPageUrl, 
                    string InstagramPageUrl, 
                    string GooglePlusPageUrl, 
                    string PinterestPageUrl, 
                    string YouTubePageUrl, 
                    string LinkedInPageUrl, 
                    string FacebookPageUrl, 
                    string ShopBannerAlternateText, 
                    string ShopBanner, 
                    string ShopLogoAlternateText, 
                    string Keyword, 
                    string ShopDescription, 
                    string Title, 
                    string History, 
                    string Speciality, 
                    string content, 
                    string AccessToken, 
                    string PageID) {
            if ((shop_name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(shop_name));
            }
            if ((address1 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(address1));
            }
            if ((address2 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(address2));
            }
            if ((latitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(latitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((longitude.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(longitude.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ratings.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ratings.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((city == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(city));
            }
            if ((state == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(state));
            }
            if ((image_attached == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((byte[])(image_attached));
            }
            if ((zip == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(zip));
            }
            if ((phone == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(phone));
            }
            if ((fax == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(fax));
            }
            if ((email == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(email));
            }
            if ((website == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(website));
            }
            if ((business_license == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(business_license));
            }
            if ((epa_license == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(epa_license));
            }
            if ((bar_license == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(bar_license));
            }
            if ((network_name == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(network_name));
            }
            if ((certification_vehicles == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(certification_vehicles));
            }
            if ((third_party_providers == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(third_party_providers));
            }
            if ((positive_ratings.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((int)(positive_ratings.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((negative_ratings.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((int)(negative_ratings.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((manager == null)) {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(manager));
            }
            if ((system_admin == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(system_admin));
            }
            if ((portal_admin_password == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(portal_admin_password));
            }
            if ((company_tag_line == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(company_tag_line));
            }
            if ((owner == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(owner));
            }
            if ((noPremierShop.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((int)(noPremierShop.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((noHelpSelection.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((int)(noHelpSelection.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((isPremierShop.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(isPremierShop.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((image_path == null)) {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(image_path));
            }
            if ((messageCount.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((int)(messageCount.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((availableMessages.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((int)(availableMessages.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((expirationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(expirationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((startDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((System.DateTime)(startDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((isShow.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(isShow.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((commentsfrequency == null)) {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(commentsfrequency));
            }
            if ((displaycommentonswebapp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(displaycommentonswebapp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((subscription_reminder_day.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((int)(subscription_reminder_day.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((displaypromoonwebpage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((bool)(displaypromoonwebpage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((applyemailtemplate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(applyemailtemplate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((isRcintegrationapproved.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((bool)(isRcintegrationapproved.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((IsConsumerConsentApprovedForEmail.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((bool)(IsConsumerConsentApprovedForEmail.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((IsConsumerConsentApprovedForSMS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((bool)(IsConsumerConsentApprovedForSMS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ConsumerConsentApprovedDateForEmail.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((System.DateTime)(ConsumerConsentApprovedDateForEmail.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ConsumerConsentApprovedDateForSMS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((System.DateTime)(ConsumerConsentApprovedDateForSMS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((DonloadKeywords == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(DonloadKeywords));
            }
            if ((DownloadDescription == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(DownloadDescription));
            }
            if ((DownloadTitle == null)) {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(DownloadTitle));
            }
            if ((SpecialPromotionKeywords == null)) {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(SpecialPromotionKeywords));
            }
            if ((SpecialPromotionDescription == null)) {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(SpecialPromotionDescription));
            }
            if ((SpecialPromotionTitle == null)) {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = ((string)(SpecialPromotionTitle));
            }
            if ((ScheduleAppointmentKeywords == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(ScheduleAppointmentKeywords));
            }
            if ((ScheduleAppointmentDescription == null)) {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(ScheduleAppointmentDescription));
            }
            if ((ScheduleAppointmentTitle == null)) {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(ScheduleAppointmentTitle));
            }
            if ((OnlineEstimateKeywords == null)) {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(OnlineEstimateKeywords));
            }
            if ((OnlineEstimateDescription == null)) {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(OnlineEstimateDescription));
            }
            if ((OnlineEstimateTitle == null)) {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(OnlineEstimateTitle));
            }
            if ((VehicleStatusKeywords == null)) {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(VehicleStatusKeywords));
            }
            if ((VehicleStatusDescription == null)) {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(VehicleStatusDescription));
            }
            if ((VehicleStatusTitle == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(VehicleStatusTitle));
            }
            if ((RentalCarCompanyPageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(RentalCarCompanyPageUrl));
            }
            if ((TowingCompanyPageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(TowingCompanyPageUrl));
            }
            if ((ShopNameBackColor == null)) {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = ((string)(ShopNameBackColor));
            }
            if ((ShopNameFontColor == null)) {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(ShopNameFontColor));
            }
            if ((SendMessageKeywords == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(SendMessageKeywords));
            }
            if ((SendMessageDescription == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(SendMessageDescription));
            }
            if ((SendMessageTitle == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(SendMessageTitle));
            }
            if ((ShopBanerImage5 == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(ShopBanerImage5));
            }
            if ((ShopBanerImage4 == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(ShopBanerImage4));
            }
            if ((ShopBanerImage3 == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(ShopBanerImage3));
            }
            if ((ShopBanerImage2 == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(ShopBanerImage2));
            }
            if ((SetBannerBackgroundColor == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(SetBannerBackgroundColor));
            }
            if ((TwitterPageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = ((string)(TwitterPageUrl));
            }
            if ((InstagramPageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = ((string)(InstagramPageUrl));
            }
            if ((GooglePlusPageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = ((string)(GooglePlusPageUrl));
            }
            if ((PinterestPageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = ((string)(PinterestPageUrl));
            }
            if ((YouTubePageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = ((string)(YouTubePageUrl));
            }
            if ((LinkedInPageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(LinkedInPageUrl));
            }
            if ((FacebookPageUrl == null)) {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = ((string)(FacebookPageUrl));
            }
            if ((ShopBannerAlternateText == null)) {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = ((string)(ShopBannerAlternateText));
            }
            if ((ShopBanner == null)) {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = ((string)(ShopBanner));
            }
            if ((ShopLogoAlternateText == null)) {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(ShopLogoAlternateText));
            }
            if ((Keyword == null)) {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(Keyword));
            }
            if ((ShopDescription == null)) {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(ShopDescription));
            }
            if ((Title == null)) {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = ((string)(Title));
            }
            if ((History == null)) {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = ((string)(History));
            }
            if ((Speciality == null)) {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(Speciality));
            }
            if ((content == null)) {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = ((string)(content));
            }
            if ((AccessToken == null)) {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = ((string)(AccessToken));
            }
            if ((PageID == null)) {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = ((string)(PageID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string shop_name, 
                    string address1, 
                    string address2, 
                    global::System.Nullable<double> latitude, 
                    global::System.Nullable<double> longitude, 
                    global::System.Nullable<int> ratings, 
                    string city, 
                    string state, 
                    byte[] image_attached, 
                    string zip, 
                    string phone, 
                    string fax, 
                    string email, 
                    string website, 
                    string business_license, 
                    string epa_license, 
                    string bar_license, 
                    string network_name, 
                    string certification_vehicles, 
                    string third_party_providers, 
                    global::System.Nullable<int> positive_ratings, 
                    global::System.Nullable<int> negative_ratings, 
                    string manager, 
                    string system_admin, 
                    string portal_admin_password, 
                    string company_tag_line, 
                    string owner, 
                    global::System.Nullable<int> noPremierShop, 
                    global::System.Nullable<int> noHelpSelection, 
                    global::System.Nullable<bool> isPremierShop, 
                    string image_path, 
                    global::System.Nullable<int> messageCount, 
                    global::System.Nullable<int> availableMessages, 
                    global::System.Nullable<global::System.DateTime> expirationDate, 
                    global::System.Nullable<global::System.DateTime> startDate, 
                    global::System.Nullable<bool> isShow, 
                    string commentsfrequency, 
                    global::System.Nullable<bool> displaycommentonswebapp, 
                    global::System.Nullable<int> subscription_reminder_day, 
                    global::System.Nullable<bool> displaypromoonwebpage, 
                    global::System.Nullable<bool> applyemailtemplate, 
                    global::System.Nullable<bool> isRcintegrationapproved, 
                    global::System.Nullable<bool> IsConsumerConsentApprovedForEmail, 
                    global::System.Nullable<bool> IsConsumerConsentApprovedForSMS, 
                    global::System.Nullable<global::System.DateTime> ConsumerConsentApprovedDateForEmail, 
                    global::System.Nullable<global::System.DateTime> ConsumerConsentApprovedDateForSMS, 
                    string DonloadKeywords, 
                    string DownloadDescription, 
                    string DownloadTitle, 
                    string SpecialPromotionKeywords, 
                    string SpecialPromotionDescription, 
                    string SpecialPromotionTitle, 
                    string ScheduleAppointmentKeywords, 
                    string ScheduleAppointmentDescription, 
                    string ScheduleAppointmentTitle, 
                    string OnlineEstimateKeywords, 
                    string OnlineEstimateDescription, 
                    string OnlineEstimateTitle, 
                    string VehicleStatusKeywords, 
                    string VehicleStatusDescription, 
                    string VehicleStatusTitle, 
                    string RentalCarCompanyPageUrl, 
                    string TowingCompanyPageUrl, 
                    string ShopNameBackColor, 
                    string ShopNameFontColor, 
                    string SendMessageKeywords, 
                    string SendMessageDescription, 
                    string SendMessageTitle, 
                    string ShopBanerImage5, 
                    string ShopBanerImage4, 
                    string ShopBanerImage3, 
                    string ShopBanerImage2, 
                    string SetBannerBackgroundColor, 
                    string TwitterPageUrl, 
                    string InstagramPageUrl, 
                    string GooglePlusPageUrl, 
                    string PinterestPageUrl, 
                    string YouTubePageUrl, 
                    string LinkedInPageUrl, 
                    string FacebookPageUrl, 
                    string ShopBannerAlternateText, 
                    string ShopBanner, 
                    string ShopLogoAlternateText, 
                    string Keyword, 
                    string ShopDescription, 
                    string Title, 
                    string History, 
                    string Speciality, 
                    string content, 
                    string AccessToken, 
                    string PageID, 
                    int Original_shop_id, 
                    string Original_shop_name, 
                    string Original_address1, 
                    string Original_address2, 
                    global::System.Nullable<double> Original_latitude, 
                    global::System.Nullable<double> Original_longitude, 
                    global::System.Nullable<int> Original_ratings, 
                    string Original_city, 
                    string Original_state, 
                    byte[] Original_image_attached, 
                    string Original_zip, 
                    string Original_phone, 
                    string Original_fax, 
                    string Original_email, 
                    string Original_website, 
                    string Original_business_license, 
                    string Original_epa_license, 
                    string Original_bar_license, 
                    string Original_network_name, 
                    string Original_certification_vehicles, 
                    string Original_third_party_providers, 
                    global::System.Nullable<int> Original_positive_ratings, 
                    global::System.Nullable<int> Original_negative_ratings, 
                    string Original_manager, 
                    string Original_system_admin, 
                    string Original_portal_admin_password, 
                    string Original_company_tag_line, 
                    string Original_owner, 
                    global::System.Nullable<int> Original_noPremierShop, 
                    global::System.Nullable<int> Original_noHelpSelection, 
                    global::System.Nullable<bool> Original_isPremierShop, 
                    string Original_image_path, 
                    global::System.Nullable<int> Original_messageCount, 
                    global::System.Nullable<int> Original_availableMessages, 
                    global::System.Nullable<global::System.DateTime> Original_expirationDate, 
                    global::System.Nullable<global::System.DateTime> Original_startDate, 
                    global::System.Nullable<bool> Original_isShow, 
                    string Original_commentsfrequency, 
                    global::System.Nullable<bool> Original_displaycommentonswebapp, 
                    global::System.Nullable<int> Original_subscription_reminder_day, 
                    global::System.Nullable<bool> Original_displaypromoonwebpage, 
                    global::System.Nullable<bool> Original_applyemailtemplate, 
                    global::System.Nullable<bool> Original_isRcintegrationapproved, 
                    global::System.Nullable<bool> Original_IsConsumerConsentApprovedForEmail, 
                    global::System.Nullable<bool> Original_IsConsumerConsentApprovedForSMS, 
                    global::System.Nullable<global::System.DateTime> Original_ConsumerConsentApprovedDateForEmail, 
                    global::System.Nullable<global::System.DateTime> Original_ConsumerConsentApprovedDateForSMS, 
                    string Original_DownloadDescription, 
                    string Original_DownloadTitle, 
                    string Original_SpecialPromotionDescription, 
                    string Original_SpecialPromotionTitle, 
                    string Original_ScheduleAppointmentDescription, 
                    string Original_ScheduleAppointmentTitle, 
                    string Original_OnlineEstimateDescription, 
                    string Original_OnlineEstimateTitle, 
                    string Original_VehicleStatusDescription, 
                    string Original_VehicleStatusTitle, 
                    string Original_RentalCarCompanyPageUrl, 
                    string Original_TowingCompanyPageUrl, 
                    string Original_ShopNameBackColor, 
                    string Original_ShopNameFontColor, 
                    string Original_SendMessageDescription, 
                    string Original_SendMessageTitle, 
                    string Original_ShopBanerImage5, 
                    string Original_ShopBanerImage4, 
                    string Original_ShopBanerImage3, 
                    string Original_ShopBanerImage2, 
                    string Original_SetBannerBackgroundColor, 
                    string Original_TwitterPageUrl, 
                    string Original_InstagramPageUrl, 
                    string Original_GooglePlusPageUrl, 
                    string Original_PinterestPageUrl, 
                    string Original_YouTubePageUrl, 
                    string Original_LinkedInPageUrl, 
                    string Original_FacebookPageUrl, 
                    string Original_ShopBannerAlternateText, 
                    string Original_ShopBanner, 
                    string Original_ShopLogoAlternateText, 
                    string Original_Title, 
                    string Original_PageID, 
                    int shop_id) {
            if ((shop_name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(shop_name));
            }
            if ((address1 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(address1));
            }
            if ((address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(address2));
            }
            if ((latitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(latitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((longitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(longitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ratings.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ratings.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((city == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(city));
            }
            if ((state == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(state));
            }
            if ((image_attached == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((byte[])(image_attached));
            }
            if ((zip == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(zip));
            }
            if ((phone == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(phone));
            }
            if ((fax == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(fax));
            }
            if ((email == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(email));
            }
            if ((website == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(website));
            }
            if ((business_license == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(business_license));
            }
            if ((epa_license == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(epa_license));
            }
            if ((bar_license == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(bar_license));
            }
            if ((network_name == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(network_name));
            }
            if ((certification_vehicles == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(certification_vehicles));
            }
            if ((third_party_providers == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(third_party_providers));
            }
            if ((positive_ratings.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(positive_ratings.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((negative_ratings.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(negative_ratings.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((manager == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(manager));
            }
            if ((system_admin == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(system_admin));
            }
            if ((portal_admin_password == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(portal_admin_password));
            }
            if ((company_tag_line == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(company_tag_line));
            }
            if ((owner == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(owner));
            }
            if ((noPremierShop.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((int)(noPremierShop.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((noHelpSelection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(noHelpSelection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((isPremierShop.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(isPremierShop.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((image_path == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(image_path));
            }
            if ((messageCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(messageCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((availableMessages.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(availableMessages.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((expirationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(expirationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((startDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(startDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((isShow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(isShow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((commentsfrequency == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(commentsfrequency));
            }
            if ((displaycommentonswebapp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(displaycommentonswebapp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((subscription_reminder_day.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(subscription_reminder_day.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((displaypromoonwebpage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(displaypromoonwebpage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((applyemailtemplate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(applyemailtemplate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((isRcintegrationapproved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((bool)(isRcintegrationapproved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((IsConsumerConsentApprovedForEmail.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((bool)(IsConsumerConsentApprovedForEmail.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((IsConsumerConsentApprovedForSMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((bool)(IsConsumerConsentApprovedForSMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((ConsumerConsentApprovedDateForEmail.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(ConsumerConsentApprovedDateForEmail.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((ConsumerConsentApprovedDateForSMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((System.DateTime)(ConsumerConsentApprovedDateForSMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((DonloadKeywords == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(DonloadKeywords));
            }
            if ((DownloadDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(DownloadDescription));
            }
            if ((DownloadTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(DownloadTitle));
            }
            if ((SpecialPromotionKeywords == null)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(SpecialPromotionKeywords));
            }
            if ((SpecialPromotionDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(SpecialPromotionDescription));
            }
            if ((SpecialPromotionTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(SpecialPromotionTitle));
            }
            if ((ScheduleAppointmentKeywords == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(ScheduleAppointmentKeywords));
            }
            if ((ScheduleAppointmentDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(ScheduleAppointmentDescription));
            }
            if ((ScheduleAppointmentTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(ScheduleAppointmentTitle));
            }
            if ((OnlineEstimateKeywords == null)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(OnlineEstimateKeywords));
            }
            if ((OnlineEstimateDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(OnlineEstimateDescription));
            }
            if ((OnlineEstimateTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(OnlineEstimateTitle));
            }
            if ((VehicleStatusKeywords == null)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(VehicleStatusKeywords));
            }
            if ((VehicleStatusDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(VehicleStatusDescription));
            }
            if ((VehicleStatusTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(VehicleStatusTitle));
            }
            if ((RentalCarCompanyPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(RentalCarCompanyPageUrl));
            }
            if ((TowingCompanyPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(TowingCompanyPageUrl));
            }
            if ((ShopNameBackColor == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(ShopNameBackColor));
            }
            if ((ShopNameFontColor == null)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(ShopNameFontColor));
            }
            if ((SendMessageKeywords == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(SendMessageKeywords));
            }
            if ((SendMessageDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(SendMessageDescription));
            }
            if ((SendMessageTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(SendMessageTitle));
            }
            if ((ShopBanerImage5 == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(ShopBanerImage5));
            }
            if ((ShopBanerImage4 == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(ShopBanerImage4));
            }
            if ((ShopBanerImage3 == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(ShopBanerImage3));
            }
            if ((ShopBanerImage2 == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(ShopBanerImage2));
            }
            if ((SetBannerBackgroundColor == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(SetBannerBackgroundColor));
            }
            if ((TwitterPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(TwitterPageUrl));
            }
            if ((InstagramPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(InstagramPageUrl));
            }
            if ((GooglePlusPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(GooglePlusPageUrl));
            }
            if ((PinterestPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(PinterestPageUrl));
            }
            if ((YouTubePageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((string)(YouTubePageUrl));
            }
            if ((LinkedInPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(LinkedInPageUrl));
            }
            if ((FacebookPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((string)(FacebookPageUrl));
            }
            if ((ShopBannerAlternateText == null)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((string)(ShopBannerAlternateText));
            }
            if ((ShopBanner == null)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((string)(ShopBanner));
            }
            if ((ShopLogoAlternateText == null)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(ShopLogoAlternateText));
            }
            if ((Keyword == null)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(Keyword));
            }
            if ((ShopDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(ShopDescription));
            }
            if ((Title == null)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((string)(Title));
            }
            if ((History == null)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((string)(History));
            }
            if ((Speciality == null)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(Speciality));
            }
            if ((content == null)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((string)(content));
            }
            if ((AccessToken == null)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((string)(AccessToken));
            }
            if ((PageID == null)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(PageID));
            }
            this.Adapter.UpdateCommand.Parameters[91].Value = ((int)(Original_shop_id));
            if ((Original_shop_name == null)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_shop_name));
            }
            if ((Original_address1 == null)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_address1));
            }
            if ((Original_address2 == null)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_address2));
            }
            if ((Original_latitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((double)(Original_latitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            if ((Original_longitude.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[101].Value = ((double)(Original_longitude.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[101].Value = global::System.DBNull.Value;
            }
            if ((Original_ratings.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[103].Value = ((int)(Original_ratings.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[103].Value = global::System.DBNull.Value;
            }
            if ((Original_city == null)) {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[105].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_city));
            }
            if ((Original_state == null)) {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[107].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_state));
            }
            if ((Original_image_attached == null)) {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[109].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[109].Value = ((byte[])(Original_image_attached));
            }
            if ((Original_zip == null)) {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[111].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_zip));
            }
            if ((Original_phone == null)) {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[113].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_phone));
            }
            if ((Original_fax == null)) {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[115].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_fax));
            }
            if ((Original_email == null)) {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[117].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_email));
            }
            if ((Original_website == null)) {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[119].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_website));
            }
            if ((Original_business_license == null)) {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[121].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_business_license));
            }
            if ((Original_epa_license == null)) {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[123].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_epa_license));
            }
            if ((Original_bar_license == null)) {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[125].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_bar_license));
            }
            if ((Original_network_name == null)) {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[127].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_network_name));
            }
            if ((Original_certification_vehicles == null)) {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[129].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_certification_vehicles));
            }
            if ((Original_third_party_providers == null)) {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[131].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[130].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_third_party_providers));
            }
            if ((Original_positive_ratings.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((int)(Original_positive_ratings.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            if ((Original_negative_ratings.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[135].Value = ((int)(Original_negative_ratings.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[135].Value = global::System.DBNull.Value;
            }
            if ((Original_manager == null)) {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[137].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[136].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_manager));
            }
            if ((Original_system_admin == null)) {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[139].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[138].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_system_admin));
            }
            if ((Original_portal_admin_password == null)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((string)(Original_portal_admin_password));
            }
            if ((Original_company_tag_line == null)) {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[143].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[142].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_company_tag_line));
            }
            if ((Original_owner == null)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((string)(Original_owner));
            }
            if ((Original_noPremierShop.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[147].Value = ((int)(Original_noPremierShop.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[147].Value = global::System.DBNull.Value;
            }
            if ((Original_noHelpSelection.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[149].Value = ((int)(Original_noHelpSelection.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[149].Value = global::System.DBNull.Value;
            }
            if ((Original_isPremierShop.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[151].Value = ((bool)(Original_isPremierShop.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[151].Value = global::System.DBNull.Value;
            }
            if ((Original_image_path == null)) {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[153].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_image_path));
            }
            if ((Original_messageCount.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[155].Value = ((int)(Original_messageCount.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[154].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[155].Value = global::System.DBNull.Value;
            }
            if ((Original_availableMessages.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[157].Value = ((int)(Original_availableMessages.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[157].Value = global::System.DBNull.Value;
            }
            if ((Original_expirationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[159].Value = ((System.DateTime)(Original_expirationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[158].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[159].Value = global::System.DBNull.Value;
            }
            if ((Original_startDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[161].Value = ((System.DateTime)(Original_startDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[160].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[161].Value = global::System.DBNull.Value;
            }
            if ((Original_isShow.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[163].Value = ((bool)(Original_isShow.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[162].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[163].Value = global::System.DBNull.Value;
            }
            if ((Original_commentsfrequency == null)) {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[165].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[164].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[165].Value = ((string)(Original_commentsfrequency));
            }
            if ((Original_displaycommentonswebapp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[167].Value = ((bool)(Original_displaycommentonswebapp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[166].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[167].Value = global::System.DBNull.Value;
            }
            if ((Original_subscription_reminder_day.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[169].Value = ((int)(Original_subscription_reminder_day.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[168].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[169].Value = global::System.DBNull.Value;
            }
            if ((Original_displaypromoonwebpage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[171].Value = ((bool)(Original_displaypromoonwebpage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[170].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[171].Value = global::System.DBNull.Value;
            }
            if ((Original_applyemailtemplate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[173].Value = ((bool)(Original_applyemailtemplate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[173].Value = global::System.DBNull.Value;
            }
            if ((Original_isRcintegrationapproved.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[175].Value = ((bool)(Original_isRcintegrationapproved.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[174].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[175].Value = global::System.DBNull.Value;
            }
            if ((Original_IsConsumerConsentApprovedForEmail.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[177].Value = ((bool)(Original_IsConsumerConsentApprovedForEmail.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[176].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[177].Value = global::System.DBNull.Value;
            }
            if ((Original_IsConsumerConsentApprovedForSMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[179].Value = ((bool)(Original_IsConsumerConsentApprovedForSMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[178].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[179].Value = global::System.DBNull.Value;
            }
            if ((Original_ConsumerConsentApprovedDateForEmail.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[181].Value = ((System.DateTime)(Original_ConsumerConsentApprovedDateForEmail.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[180].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[181].Value = global::System.DBNull.Value;
            }
            if ((Original_ConsumerConsentApprovedDateForSMS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[183].Value = ((System.DateTime)(Original_ConsumerConsentApprovedDateForSMS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[182].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[183].Value = global::System.DBNull.Value;
            }
            if ((Original_DownloadDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[185].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_DownloadDescription));
            }
            if ((Original_DownloadTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[187].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[187].Value = ((string)(Original_DownloadTitle));
            }
            if ((Original_SpecialPromotionDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[189].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[188].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_SpecialPromotionDescription));
            }
            if ((Original_SpecialPromotionTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[191].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[190].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[191].Value = ((string)(Original_SpecialPromotionTitle));
            }
            if ((Original_ScheduleAppointmentDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[193].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[193].Value = ((string)(Original_ScheduleAppointmentDescription));
            }
            if ((Original_ScheduleAppointmentTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[195].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[195].Value = ((string)(Original_ScheduleAppointmentTitle));
            }
            if ((Original_OnlineEstimateDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[197].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[196].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[197].Value = ((string)(Original_OnlineEstimateDescription));
            }
            if ((Original_OnlineEstimateTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[199].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[199].Value = ((string)(Original_OnlineEstimateTitle));
            }
            if ((Original_VehicleStatusDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[201].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[200].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[201].Value = ((string)(Original_VehicleStatusDescription));
            }
            if ((Original_VehicleStatusTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[203].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[202].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[203].Value = ((string)(Original_VehicleStatusTitle));
            }
            if ((Original_RentalCarCompanyPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[205].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[204].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[205].Value = ((string)(Original_RentalCarCompanyPageUrl));
            }
            if ((Original_TowingCompanyPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[207].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[206].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[207].Value = ((string)(Original_TowingCompanyPageUrl));
            }
            if ((Original_ShopNameBackColor == null)) {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[209].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[208].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[209].Value = ((string)(Original_ShopNameBackColor));
            }
            if ((Original_ShopNameFontColor == null)) {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[211].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[210].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[211].Value = ((string)(Original_ShopNameFontColor));
            }
            if ((Original_SendMessageDescription == null)) {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[213].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[212].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[213].Value = ((string)(Original_SendMessageDescription));
            }
            if ((Original_SendMessageTitle == null)) {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[215].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[214].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[215].Value = ((string)(Original_SendMessageTitle));
            }
            if ((Original_ShopBanerImage5 == null)) {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[217].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[216].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[217].Value = ((string)(Original_ShopBanerImage5));
            }
            if ((Original_ShopBanerImage4 == null)) {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[219].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[218].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[219].Value = ((string)(Original_ShopBanerImage4));
            }
            if ((Original_ShopBanerImage3 == null)) {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[221].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[220].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[221].Value = ((string)(Original_ShopBanerImage3));
            }
            if ((Original_ShopBanerImage2 == null)) {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[223].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[222].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[223].Value = ((string)(Original_ShopBanerImage2));
            }
            if ((Original_SetBannerBackgroundColor == null)) {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[225].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[224].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[225].Value = ((string)(Original_SetBannerBackgroundColor));
            }
            if ((Original_TwitterPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[227].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[226].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[227].Value = ((string)(Original_TwitterPageUrl));
            }
            if ((Original_InstagramPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[229].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[228].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[229].Value = ((string)(Original_InstagramPageUrl));
            }
            if ((Original_GooglePlusPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[231].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[230].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[231].Value = ((string)(Original_GooglePlusPageUrl));
            }
            if ((Original_PinterestPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[233].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[232].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[233].Value = ((string)(Original_PinterestPageUrl));
            }
            if ((Original_YouTubePageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[235].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[234].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[235].Value = ((string)(Original_YouTubePageUrl));
            }
            if ((Original_LinkedInPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[237].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[236].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[237].Value = ((string)(Original_LinkedInPageUrl));
            }
            if ((Original_FacebookPageUrl == null)) {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[239].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[238].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[239].Value = ((string)(Original_FacebookPageUrl));
            }
            if ((Original_ShopBannerAlternateText == null)) {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[241].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[240].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[241].Value = ((string)(Original_ShopBannerAlternateText));
            }
            if ((Original_ShopBanner == null)) {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[243].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[242].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[243].Value = ((string)(Original_ShopBanner));
            }
            if ((Original_ShopLogoAlternateText == null)) {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[245].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[244].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[245].Value = ((string)(Original_ShopLogoAlternateText));
            }
            if ((Original_Title == null)) {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[247].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[246].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[247].Value = ((string)(Original_Title));
            }
            if ((Original_PageID == null)) {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[249].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[248].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[249].Value = ((string)(Original_PageID));
            }
            this.Adapter.UpdateCommand.Parameters[250].Value = ((int)(shop_id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string shop_name, 
                    string address1, 
                    string address2, 
                    global::System.Nullable<double> latitude, 
                    global::System.Nullable<double> longitude, 
                    global::System.Nullable<int> ratings, 
                    string city, 
                    string state, 
                    byte[] image_attached, 
                    string zip, 
                    string phone, 
                    string fax, 
                    string email, 
                    string website, 
                    string business_license, 
                    string epa_license, 
                    string bar_license, 
                    string network_name, 
                    string certification_vehicles, 
                    string third_party_providers, 
                    global::System.Nullable<int> positive_ratings, 
                    global::System.Nullable<int> negative_ratings, 
                    string manager, 
                    string system_admin, 
                    string portal_admin_password, 
                    string company_tag_line, 
                    string owner, 
                    global::System.Nullable<int> noPremierShop, 
                    global::System.Nullable<int> noHelpSelection, 
                    global::System.Nullable<bool> isPremierShop, 
                    string image_path, 
                    global::System.Nullable<int> messageCount, 
                    global::System.Nullable<int> availableMessages, 
                    global::System.Nullable<global::System.DateTime> expirationDate, 
                    global::System.Nullable<global::System.DateTime> startDate, 
                    global::System.Nullable<bool> isShow, 
                    string commentsfrequency, 
                    global::System.Nullable<bool> displaycommentonswebapp, 
                    global::System.Nullable<int> subscription_reminder_day, 
                    global::System.Nullable<bool> displaypromoonwebpage, 
                    global::System.Nullable<bool> applyemailtemplate, 
                    global::System.Nullable<bool> isRcintegrationapproved, 
                    global::System.Nullable<bool> IsConsumerConsentApprovedForEmail, 
                    global::System.Nullable<bool> IsConsumerConsentApprovedForSMS, 
                    global::System.Nullable<global::System.DateTime> ConsumerConsentApprovedDateForEmail, 
                    global::System.Nullable<global::System.DateTime> ConsumerConsentApprovedDateForSMS, 
                    string DonloadKeywords, 
                    string DownloadDescription, 
                    string DownloadTitle, 
                    string SpecialPromotionKeywords, 
                    string SpecialPromotionDescription, 
                    string SpecialPromotionTitle, 
                    string ScheduleAppointmentKeywords, 
                    string ScheduleAppointmentDescription, 
                    string ScheduleAppointmentTitle, 
                    string OnlineEstimateKeywords, 
                    string OnlineEstimateDescription, 
                    string OnlineEstimateTitle, 
                    string VehicleStatusKeywords, 
                    string VehicleStatusDescription, 
                    string VehicleStatusTitle, 
                    string RentalCarCompanyPageUrl, 
                    string TowingCompanyPageUrl, 
                    string ShopNameBackColor, 
                    string ShopNameFontColor, 
                    string SendMessageKeywords, 
                    string SendMessageDescription, 
                    string SendMessageTitle, 
                    string ShopBanerImage5, 
                    string ShopBanerImage4, 
                    string ShopBanerImage3, 
                    string ShopBanerImage2, 
                    string SetBannerBackgroundColor, 
                    string TwitterPageUrl, 
                    string InstagramPageUrl, 
                    string GooglePlusPageUrl, 
                    string PinterestPageUrl, 
                    string YouTubePageUrl, 
                    string LinkedInPageUrl, 
                    string FacebookPageUrl, 
                    string ShopBannerAlternateText, 
                    string ShopBanner, 
                    string ShopLogoAlternateText, 
                    string Keyword, 
                    string ShopDescription, 
                    string Title, 
                    string History, 
                    string Speciality, 
                    string content, 
                    string AccessToken, 
                    string PageID, 
                    int Original_shop_id, 
                    string Original_shop_name, 
                    string Original_address1, 
                    string Original_address2, 
                    global::System.Nullable<double> Original_latitude, 
                    global::System.Nullable<double> Original_longitude, 
                    global::System.Nullable<int> Original_ratings, 
                    string Original_city, 
                    string Original_state, 
                    byte[] Original_image_attached, 
                    string Original_zip, 
                    string Original_phone, 
                    string Original_fax, 
                    string Original_email, 
                    string Original_website, 
                    string Original_business_license, 
                    string Original_epa_license, 
                    string Original_bar_license, 
                    string Original_network_name, 
                    string Original_certification_vehicles, 
                    string Original_third_party_providers, 
                    global::System.Nullable<int> Original_positive_ratings, 
                    global::System.Nullable<int> Original_negative_ratings, 
                    string Original_manager, 
                    string Original_system_admin, 
                    string Original_portal_admin_password, 
                    string Original_company_tag_line, 
                    string Original_owner, 
                    global::System.Nullable<int> Original_noPremierShop, 
                    global::System.Nullable<int> Original_noHelpSelection, 
                    global::System.Nullable<bool> Original_isPremierShop, 
                    string Original_image_path, 
                    global::System.Nullable<int> Original_messageCount, 
                    global::System.Nullable<int> Original_availableMessages, 
                    global::System.Nullable<global::System.DateTime> Original_expirationDate, 
                    global::System.Nullable<global::System.DateTime> Original_startDate, 
                    global::System.Nullable<bool> Original_isShow, 
                    string Original_commentsfrequency, 
                    global::System.Nullable<bool> Original_displaycommentonswebapp, 
                    global::System.Nullable<int> Original_subscription_reminder_day, 
                    global::System.Nullable<bool> Original_displaypromoonwebpage, 
                    global::System.Nullable<bool> Original_applyemailtemplate, 
                    global::System.Nullable<bool> Original_isRcintegrationapproved, 
                    global::System.Nullable<bool> Original_IsConsumerConsentApprovedForEmail, 
                    global::System.Nullable<bool> Original_IsConsumerConsentApprovedForSMS, 
                    global::System.Nullable<global::System.DateTime> Original_ConsumerConsentApprovedDateForEmail, 
                    global::System.Nullable<global::System.DateTime> Original_ConsumerConsentApprovedDateForSMS, 
                    string Original_DownloadDescription, 
                    string Original_DownloadTitle, 
                    string Original_SpecialPromotionDescription, 
                    string Original_SpecialPromotionTitle, 
                    string Original_ScheduleAppointmentDescription, 
                    string Original_ScheduleAppointmentTitle, 
                    string Original_OnlineEstimateDescription, 
                    string Original_OnlineEstimateTitle, 
                    string Original_VehicleStatusDescription, 
                    string Original_VehicleStatusTitle, 
                    string Original_RentalCarCompanyPageUrl, 
                    string Original_TowingCompanyPageUrl, 
                    string Original_ShopNameBackColor, 
                    string Original_ShopNameFontColor, 
                    string Original_SendMessageDescription, 
                    string Original_SendMessageTitle, 
                    string Original_ShopBanerImage5, 
                    string Original_ShopBanerImage4, 
                    string Original_ShopBanerImage3, 
                    string Original_ShopBanerImage2, 
                    string Original_SetBannerBackgroundColor, 
                    string Original_TwitterPageUrl, 
                    string Original_InstagramPageUrl, 
                    string Original_GooglePlusPageUrl, 
                    string Original_PinterestPageUrl, 
                    string Original_YouTubePageUrl, 
                    string Original_LinkedInPageUrl, 
                    string Original_FacebookPageUrl, 
                    string Original_ShopBannerAlternateText, 
                    string Original_ShopBanner, 
                    string Original_ShopLogoAlternateText, 
                    string Original_Title, 
                    string Original_PageID) {
            return this.Update(shop_name, address1, address2, latitude, longitude, ratings, city, state, image_attached, zip, phone, fax, email, website, business_license, epa_license, bar_license, network_name, certification_vehicles, third_party_providers, positive_ratings, negative_ratings, manager, system_admin, portal_admin_password, company_tag_line, owner, noPremierShop, noHelpSelection, isPremierShop, image_path, messageCount, availableMessages, expirationDate, startDate, isShow, commentsfrequency, displaycommentonswebapp, subscription_reminder_day, displaypromoonwebpage, applyemailtemplate, isRcintegrationapproved, IsConsumerConsentApprovedForEmail, IsConsumerConsentApprovedForSMS, ConsumerConsentApprovedDateForEmail, ConsumerConsentApprovedDateForSMS, DonloadKeywords, DownloadDescription, DownloadTitle, SpecialPromotionKeywords, SpecialPromotionDescription, SpecialPromotionTitle, ScheduleAppointmentKeywords, ScheduleAppointmentDescription, ScheduleAppointmentTitle, OnlineEstimateKeywords, OnlineEstimateDescription, OnlineEstimateTitle, VehicleStatusKeywords, VehicleStatusDescription, VehicleStatusTitle, RentalCarCompanyPageUrl, TowingCompanyPageUrl, ShopNameBackColor, ShopNameFontColor, SendMessageKeywords, SendMessageDescription, SendMessageTitle, ShopBanerImage5, ShopBanerImage4, ShopBanerImage3, ShopBanerImage2, SetBannerBackgroundColor, TwitterPageUrl, InstagramPageUrl, GooglePlusPageUrl, PinterestPageUrl, YouTubePageUrl, LinkedInPageUrl, FacebookPageUrl, ShopBannerAlternateText, ShopBanner, ShopLogoAlternateText, Keyword, ShopDescription, Title, History, Speciality, content, AccessToken, PageID, Original_shop_id, Original_shop_name, Original_address1, Original_address2, Original_latitude, Original_longitude, Original_ratings, Original_city, Original_state, Original_image_attached, Original_zip, Original_phone, Original_fax, Original_email, Original_website, Original_business_license, Original_epa_license, Original_bar_license, Original_network_name, Original_certification_vehicles, Original_third_party_providers, Original_positive_ratings, Original_negative_ratings, Original_manager, Original_system_admin, Original_portal_admin_password, Original_company_tag_line, Original_owner, Original_noPremierShop, Original_noHelpSelection, Original_isPremierShop, Original_image_path, Original_messageCount, Original_availableMessages, Original_expirationDate, Original_startDate, Original_isShow, Original_commentsfrequency, Original_displaycommentonswebapp, Original_subscription_reminder_day, Original_displaypromoonwebpage, Original_applyemailtemplate, Original_isRcintegrationapproved, Original_IsConsumerConsentApprovedForEmail, Original_IsConsumerConsentApprovedForSMS, Original_ConsumerConsentApprovedDateForEmail, Original_ConsumerConsentApprovedDateForSMS, Original_DownloadDescription, Original_DownloadTitle, Original_SpecialPromotionDescription, Original_SpecialPromotionTitle, Original_ScheduleAppointmentDescription, Original_ScheduleAppointmentTitle, Original_OnlineEstimateDescription, Original_OnlineEstimateTitle, Original_VehicleStatusDescription, Original_VehicleStatusTitle, Original_RentalCarCompanyPageUrl, Original_TowingCompanyPageUrl, Original_ShopNameBackColor, Original_ShopNameFontColor, Original_SendMessageDescription, Original_SendMessageTitle, Original_ShopBanerImage5, Original_ShopBanerImage4, Original_ShopBanerImage3, Original_ShopBanerImage2, Original_SetBannerBackgroundColor, Original_TwitterPageUrl, Original_InstagramPageUrl, Original_GooglePlusPageUrl, Original_PinterestPageUrl, Original_YouTubePageUrl, Original_LinkedInPageUrl, Original_FacebookPageUrl, Original_ShopBannerAlternateText, Original_ShopBanner, Original_ShopLogoAlternateText, Original_Title, Original_PageID, Original_shop_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VehicleStatusTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public VehicleStatusTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VehicleStatus";
            tableMapping.ColumnMappings.Add("VehicleStatusId", "VehicleStatusId");
            tableMapping.ColumnMappings.Add("VehicleStatus", "VehicleStatus");
            tableMapping.ColumnMappings.Add("Message", "Message");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("shop_id", "shop_id");
            tableMapping.ColumnMappings.Add("SMS", "SMS");
            tableMapping.ColumnMappings.Add("Email", "Email");
            tableMapping.ColumnMappings.Add("MoveToMarketing", "MoveToMarketing");
            tableMapping.ColumnMappings.Add("UpdatedVehicleStatusName", "UpdatedVehicleStatusName");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [VehicleStatus] WHERE (([VehicleStatusId] = @Original_VehicleStatusId) AND ([VehicleStatus] = @Original_VehicleStatus) AND ((@IsNull_Message = 1 AND [Message] IS NULL) OR ([Message] = @Original_Message)) AND ((@IsNull_IsActive = 1 AND [IsActive] IS NULL) OR ([IsActive] = @Original_IsActive)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_SMS = 1 AND [SMS] IS NULL) OR ([SMS] = @Original_SMS)) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)) AND ((@IsNull_MoveToMarketing = 1 AND [MoveToMarketing] IS NULL) OR ([MoveToMarketing] = @Original_MoveToMarketing)) AND ((@IsNull_UpdatedVehicleStatusName = 1 AND [UpdatedVehicleStatusName] IS NULL) OR ([UpdatedVehicleStatusName] = @Original_UpdatedVehicleStatusName)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatusId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsActive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MoveToMarketing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveToMarketing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MoveToMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveToMarketing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedVehicleStatusName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedVehicleStatusName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedVehicleStatusName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedVehicleStatusName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [VehicleStatus] ([VehicleStatus], [Message], [IsActive], [shop_id], [SMS], [Email], [MoveToMarketing], [UpdatedVehicleStatusName]) VALUES (@VehicleStatus, @Message, @IsActive, @shop_id, @SMS, @Email, @MoveToMarketing, @UpdatedVehicleStatusName);
SELECT VehicleStatusId, VehicleStatus, Message, IsActive, shop_id, SMS, Email, MoveToMarketing, UpdatedVehicleStatusName FROM VehicleStatus WHERE (VehicleStatusId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoveToMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveToMarketing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedVehicleStatusName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedVehicleStatusName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [VehicleStatus] SET [VehicleStatus] = @VehicleStatus, [Message] = @Message, [IsActive] = @IsActive, [shop_id] = @shop_id, [SMS] = @SMS, [Email] = @Email, [MoveToMarketing] = @MoveToMarketing, [UpdatedVehicleStatusName] = @UpdatedVehicleStatusName WHERE (([VehicleStatusId] = @Original_VehicleStatusId) AND ([VehicleStatus] = @Original_VehicleStatus) AND ((@IsNull_Message = 1 AND [Message] IS NULL) OR ([Message] = @Original_Message)) AND ((@IsNull_IsActive = 1 AND [IsActive] IS NULL) OR ([IsActive] = @Original_IsActive)) AND ((@IsNull_shop_id = 1 AND [shop_id] IS NULL) OR ([shop_id] = @Original_shop_id)) AND ((@IsNull_SMS = 1 AND [SMS] IS NULL) OR ([SMS] = @Original_SMS)) AND ((@IsNull_Email = 1 AND [Email] IS NULL) OR ([Email] = @Original_Email)) AND ((@IsNull_MoveToMarketing = 1 AND [MoveToMarketing] IS NULL) OR ([MoveToMarketing] = @Original_MoveToMarketing)) AND ((@IsNull_UpdatedVehicleStatusName = 1 AND [UpdatedVehicleStatusName] IS NULL) OR ([UpdatedVehicleStatusName] = @Original_UpdatedVehicleStatusName)));
SELECT VehicleStatusId, VehicleStatus, Message, IsActive, shop_id, SMS, Email, MoveToMarketing, UpdatedVehicleStatusName FROM VehicleStatus WHERE (VehicleStatusId = @VehicleStatusId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Email", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MoveToMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveToMarketing", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdatedVehicleStatusName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedVehicleStatusName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatusId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VehicleStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Message", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsActive", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsActive", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsActive", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shop_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Email", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Email", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MoveToMarketing", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveToMarketing", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MoveToMarketing", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MoveToMarketing", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UpdatedVehicleStatusName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedVehicleStatusName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UpdatedVehicleStatusName", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdatedVehicleStatusName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatusId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     VehicleStatusId, VehicleStatus, Message, IsActive, shop_id, SMS, Email" +
                ", MoveToMarketing, UpdatedVehicleStatusName\r\nFROM         VehicleStatus\r\nWHERE  " +
                "   (shop_id = @shopId) AND (VehicleStatus LIKE @VehicleStatus)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VehicleStatus", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Email, IsActive, Message, SMS, VehicleStatus, VehicleStatusId, shop_id" +
                ", MoveToMarketing, UpdatedVehicleStatusName\r\nFROM         VehicleStatus\r\nWHERE  " +
                "   (VehicleStatusId = @Id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "VehicleStatusId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     Email, IsActive, Message, SMS, VehicleStatus, VehicleStatusId, shop_id" +
                ", MoveToMarketing, UpdatedVehicleStatusName\r\nFROM         VehicleStatus\r\nWHERE  " +
                "   (shop_id = @shopId)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "shop_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.VehicleStatusDataTable GetDataByShopIdAndStatus(global::System.Nullable<int> shopId, string VehicleStatus) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((VehicleStatus == null)) {
                throw new global::System.ArgumentNullException("VehicleStatus");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(VehicleStatus));
            }
            SummitDS.VehicleStatusDataTable dataTable = new SummitDS.VehicleStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.VehicleStatusDataTable GetDataById(int Id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Id));
            SummitDS.VehicleStatusDataTable dataTable = new SummitDS.VehicleStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.VehicleStatusDataTable GetDataByShopId(global::System.Nullable<int> shopId) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((shopId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(shopId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SummitDS.VehicleStatusDataTable dataTable = new SummitDS.VehicleStatusDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.VehicleStatusDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "VehicleStatus");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AutoImporterShopsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AutoImporterShopsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AutoImporterShops";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("ShopID", "ShopID");
            tableMapping.ColumnMappings.Add("SyncDateTime", "SyncDateTime");
            tableMapping.ColumnMappings.Add("IsEmailSend", "IsEmailSend");
            tableMapping.ColumnMappings.Add("SendMailDate", "SendMailDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[AutoImporterShops] WHERE (([ID] = @Original_ID) AND ((@IsNull_ShopID = 1 AND [ShopID] IS NULL) OR ([ShopID] = @Original_ShopID)) AND ((@IsNull_SyncDateTime = 1 AND [SyncDateTime] IS NULL) OR ([SyncDateTime] = @Original_SyncDateTime)) AND ((@IsNull_IsEmailSend = 1 AND [IsEmailSend] IS NULL) OR ([IsEmailSend] = @Original_IsEmailSend)) AND ((@IsNull_SendMailDate = 1 AND [SendMailDate] IS NULL) OR ([SendMailDate] = @Original_SendMailDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SyncDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SyncDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SyncDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SyncDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsEmailSend", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsEmailSend", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsEmailSend", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsEmailSend", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendMailDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMailDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendMailDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMailDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[AutoImporterShops] ([ShopID], [SyncDateTime], [IsEmailSend], [SendMailDate]) VALUES (@ShopID, @SyncDateTime, @IsEmailSend, @SendMailDate);
SELECT ID, ShopID, SyncDateTime, IsEmailSend, SendMailDate FROM AutoImporterShops WHERE (ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SyncDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SyncDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsEmailSend", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsEmailSend", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendMailDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMailDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[AutoImporterShops] SET [ShopID] = @ShopID, [SyncDateTime] = @SyncDateTime, [IsEmailSend] = @IsEmailSend, [SendMailDate] = @SendMailDate WHERE (([ID] = @Original_ID) AND ((@IsNull_ShopID = 1 AND [ShopID] IS NULL) OR ([ShopID] = @Original_ShopID)) AND ((@IsNull_SyncDateTime = 1 AND [SyncDateTime] IS NULL) OR ([SyncDateTime] = @Original_SyncDateTime)) AND ((@IsNull_IsEmailSend = 1 AND [IsEmailSend] IS NULL) OR ([IsEmailSend] = @Original_IsEmailSend)) AND ((@IsNull_SendMailDate = 1 AND [SendMailDate] IS NULL) OR ([SendMailDate] = @Original_SendMailDate)));
SELECT ID, ShopID, SyncDateTime, IsEmailSend, SendMailDate FROM AutoImporterShops WHERE (ID = @ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SyncDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SyncDateTime", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsEmailSend", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsEmailSend", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SendMailDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMailDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SyncDateTime", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SyncDateTime", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SyncDateTime", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SyncDateTime", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsEmailSend", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsEmailSend", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsEmailSend", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsEmailSend", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SendMailDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMailDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SendMailDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SendMailDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID, ShopID, SyncDateTime, IsEmailSend, SendMailDate FROM dbo.AutoImporterS" +
                "hops";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ID, IsEmailSend, SendMailDate, ShopID, SyncDateTime FROM AutoImporterShops" +
                " WITH (nolock) WHERE (ShopID = @ShopID)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ID, IsEmailSend, SendMailDate, ShopID, SyncDateTime FROM AutoImporterShops" +
                " WITH (nolock) WHERE (DATEDIFF(day, SyncDateTime, GETDATE()) > 3)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.AutoImporterShopsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.AutoImporterShopsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.AutoImporterShopsDataTable dataTable = new SummitDS.AutoImporterShopsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.AutoImporterShopsDataTable getDataByShopID(global::System.Nullable<int> ShopID) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ShopID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ShopID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            SummitDS.AutoImporterShopsDataTable dataTable = new SummitDS.AutoImporterShopsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.AutoImporterShopsDataTable GetShopIdsByDateDiff() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            SummitDS.AutoImporterShopsDataTable dataTable = new SummitDS.AutoImporterShopsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.AutoImporterShopsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "AutoImporterShops");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID, global::System.Nullable<int> Original_ShopID, global::System.Nullable<global::System.DateTime> Original_SyncDateTime, global::System.Nullable<bool> Original_IsEmailSend, global::System.Nullable<global::System.DateTime> Original_SendMailDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID));
            if ((Original_ShopID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ShopID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_SyncDateTime.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_SyncDateTime.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_IsEmailSend.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_IsEmailSend.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_SendMailDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_SendMailDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> ShopID, global::System.Nullable<global::System.DateTime> SyncDateTime, global::System.Nullable<bool> IsEmailSend, global::System.Nullable<global::System.DateTime> SendMailDate) {
            if ((ShopID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ShopID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SyncDateTime.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(SyncDateTime.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((IsEmailSend.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(IsEmailSend.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SendMailDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(SendMailDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> ShopID, global::System.Nullable<global::System.DateTime> SyncDateTime, global::System.Nullable<bool> IsEmailSend, global::System.Nullable<global::System.DateTime> SendMailDate, int Original_ID, global::System.Nullable<int> Original_ShopID, global::System.Nullable<global::System.DateTime> Original_SyncDateTime, global::System.Nullable<bool> Original_IsEmailSend, global::System.Nullable<global::System.DateTime> Original_SendMailDate, int ID) {
            if ((ShopID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ShopID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SyncDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(SyncDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((IsEmailSend.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(IsEmailSend.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((SendMailDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(SendMailDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID));
            if ((Original_ShopID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ShopID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_SyncDateTime.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_SyncDateTime.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_IsEmailSend.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_IsEmailSend.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_SendMailDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_SendMailDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> ShopID, global::System.Nullable<global::System.DateTime> SyncDateTime, global::System.Nullable<bool> IsEmailSend, global::System.Nullable<global::System.DateTime> SendMailDate, int Original_ID, global::System.Nullable<int> Original_ShopID, global::System.Nullable<global::System.DateTime> Original_SyncDateTime, global::System.Nullable<bool> Original_IsEmailSend, global::System.Nullable<global::System.DateTime> Original_SendMailDate) {
            return this.Update(ShopID, SyncDateTime, IsEmailSend, SendMailDate, Original_ID, Original_ShopID, Original_SyncDateTime, Original_IsEmailSend, Original_SendMailDate, Original_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class User_Audit_TrailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public User_Audit_TrailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "User_Audit_Trail";
            tableMapping.ColumnMappings.Add("id", "id");
            tableMapping.ColumnMappings.Add("user_id", "user_id");
            tableMapping.ColumnMappings.Add("vehicle_id", "vehicle_id");
            tableMapping.ColumnMappings.Add("vehicle_status_id", "vehicle_status_id");
            tableMapping.ColumnMappings.Add("last_updated", "last_updated");
            tableMapping.ColumnMappings.Add("isLastUnsoldStatus", "isLastUnsoldStatus");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[User_Audit_Trail] WHERE (([id] = @Original_id) AND ([user_id] = @Original_user_id) AND ([vehicle_id] = @Original_vehicle_id) AND ([vehicle_status_id] = @Original_vehicle_status_id) AND ([last_updated] = @Original_last_updated) AND ([isLastUnsoldStatus] = @Original_isLastUnsoldStatus))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_status_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_status_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_updated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isLastUnsoldStatus", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isLastUnsoldStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[User_Audit_Trail] ([user_id], [vehicle_id], [vehicle_status_id], [last_updated], [isLastUnsoldStatus]) VALUES (@user_id, @vehicle_id, @vehicle_status_id, @last_updated, @isLastUnsoldStatus);
SELECT id, user_id, vehicle_id, vehicle_status_id, last_updated, isLastUnsoldStatus FROM User_Audit_Trail WHERE (id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_status_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_status_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_updated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isLastUnsoldStatus", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isLastUnsoldStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[User_Audit_Trail] SET [user_id] = @user_id, [vehicle_id] = @vehicle_id, [vehicle_status_id] = @vehicle_status_id, [last_updated] = @last_updated, [isLastUnsoldStatus] = @isLastUnsoldStatus WHERE (([id] = @Original_id) AND ([user_id] = @Original_user_id) AND ([vehicle_id] = @Original_vehicle_id) AND ([vehicle_status_id] = @Original_vehicle_status_id) AND ([last_updated] = @Original_last_updated) AND ([isLastUnsoldStatus] = @Original_isLastUnsoldStatus));
SELECT id, user_id, vehicle_id, vehicle_status_id, last_updated, isLastUnsoldStatus FROM User_Audit_Trail WHERE (id = @id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_status_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_status_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@last_updated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_updated", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isLastUnsoldStatus", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isLastUnsoldStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_user_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_vehicle_status_id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_status_id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_last_updated", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "last_updated", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isLastUnsoldStatus", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isLastUnsoldStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT id, user_id, vehicle_id, vehicle_status_id, last_updated, isLastUnsoldStat" +
                "us FROM dbo.User_Audit_Trail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     id, user_id, vehicle_id, vehicle_status_id, last_updated, isLastUnsold" +
                "Status\r\nFROM         User_Audit_Trail\r\nWHERE     (user_id = @user_id) AND (vehic" +
                "le_id = @vehicle_id) AND (vehicle_status_id = @vehicle_status_id)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@user_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "user_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@vehicle_status_id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "vehicle_status_id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.User_Audit_TrailDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.User_Audit_TrailDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.User_Audit_TrailDataTable dataTable = new SummitDS.User_Audit_TrailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.User_Audit_TrailDataTable GetDataByUserIDVehicleIdAndStatusID(int user_id, int vehicle_id, int vehicle_status_id) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(user_id));
            this.Adapter.SelectCommand.Parameters[1].Value = ((int)(vehicle_id));
            this.Adapter.SelectCommand.Parameters[2].Value = ((int)(vehicle_status_id));
            SummitDS.User_Audit_TrailDataTable dataTable = new SummitDS.User_Audit_TrailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.User_Audit_TrailDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "User_Audit_Trail");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_id, int Original_user_id, int Original_vehicle_id, int Original_vehicle_status_id, System.DateTime Original_last_updated, bool Original_isLastUnsoldStatus) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_user_id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_vehicle_id));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_vehicle_status_id));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_last_updated));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_isLastUnsoldStatus));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int user_id, int vehicle_id, int vehicle_status_id, System.DateTime last_updated, bool isLastUnsoldStatus) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(user_id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(vehicle_id));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(vehicle_status_id));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(last_updated));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(isLastUnsoldStatus));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int user_id, int vehicle_id, int vehicle_status_id, System.DateTime last_updated, bool isLastUnsoldStatus, int Original_id, int Original_user_id, int Original_vehicle_id, int Original_vehicle_status_id, System.DateTime Original_last_updated, bool Original_isLastUnsoldStatus, int id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(user_id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(vehicle_id));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(vehicle_status_id));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(last_updated));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(isLastUnsoldStatus));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_id));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_user_id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_vehicle_id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_vehicle_status_id));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_last_updated));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_isLastUnsoldStatus));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int user_id, int vehicle_id, int vehicle_status_id, System.DateTime last_updated, bool isLastUnsoldStatus, int Original_id, int Original_user_id, int Original_vehicle_id, int Original_vehicle_status_id, System.DateTime Original_last_updated, bool Original_isLastUnsoldStatus) {
            return this.Update(user_id, vehicle_id, vehicle_status_id, last_updated, isLastUnsoldStatus, Original_id, Original_user_id, Original_vehicle_id, Original_vehicle_status_id, Original_last_updated, Original_isLastUnsoldStatus, Original_id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ConnectAPITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ConnectAPITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ConnectAPI";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("ShopId", "ShopId");
            tableMapping.ColumnMappings.Add("PartnerKey", "PartnerKey");
            tableMapping.ColumnMappings.Add("ClientKey", "ClientKey");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("LastSyncDate", "LastSyncDate");
            tableMapping.ColumnMappings.Add("FromDate", "FromDate");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [ConnectAPI] WHERE (([Id] = @Original_Id) AND ([ShopId] = @Original_ShopId) AND ((@IsNull_CreatedDate = 1 AND [CreatedDate] IS NULL) OR ([CreatedDate] = @Original_CreatedDate)) AND ((@IsNull_LastSyncDate = 1 AND [LastSyncDate] IS NULL) OR ([LastSyncDate] = @Original_LastSyncDate)) AND ((@IsNull_FromDate = 1 AND [FromDate] IS NULL) OR ([FromDate] = @Original_FromDate)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSyncDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSyncDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSyncDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSyncDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FromDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ConnectAPI] ([ShopId], [PartnerKey], [ClientKey], [CreatedDate], [LastSyncDate], [FromDate]) VALUES (@ShopId, @PartnerKey, @ClientKey, @CreatedDate, @LastSyncDate, @FromDate);
SELECT Id, ShopId, PartnerKey, ClientKey, CreatedDate, LastSyncDate, FromDate FROM ConnectAPI WHERE (Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PartnerKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartnerKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSyncDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSyncDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ConnectAPI] SET [ShopId] = @ShopId, [PartnerKey] = @PartnerKey, [ClientKey] = @ClientKey, [CreatedDate] = @CreatedDate, [LastSyncDate] = @LastSyncDate, [FromDate] = @FromDate WHERE (([Id] = @Original_Id) AND ([ShopId] = @Original_ShopId) AND ((@IsNull_CreatedDate = 1 AND [CreatedDate] IS NULL) OR ([CreatedDate] = @Original_CreatedDate)) AND ((@IsNull_LastSyncDate = 1 AND [LastSyncDate] IS NULL) OR ([LastSyncDate] = @Original_LastSyncDate)) AND ((@IsNull_FromDate = 1 AND [FromDate] IS NULL) OR ([FromDate] = @Original_FromDate)));
SELECT Id, ShopId, PartnerKey, ClientKey, CreatedDate, LastSyncDate, FromDate FROM ConnectAPI WHERE (Id = @Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PartnerKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PartnerKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ClientKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ClientKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LastSyncDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSyncDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CreatedDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CreatedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreatedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LastSyncDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSyncDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LastSyncDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LastSyncDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FromDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FromDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FromDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::SummitShopApp.DAL.Properties.Settings.Default.SummitConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Id, ShopId, PartnerKey, ClientKey, CreatedDate, LastSyncDate, FromD" +
                "ate\r\nFROM            ConnectAPI";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ClientKey, CreatedDate, FromDate, Id, LastSyncDate, PartnerKey, ShopId FRO" +
                "M ConnectAPI WHERE (ShopId = @ShopId)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ShopId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SummitDS.ConnectAPIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SummitDS.ConnectAPIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SummitDS.ConnectAPIDataTable dataTable = new SummitDS.ConnectAPIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SummitDS.ConnectAPIDataTable GetDataByShopId(int ShopId) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ShopId));
            SummitDS.ConnectAPIDataTable dataTable = new SummitDS.ConnectAPIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS.ConnectAPIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SummitDS dataSet) {
            return this.Adapter.Update(dataSet, "ConnectAPI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Id, int Original_ShopId, global::System.Nullable<global::System.DateTime> Original_CreatedDate, global::System.Nullable<global::System.DateTime> Original_LastSyncDate, global::System.Nullable<global::System.DateTime> Original_FromDate) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ShopId));
            if ((Original_CreatedDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_CreatedDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSyncDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_LastSyncDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_FromDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_FromDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ShopId, string PartnerKey, string ClientKey, global::System.Nullable<global::System.DateTime> CreatedDate, global::System.Nullable<global::System.DateTime> LastSyncDate, global::System.Nullable<global::System.DateTime> FromDate) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ShopId));
            if ((PartnerKey == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PartnerKey));
            }
            if ((ClientKey == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ClientKey));
            }
            if ((CreatedDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(CreatedDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LastSyncDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(LastSyncDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ShopId, string PartnerKey, string ClientKey, global::System.Nullable<global::System.DateTime> CreatedDate, global::System.Nullable<global::System.DateTime> LastSyncDate, global::System.Nullable<global::System.DateTime> FromDate, int Original_Id, int Original_ShopId, global::System.Nullable<global::System.DateTime> Original_CreatedDate, global::System.Nullable<global::System.DateTime> Original_LastSyncDate, global::System.Nullable<global::System.DateTime> Original_FromDate, int Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ShopId));
            if ((PartnerKey == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PartnerKey));
            }
            if ((ClientKey == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ClientKey));
            }
            if ((CreatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(CreatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LastSyncDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(LastSyncDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((FromDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ShopId));
            if ((Original_CreatedDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_CreatedDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_LastSyncDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_LastSyncDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_FromDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_FromDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ShopId, string PartnerKey, string ClientKey, global::System.Nullable<global::System.DateTime> CreatedDate, global::System.Nullable<global::System.DateTime> LastSyncDate, global::System.Nullable<global::System.DateTime> FromDate, int Original_Id, int Original_ShopId, global::System.Nullable<global::System.DateTime> Original_CreatedDate, global::System.Nullable<global::System.DateTime> Original_LastSyncDate, global::System.Nullable<global::System.DateTime> Original_FromDate) {
            return this.Update(ShopId, PartnerKey, ClientKey, CreatedDate, LastSyncDate, FromDate, Original_Id, Original_ShopId, Original_CreatedDate, Original_LastSyncDate, Original_FromDate, Original_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private AccidentReportTableAdapter _accidentReportTableAdapter;
        
        private VehicleInfoTableAdapter _vehicleInfoTableAdapter;
        
        private InsuranceInformationTableAdapter _insuranceInformationTableAdapter;
        
        private MessageTableAdapter _messageTableAdapter;
        
        private UserTableAdapter _userTableAdapter;
        
        private User_PreferredShopTableAdapter _user_PreferredShopTableAdapter;
        
        private ZipCodeTableAdapter _zipCodeTableAdapter;
        
        private UnreadUsersFromRepairProspectTableAdapter _unreadUsersFromRepairProspectTableAdapter;
        
        private DeletedUsersFromRepairProspectTableAdapter _deletedUsersFromRepairProspectTableAdapter;
        
        private MarketingUsersTableAdapter _marketingUsersTableAdapter;
        
        private CampaignTableAdapter _campaignTableAdapter;
        
        private CommunicationHistoryTableAdapter _communicationHistoryTableAdapter;
        
        private LoginTableAdapter _loginTableAdapter;
        
        private VehicleMediaLinkTableAdapter _vehicleMediaLinkTableAdapter;
        
        private UserVehicleStatusTableAdapter _userVehicleStatusTableAdapter;
        
        private ScheduledUsersTableAdapter _scheduledUsersTableAdapter;
        
        private ReocurringCampaignUsersTableAdapter _reocurringCampaignUsersTableAdapter;
        
        private FrequencyTableAdapter _frequencyTableAdapter;
        
        private AIManageRecurringActivityTableAdapter _aIManageRecurringActivityTableAdapter;
        
        private BodyShopTableAdapter _bodyShopTableAdapter;
        
        private VehicleStatusTableAdapter _vehicleStatusTableAdapter;
        
        private AutoImporterShopsTableAdapter _autoImporterShopsTableAdapter;
        
        private User_Audit_TrailTableAdapter _user_Audit_TrailTableAdapter;
        
        private ConnectAPITableAdapter _connectAPITableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public AccidentReportTableAdapter AccidentReportTableAdapter {
            get {
                return this._accidentReportTableAdapter;
            }
            set {
                this._accidentReportTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public VehicleInfoTableAdapter VehicleInfoTableAdapter {
            get {
                return this._vehicleInfoTableAdapter;
            }
            set {
                this._vehicleInfoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public InsuranceInformationTableAdapter InsuranceInformationTableAdapter {
            get {
                return this._insuranceInformationTableAdapter;
            }
            set {
                this._insuranceInformationTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MessageTableAdapter MessageTableAdapter {
            get {
                return this._messageTableAdapter;
            }
            set {
                this._messageTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UserTableAdapter UserTableAdapter {
            get {
                return this._userTableAdapter;
            }
            set {
                this._userTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public User_PreferredShopTableAdapter User_PreferredShopTableAdapter {
            get {
                return this._user_PreferredShopTableAdapter;
            }
            set {
                this._user_PreferredShopTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ZipCodeTableAdapter ZipCodeTableAdapter {
            get {
                return this._zipCodeTableAdapter;
            }
            set {
                this._zipCodeTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UnreadUsersFromRepairProspectTableAdapter UnreadUsersFromRepairProspectTableAdapter {
            get {
                return this._unreadUsersFromRepairProspectTableAdapter;
            }
            set {
                this._unreadUsersFromRepairProspectTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DeletedUsersFromRepairProspectTableAdapter DeletedUsersFromRepairProspectTableAdapter {
            get {
                return this._deletedUsersFromRepairProspectTableAdapter;
            }
            set {
                this._deletedUsersFromRepairProspectTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public MarketingUsersTableAdapter MarketingUsersTableAdapter {
            get {
                return this._marketingUsersTableAdapter;
            }
            set {
                this._marketingUsersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CampaignTableAdapter CampaignTableAdapter {
            get {
                return this._campaignTableAdapter;
            }
            set {
                this._campaignTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public CommunicationHistoryTableAdapter CommunicationHistoryTableAdapter {
            get {
                return this._communicationHistoryTableAdapter;
            }
            set {
                this._communicationHistoryTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LoginTableAdapter LoginTableAdapter {
            get {
                return this._loginTableAdapter;
            }
            set {
                this._loginTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public VehicleMediaLinkTableAdapter VehicleMediaLinkTableAdapter {
            get {
                return this._vehicleMediaLinkTableAdapter;
            }
            set {
                this._vehicleMediaLinkTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public UserVehicleStatusTableAdapter UserVehicleStatusTableAdapter {
            get {
                return this._userVehicleStatusTableAdapter;
            }
            set {
                this._userVehicleStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ScheduledUsersTableAdapter ScheduledUsersTableAdapter {
            get {
                return this._scheduledUsersTableAdapter;
            }
            set {
                this._scheduledUsersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ReocurringCampaignUsersTableAdapter ReocurringCampaignUsersTableAdapter {
            get {
                return this._reocurringCampaignUsersTableAdapter;
            }
            set {
                this._reocurringCampaignUsersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public FrequencyTableAdapter FrequencyTableAdapter {
            get {
                return this._frequencyTableAdapter;
            }
            set {
                this._frequencyTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public AIManageRecurringActivityTableAdapter AIManageRecurringActivityTableAdapter {
            get {
                return this._aIManageRecurringActivityTableAdapter;
            }
            set {
                this._aIManageRecurringActivityTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public BodyShopTableAdapter BodyShopTableAdapter {
            get {
                return this._bodyShopTableAdapter;
            }
            set {
                this._bodyShopTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public VehicleStatusTableAdapter VehicleStatusTableAdapter {
            get {
                return this._vehicleStatusTableAdapter;
            }
            set {
                this._vehicleStatusTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public AutoImporterShopsTableAdapter AutoImporterShopsTableAdapter {
            get {
                return this._autoImporterShopsTableAdapter;
            }
            set {
                this._autoImporterShopsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public User_Audit_TrailTableAdapter User_Audit_TrailTableAdapter {
            get {
                return this._user_Audit_TrailTableAdapter;
            }
            set {
                this._user_Audit_TrailTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ConnectAPITableAdapter ConnectAPITableAdapter {
            get {
                return this._connectAPITableAdapter;
            }
            set {
                this._connectAPITableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._accidentReportTableAdapter != null) 
                            && (this._accidentReportTableAdapter.Connection != null))) {
                    return this._accidentReportTableAdapter.Connection;
                }
                if (((this._vehicleInfoTableAdapter != null) 
                            && (this._vehicleInfoTableAdapter.Connection != null))) {
                    return this._vehicleInfoTableAdapter.Connection;
                }
                if (((this._insuranceInformationTableAdapter != null) 
                            && (this._insuranceInformationTableAdapter.Connection != null))) {
                    return this._insuranceInformationTableAdapter.Connection;
                }
                if (((this._messageTableAdapter != null) 
                            && (this._messageTableAdapter.Connection != null))) {
                    return this._messageTableAdapter.Connection;
                }
                if (((this._userTableAdapter != null) 
                            && (this._userTableAdapter.Connection != null))) {
                    return this._userTableAdapter.Connection;
                }
                if (((this._user_PreferredShopTableAdapter != null) 
                            && (this._user_PreferredShopTableAdapter.Connection != null))) {
                    return this._user_PreferredShopTableAdapter.Connection;
                }
                if (((this._zipCodeTableAdapter != null) 
                            && (this._zipCodeTableAdapter.Connection != null))) {
                    return this._zipCodeTableAdapter.Connection;
                }
                if (((this._unreadUsersFromRepairProspectTableAdapter != null) 
                            && (this._unreadUsersFromRepairProspectTableAdapter.Connection != null))) {
                    return this._unreadUsersFromRepairProspectTableAdapter.Connection;
                }
                if (((this._deletedUsersFromRepairProspectTableAdapter != null) 
                            && (this._deletedUsersFromRepairProspectTableAdapter.Connection != null))) {
                    return this._deletedUsersFromRepairProspectTableAdapter.Connection;
                }
                if (((this._marketingUsersTableAdapter != null) 
                            && (this._marketingUsersTableAdapter.Connection != null))) {
                    return this._marketingUsersTableAdapter.Connection;
                }
                if (((this._campaignTableAdapter != null) 
                            && (this._campaignTableAdapter.Connection != null))) {
                    return this._campaignTableAdapter.Connection;
                }
                if (((this._communicationHistoryTableAdapter != null) 
                            && (this._communicationHistoryTableAdapter.Connection != null))) {
                    return this._communicationHistoryTableAdapter.Connection;
                }
                if (((this._loginTableAdapter != null) 
                            && (this._loginTableAdapter.Connection != null))) {
                    return this._loginTableAdapter.Connection;
                }
                if (((this._vehicleMediaLinkTableAdapter != null) 
                            && (this._vehicleMediaLinkTableAdapter.Connection != null))) {
                    return this._vehicleMediaLinkTableAdapter.Connection;
                }
                if (((this._userVehicleStatusTableAdapter != null) 
                            && (this._userVehicleStatusTableAdapter.Connection != null))) {
                    return this._userVehicleStatusTableAdapter.Connection;
                }
                if (((this._scheduledUsersTableAdapter != null) 
                            && (this._scheduledUsersTableAdapter.Connection != null))) {
                    return this._scheduledUsersTableAdapter.Connection;
                }
                if (((this._reocurringCampaignUsersTableAdapter != null) 
                            && (this._reocurringCampaignUsersTableAdapter.Connection != null))) {
                    return this._reocurringCampaignUsersTableAdapter.Connection;
                }
                if (((this._frequencyTableAdapter != null) 
                            && (this._frequencyTableAdapter.Connection != null))) {
                    return this._frequencyTableAdapter.Connection;
                }
                if (((this._aIManageRecurringActivityTableAdapter != null) 
                            && (this._aIManageRecurringActivityTableAdapter.Connection != null))) {
                    return this._aIManageRecurringActivityTableAdapter.Connection;
                }
                if (((this._bodyShopTableAdapter != null) 
                            && (this._bodyShopTableAdapter.Connection != null))) {
                    return this._bodyShopTableAdapter.Connection;
                }
                if (((this._vehicleStatusTableAdapter != null) 
                            && (this._vehicleStatusTableAdapter.Connection != null))) {
                    return this._vehicleStatusTableAdapter.Connection;
                }
                if (((this._autoImporterShopsTableAdapter != null) 
                            && (this._autoImporterShopsTableAdapter.Connection != null))) {
                    return this._autoImporterShopsTableAdapter.Connection;
                }
                if (((this._user_Audit_TrailTableAdapter != null) 
                            && (this._user_Audit_TrailTableAdapter.Connection != null))) {
                    return this._user_Audit_TrailTableAdapter.Connection;
                }
                if (((this._connectAPITableAdapter != null) 
                            && (this._connectAPITableAdapter.Connection != null))) {
                    return this._connectAPITableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._accidentReportTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vehicleInfoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._insuranceInformationTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._messageTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._userTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._user_PreferredShopTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._zipCodeTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._unreadUsersFromRepairProspectTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._deletedUsersFromRepairProspectTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._marketingUsersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._campaignTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._communicationHistoryTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._loginTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vehicleMediaLinkTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._userVehicleStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._scheduledUsersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._reocurringCampaignUsersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._frequencyTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._aIManageRecurringActivityTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bodyShopTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vehicleStatusTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._autoImporterShopsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._user_Audit_TrailTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._connectAPITableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(SummitDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._userTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.User.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._userTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bodyShopTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BodyShop.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bodyShopTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._frequencyTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Frequency.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._frequencyTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._loginTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Login.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._loginTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vehicleInfoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VehicleInfo.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vehicleInfoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._messageTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Message.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._messageTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._scheduledUsersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ScheduledUsers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._scheduledUsersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._connectAPITableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ConnectAPI.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._connectAPITableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vehicleMediaLinkTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VehicleMediaLink.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vehicleMediaLinkTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._userVehicleStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UserVehicleStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._userVehicleStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vehicleStatusTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VehicleStatus.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vehicleStatusTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._autoImporterShopsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AutoImporterShops.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._autoImporterShopsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._user_Audit_TrailTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.User_Audit_Trail.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._user_Audit_TrailTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._reocurringCampaignUsersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ReocurringCampaignUsers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._reocurringCampaignUsersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._aIManageRecurringActivityTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AIManageRecurringActivity.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aIManageRecurringActivityTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._zipCodeTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ZipCode.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._zipCodeTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._unreadUsersFromRepairProspectTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UnreadUsersFromRepairProspect.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._unreadUsersFromRepairProspectTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._deletedUsersFromRepairProspectTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DeletedUsersFromRepairProspect.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._deletedUsersFromRepairProspectTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._accidentReportTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.AccidentReport.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._accidentReportTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._insuranceInformationTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.InsuranceInformation.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._insuranceInformationTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._user_PreferredShopTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.User_PreferredShop.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._user_PreferredShopTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._marketingUsersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MarketingUsers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._marketingUsersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._campaignTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Campaign.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._campaignTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._communicationHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CommunicationHistory.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._communicationHistoryTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(SummitDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._userTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.User.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._userTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bodyShopTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BodyShop.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bodyShopTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._frequencyTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Frequency.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._frequencyTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._loginTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Login.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._loginTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vehicleInfoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VehicleInfo.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vehicleInfoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._messageTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Message.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._messageTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._scheduledUsersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ScheduledUsers.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._scheduledUsersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._connectAPITableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ConnectAPI.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._connectAPITableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vehicleMediaLinkTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VehicleMediaLink.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vehicleMediaLinkTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._userVehicleStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UserVehicleStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._userVehicleStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vehicleStatusTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VehicleStatus.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vehicleStatusTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._autoImporterShopsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AutoImporterShops.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._autoImporterShopsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._user_Audit_TrailTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.User_Audit_Trail.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._user_Audit_TrailTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._reocurringCampaignUsersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ReocurringCampaignUsers.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._reocurringCampaignUsersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._aIManageRecurringActivityTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AIManageRecurringActivity.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aIManageRecurringActivityTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._zipCodeTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ZipCode.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._zipCodeTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._unreadUsersFromRepairProspectTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UnreadUsersFromRepairProspect.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._unreadUsersFromRepairProspectTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._deletedUsersFromRepairProspectTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DeletedUsersFromRepairProspect.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._deletedUsersFromRepairProspectTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._accidentReportTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.AccidentReport.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._accidentReportTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._insuranceInformationTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.InsuranceInformation.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._insuranceInformationTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._user_PreferredShopTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.User_PreferredShop.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._user_PreferredShopTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._marketingUsersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MarketingUsers.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._marketingUsersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._campaignTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Campaign.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._campaignTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._communicationHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CommunicationHistory.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._communicationHistoryTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(SummitDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._communicationHistoryTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CommunicationHistory.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._communicationHistoryTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._campaignTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Campaign.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._campaignTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._marketingUsersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MarketingUsers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._marketingUsersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._user_PreferredShopTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.User_PreferredShop.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._user_PreferredShopTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._insuranceInformationTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.InsuranceInformation.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._insuranceInformationTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._accidentReportTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AccidentReport.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._accidentReportTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._deletedUsersFromRepairProspectTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DeletedUsersFromRepairProspect.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._deletedUsersFromRepairProspectTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._unreadUsersFromRepairProspectTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UnreadUsersFromRepairProspect.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._unreadUsersFromRepairProspectTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._zipCodeTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ZipCode.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._zipCodeTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aIManageRecurringActivityTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AIManageRecurringActivity.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aIManageRecurringActivityTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._reocurringCampaignUsersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ReocurringCampaignUsers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._reocurringCampaignUsersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._user_Audit_TrailTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.User_Audit_Trail.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._user_Audit_TrailTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._autoImporterShopsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.AutoImporterShops.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._autoImporterShopsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vehicleStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VehicleStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vehicleStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._userVehicleStatusTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UserVehicleStatus.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._userVehicleStatusTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vehicleMediaLinkTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VehicleMediaLink.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vehicleMediaLinkTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._connectAPITableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ConnectAPI.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._connectAPITableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._scheduledUsersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ScheduledUsers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._scheduledUsersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._messageTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Message.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._messageTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vehicleInfoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VehicleInfo.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vehicleInfoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._loginTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Login.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._loginTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._frequencyTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Frequency.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._frequencyTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bodyShopTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BodyShop.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bodyShopTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._userTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.User.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._userTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(SummitDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._accidentReportTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._accidentReportTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._vehicleInfoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vehicleInfoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._insuranceInformationTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._insuranceInformationTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._messageTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._messageTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._userTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._userTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._user_PreferredShopTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._user_PreferredShopTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._zipCodeTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._zipCodeTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._unreadUsersFromRepairProspectTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._unreadUsersFromRepairProspectTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._deletedUsersFromRepairProspectTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._deletedUsersFromRepairProspectTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._marketingUsersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._marketingUsersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._campaignTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._campaignTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._communicationHistoryTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._communicationHistoryTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._loginTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._loginTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._vehicleMediaLinkTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vehicleMediaLinkTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._userVehicleStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._userVehicleStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._scheduledUsersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._scheduledUsersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._reocurringCampaignUsersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._reocurringCampaignUsersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._frequencyTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._frequencyTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._aIManageRecurringActivityTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aIManageRecurringActivityTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._bodyShopTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bodyShopTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._vehicleStatusTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vehicleStatusTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._autoImporterShopsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._autoImporterShopsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._user_Audit_TrailTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._user_Audit_TrailTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._connectAPITableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._connectAPITableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._accidentReportTableAdapter != null)) {
                    revertConnections.Add(this._accidentReportTableAdapter, this._accidentReportTableAdapter.Connection);
                    this._accidentReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._accidentReportTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._accidentReportTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._accidentReportTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._accidentReportTableAdapter.Adapter);
                    }
                }
                if ((this._vehicleInfoTableAdapter != null)) {
                    revertConnections.Add(this._vehicleInfoTableAdapter, this._vehicleInfoTableAdapter.Connection);
                    this._vehicleInfoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vehicleInfoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vehicleInfoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vehicleInfoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vehicleInfoTableAdapter.Adapter);
                    }
                }
                if ((this._insuranceInformationTableAdapter != null)) {
                    revertConnections.Add(this._insuranceInformationTableAdapter, this._insuranceInformationTableAdapter.Connection);
                    this._insuranceInformationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._insuranceInformationTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._insuranceInformationTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._insuranceInformationTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._insuranceInformationTableAdapter.Adapter);
                    }
                }
                if ((this._messageTableAdapter != null)) {
                    revertConnections.Add(this._messageTableAdapter, this._messageTableAdapter.Connection);
                    this._messageTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._messageTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._messageTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._messageTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._messageTableAdapter.Adapter);
                    }
                }
                if ((this._userTableAdapter != null)) {
                    revertConnections.Add(this._userTableAdapter, this._userTableAdapter.Connection);
                    this._userTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._userTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._userTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._userTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._userTableAdapter.Adapter);
                    }
                }
                if ((this._user_PreferredShopTableAdapter != null)) {
                    revertConnections.Add(this._user_PreferredShopTableAdapter, this._user_PreferredShopTableAdapter.Connection);
                    this._user_PreferredShopTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._user_PreferredShopTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._user_PreferredShopTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._user_PreferredShopTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._user_PreferredShopTableAdapter.Adapter);
                    }
                }
                if ((this._zipCodeTableAdapter != null)) {
                    revertConnections.Add(this._zipCodeTableAdapter, this._zipCodeTableAdapter.Connection);
                    this._zipCodeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._zipCodeTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._zipCodeTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._zipCodeTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._zipCodeTableAdapter.Adapter);
                    }
                }
                if ((this._unreadUsersFromRepairProspectTableAdapter != null)) {
                    revertConnections.Add(this._unreadUsersFromRepairProspectTableAdapter, this._unreadUsersFromRepairProspectTableAdapter.Connection);
                    this._unreadUsersFromRepairProspectTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._unreadUsersFromRepairProspectTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._unreadUsersFromRepairProspectTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._unreadUsersFromRepairProspectTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._unreadUsersFromRepairProspectTableAdapter.Adapter);
                    }
                }
                if ((this._deletedUsersFromRepairProspectTableAdapter != null)) {
                    revertConnections.Add(this._deletedUsersFromRepairProspectTableAdapter, this._deletedUsersFromRepairProspectTableAdapter.Connection);
                    this._deletedUsersFromRepairProspectTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._deletedUsersFromRepairProspectTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._deletedUsersFromRepairProspectTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._deletedUsersFromRepairProspectTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._deletedUsersFromRepairProspectTableAdapter.Adapter);
                    }
                }
                if ((this._marketingUsersTableAdapter != null)) {
                    revertConnections.Add(this._marketingUsersTableAdapter, this._marketingUsersTableAdapter.Connection);
                    this._marketingUsersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._marketingUsersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._marketingUsersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._marketingUsersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._marketingUsersTableAdapter.Adapter);
                    }
                }
                if ((this._campaignTableAdapter != null)) {
                    revertConnections.Add(this._campaignTableAdapter, this._campaignTableAdapter.Connection);
                    this._campaignTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._campaignTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._campaignTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._campaignTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._campaignTableAdapter.Adapter);
                    }
                }
                if ((this._communicationHistoryTableAdapter != null)) {
                    revertConnections.Add(this._communicationHistoryTableAdapter, this._communicationHistoryTableAdapter.Connection);
                    this._communicationHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._communicationHistoryTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._communicationHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._communicationHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._communicationHistoryTableAdapter.Adapter);
                    }
                }
                if ((this._loginTableAdapter != null)) {
                    revertConnections.Add(this._loginTableAdapter, this._loginTableAdapter.Connection);
                    this._loginTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._loginTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._loginTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._loginTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._loginTableAdapter.Adapter);
                    }
                }
                if ((this._vehicleMediaLinkTableAdapter != null)) {
                    revertConnections.Add(this._vehicleMediaLinkTableAdapter, this._vehicleMediaLinkTableAdapter.Connection);
                    this._vehicleMediaLinkTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vehicleMediaLinkTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vehicleMediaLinkTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vehicleMediaLinkTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vehicleMediaLinkTableAdapter.Adapter);
                    }
                }
                if ((this._userVehicleStatusTableAdapter != null)) {
                    revertConnections.Add(this._userVehicleStatusTableAdapter, this._userVehicleStatusTableAdapter.Connection);
                    this._userVehicleStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._userVehicleStatusTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._userVehicleStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._userVehicleStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._userVehicleStatusTableAdapter.Adapter);
                    }
                }
                if ((this._scheduledUsersTableAdapter != null)) {
                    revertConnections.Add(this._scheduledUsersTableAdapter, this._scheduledUsersTableAdapter.Connection);
                    this._scheduledUsersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._scheduledUsersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._scheduledUsersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._scheduledUsersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._scheduledUsersTableAdapter.Adapter);
                    }
                }
                if ((this._reocurringCampaignUsersTableAdapter != null)) {
                    revertConnections.Add(this._reocurringCampaignUsersTableAdapter, this._reocurringCampaignUsersTableAdapter.Connection);
                    this._reocurringCampaignUsersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._reocurringCampaignUsersTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._reocurringCampaignUsersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._reocurringCampaignUsersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._reocurringCampaignUsersTableAdapter.Adapter);
                    }
                }
                if ((this._frequencyTableAdapter != null)) {
                    revertConnections.Add(this._frequencyTableAdapter, this._frequencyTableAdapter.Connection);
                    this._frequencyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._frequencyTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._frequencyTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._frequencyTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._frequencyTableAdapter.Adapter);
                    }
                }
                if ((this._aIManageRecurringActivityTableAdapter != null)) {
                    revertConnections.Add(this._aIManageRecurringActivityTableAdapter, this._aIManageRecurringActivityTableAdapter.Connection);
                    this._aIManageRecurringActivityTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aIManageRecurringActivityTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aIManageRecurringActivityTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aIManageRecurringActivityTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aIManageRecurringActivityTableAdapter.Adapter);
                    }
                }
                if ((this._bodyShopTableAdapter != null)) {
                    revertConnections.Add(this._bodyShopTableAdapter, this._bodyShopTableAdapter.Connection);
                    this._bodyShopTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bodyShopTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bodyShopTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bodyShopTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bodyShopTableAdapter.Adapter);
                    }
                }
                if ((this._vehicleStatusTableAdapter != null)) {
                    revertConnections.Add(this._vehicleStatusTableAdapter, this._vehicleStatusTableAdapter.Connection);
                    this._vehicleStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vehicleStatusTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vehicleStatusTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vehicleStatusTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vehicleStatusTableAdapter.Adapter);
                    }
                }
                if ((this._autoImporterShopsTableAdapter != null)) {
                    revertConnections.Add(this._autoImporterShopsTableAdapter, this._autoImporterShopsTableAdapter.Connection);
                    this._autoImporterShopsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._autoImporterShopsTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._autoImporterShopsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._autoImporterShopsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._autoImporterShopsTableAdapter.Adapter);
                    }
                }
                if ((this._user_Audit_TrailTableAdapter != null)) {
                    revertConnections.Add(this._user_Audit_TrailTableAdapter, this._user_Audit_TrailTableAdapter.Connection);
                    this._user_Audit_TrailTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._user_Audit_TrailTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._user_Audit_TrailTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._user_Audit_TrailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._user_Audit_TrailTableAdapter.Adapter);
                    }
                }
                if ((this._connectAPITableAdapter != null)) {
                    revertConnections.Add(this._connectAPITableAdapter, this._connectAPITableAdapter.Connection);
                    this._connectAPITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._connectAPITableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._connectAPITableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._connectAPITableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._connectAPITableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._accidentReportTableAdapter != null)) {
                    this._accidentReportTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._accidentReportTableAdapter]));
                    this._accidentReportTableAdapter.Transaction = null;
                }
                if ((this._vehicleInfoTableAdapter != null)) {
                    this._vehicleInfoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vehicleInfoTableAdapter]));
                    this._vehicleInfoTableAdapter.Transaction = null;
                }
                if ((this._insuranceInformationTableAdapter != null)) {
                    this._insuranceInformationTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._insuranceInformationTableAdapter]));
                    this._insuranceInformationTableAdapter.Transaction = null;
                }
                if ((this._messageTableAdapter != null)) {
                    this._messageTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._messageTableAdapter]));
                    this._messageTableAdapter.Transaction = null;
                }
                if ((this._userTableAdapter != null)) {
                    this._userTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._userTableAdapter]));
                    this._userTableAdapter.Transaction = null;
                }
                if ((this._user_PreferredShopTableAdapter != null)) {
                    this._user_PreferredShopTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._user_PreferredShopTableAdapter]));
                    this._user_PreferredShopTableAdapter.Transaction = null;
                }
                if ((this._zipCodeTableAdapter != null)) {
                    this._zipCodeTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._zipCodeTableAdapter]));
                    this._zipCodeTableAdapter.Transaction = null;
                }
                if ((this._unreadUsersFromRepairProspectTableAdapter != null)) {
                    this._unreadUsersFromRepairProspectTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._unreadUsersFromRepairProspectTableAdapter]));
                    this._unreadUsersFromRepairProspectTableAdapter.Transaction = null;
                }
                if ((this._deletedUsersFromRepairProspectTableAdapter != null)) {
                    this._deletedUsersFromRepairProspectTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._deletedUsersFromRepairProspectTableAdapter]));
                    this._deletedUsersFromRepairProspectTableAdapter.Transaction = null;
                }
                if ((this._marketingUsersTableAdapter != null)) {
                    this._marketingUsersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._marketingUsersTableAdapter]));
                    this._marketingUsersTableAdapter.Transaction = null;
                }
                if ((this._campaignTableAdapter != null)) {
                    this._campaignTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._campaignTableAdapter]));
                    this._campaignTableAdapter.Transaction = null;
                }
                if ((this._communicationHistoryTableAdapter != null)) {
                    this._communicationHistoryTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._communicationHistoryTableAdapter]));
                    this._communicationHistoryTableAdapter.Transaction = null;
                }
                if ((this._loginTableAdapter != null)) {
                    this._loginTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._loginTableAdapter]));
                    this._loginTableAdapter.Transaction = null;
                }
                if ((this._vehicleMediaLinkTableAdapter != null)) {
                    this._vehicleMediaLinkTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vehicleMediaLinkTableAdapter]));
                    this._vehicleMediaLinkTableAdapter.Transaction = null;
                }
                if ((this._userVehicleStatusTableAdapter != null)) {
                    this._userVehicleStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._userVehicleStatusTableAdapter]));
                    this._userVehicleStatusTableAdapter.Transaction = null;
                }
                if ((this._scheduledUsersTableAdapter != null)) {
                    this._scheduledUsersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._scheduledUsersTableAdapter]));
                    this._scheduledUsersTableAdapter.Transaction = null;
                }
                if ((this._reocurringCampaignUsersTableAdapter != null)) {
                    this._reocurringCampaignUsersTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._reocurringCampaignUsersTableAdapter]));
                    this._reocurringCampaignUsersTableAdapter.Transaction = null;
                }
                if ((this._frequencyTableAdapter != null)) {
                    this._frequencyTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._frequencyTableAdapter]));
                    this._frequencyTableAdapter.Transaction = null;
                }
                if ((this._aIManageRecurringActivityTableAdapter != null)) {
                    this._aIManageRecurringActivityTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aIManageRecurringActivityTableAdapter]));
                    this._aIManageRecurringActivityTableAdapter.Transaction = null;
                }
                if ((this._bodyShopTableAdapter != null)) {
                    this._bodyShopTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bodyShopTableAdapter]));
                    this._bodyShopTableAdapter.Transaction = null;
                }
                if ((this._vehicleStatusTableAdapter != null)) {
                    this._vehicleStatusTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vehicleStatusTableAdapter]));
                    this._vehicleStatusTableAdapter.Transaction = null;
                }
                if ((this._autoImporterShopsTableAdapter != null)) {
                    this._autoImporterShopsTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._autoImporterShopsTableAdapter]));
                    this._autoImporterShopsTableAdapter.Transaction = null;
                }
                if ((this._user_Audit_TrailTableAdapter != null)) {
                    this._user_Audit_TrailTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._user_Audit_TrailTableAdapter]));
                    this._user_Audit_TrailTableAdapter.Transaction = null;
                }
                if ((this._connectAPITableAdapter != null)) {
                    this._connectAPITableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._connectAPITableAdapter]));
                    this._connectAPITableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591